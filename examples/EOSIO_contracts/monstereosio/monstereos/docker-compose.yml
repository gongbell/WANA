version: '3.5'

services:

  postgres:
    image: postgres:10.4
    volumes:
      - ./.dbdata/.pgsql-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      DB_NAME: monstereosio
      DB_USER: user
      DB_PASSWORD: pass
      POSTGRES_DB: monstereosio
    networks:
      monstereos:

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./.dbdata/.mongo-data:/data/db
    ports:
      - '27017:27017'
    networks:
      monstereos:

  fullnode:
    image: eosio/eos:v1.2.4
    build:
      context: ./services/eos-node
      dockerfile: Dockerfile
    image: monstereos/fullnode
    stop_grace_period: 3m0s
    ports:
      - '8840:8888'
      - '9840:9876'
    environment:
      WAIT_HOSTS: mongo:27017, eosiodev:8888
      WAIT_HOSTS_TIMEOUT: 60
      DATA_DIR: /opt/eosio/bin/data-dir
    depends_on:
      - mongo
      - eosiodev
    volumes:
      - 'fullnode:/opt/eosio/bin/data-dir'
      - './services/eos-node/config-full-node.ini:/opt/eosio/bin/data-dir/config.ini'
      # - './services/eos-node/config-main-node.ini:/opt/eosio/bin/data-dir/config.ini'
      # - './services/eos-node/mainnet-genesis.json:/opt/eosio/bin/genesis.json'
    networks:
      monstereos:

  # only required for dev
  eosiodev:
    build:
      context: ./services/eos-dev
      dockerfile: Dockerfile
    image: monstereos/eosiodev
    stop_grace_period: 3m0s
    ports:
      - '8888:8888'
      - '9830:9876'
    environment:
      DATA_DIR: /root/.local/share 
      CONFIG_DIR: /opt/application/config 
    volumes:
      - eosiodevapp:/root/.local/share
      - ./services/eos-dev:/opt/application
    networks:
      monstereos:

  demux:
    build:
      context: ./services/demux
      dockerfile: ./Dockerfile
      args:
        SERVICE: 'demux'
    image: monstereos/demux
    volumes:
      - ./services/demux:/opt/application  # mount demux service folder
      - /opt/application/node_modules # prevents host/container conflicts
    depends_on:
      - mongo
      - postgres
      - eosiodev
    environment:
      DB_USER: user
      DB_PASSWORD: pass
      DB_PORT: 5432
      DB_NAME: monstereosio
      DB_HOST: postgres
      DB_SCHEMA: pets
      CHAIN_HOST: 'http://eosiodev:8888'
      CHAIN_INIT_BLOCK: 10
      MONGO_URI: 'mongodb://mongo:27017'
      MONGO_DB: EOSFN
      WAIT_HOSTS: postgres:5432, mongo:27017
      WAIT_HOSTS_TIMEOUT: 60
    ports:
      - '3030:3030'
    networks:
      monstereos:

volumes:
  eosiodevapp:
  fullnode:

networks: 
  monstereos:
    name: monstereos