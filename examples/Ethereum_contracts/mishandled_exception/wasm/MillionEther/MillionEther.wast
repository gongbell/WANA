(module
    ;; custom section for sub-module
    ;; The Keccak-256 hash of the text representation of "MillionEther_963_deployed": 3a058ab6faa466d1d2efe5c2b17467671af5dbbeae326734bd5154ed2de47fcf
    ;; (@custom "MillionEther_963_deployed" "")
    (import "ethereum" "returnDataCopy" (func $eth.returnDataCopy (param i32 i32 i32)))
    (import "ethereum" "getTxOrigin" (func $eth.getTxOrigin (param i32)))
    (import "ethereum" "getBlockTimestamp" (func $eth.getBlockTimestamp (result i64)))
    (import "ethereum" "getExternalBalance" (func $eth.getExternalBalance (param i32 i32)))
    (import "ethereum" "getCaller" (func $eth.getCaller (param i32)))
    (import "ethereum" "create" (func $eth.create (param i32 i32 i32 i32) (result i32)))
    (import "ethereum" "getBlockCoinbase" (func $eth.getBlockCoinbase (param i32)))
    (import "ethereum" "getBlockNumber" (func $eth.getBlockNumber (result i64)))
    (import "ethereum" "codeCopy" (func $eth.codeCopy (param i32 i32 i32)))
    (import "ethereum" "getAddress" (func $eth.getAddress (param i32)))
    (import "ethereum" "call" (func $eth.call (param i64 i32 i32 i32 i32) (result i32)))
    (import "ethereum" "externalCodeCopy" (func $eth.externalCodeCopy (param i32 i32 i32 i32)))
    (import "ethereum" "log" (func $eth.log (param i32 i32 i32 i32 i32 i32 i32)))
    (import "ethereum" "storageStore" (func $eth.storageStore (param i32 i32)))
    (import "ethereum" "callCode" (func $eth.callCode (param i64 i32 i32 i32 i32) (result i32)))
    (import "ethereum" "revert" (func $eth.revert (param i32 i32)))
    (import "ethereum" "storageLoad" (func $eth.storageLoad (param i32 i32)))
    (import "ethereum" "getCallDataSize" (func $eth.getCallDataSize (result i32)))
    (import "ethereum" "callStatic" (func $eth.callStatic (param i64 i32 i32 i32) (result i32)))
    (import "ethereum" "getCallValue" (func $eth.getCallValue (param i32)))
    (import "ethereum" "getGasLeft" (func $eth.getGasLeft (result i64)))
    (import "ethereum" "getBlockHash" (func $eth.getBlockHash (param i64 i32) (result i32)))
    (import "ethereum" "getBlockGasLimit" (func $eth.getBlockGasLimit (result i64)))
    (import "ethereum" "selfDestruct" (func $eth.selfDestruct (param i32)))
    (import "ethereum" "getCodeSize" (func $eth.getCodeSize (result i32)))
    (import "ethereum" "finish" (func $eth.finish (param i32 i32)))
    (import "ethereum" "callDelegate" (func $eth.callDelegate (param i64 i32 i32 i32) (result i32)))
    (import "ethereum" "callDataCopy" (func $eth.callDataCopy (param i32 i32 i32)))
    (import "ethereum" "getExternalCodeSize" (func $eth.getExternalCodeSize (param i32) (result i32)))
    (import "ethereum" "getTxGasPrice" (func $eth.getTxGasPrice (param i32)))
    (import "ethereum" "getReturnDataSize" (func $eth.getReturnDataSize (result i32)))
    (import "ethereum" "getBlockDifficulty" (func $eth.getBlockDifficulty (param i32)))
    (memory $memory (export "memory") 1)
    (export "main" (func $main))
    (global $global_ (mut i64) (i64.const 0))
    (global $global__1 (mut i64) (i64.const 0))
    (global $global__2 (mut i64) (i64.const 0))
    (global $global__65 (mut i64) (i64.const 0))
    (global $global__67 (mut i64) (i64.const 0))
    (global $global__68 (mut i64) (i64.const 0))
    (global $global__69 (mut i64) (i64.const 0))

(func $main
    (local $_6_0 i64)
    (local $_6_1 i64)
    (local $_6_2 i64)
    (local $_6_3 i64)
    (local $_12_0 i64)
    (local $_12_1 i64)
    (local $_12_2 i64)
    (local $_12_3 i64)
    (local $_17_0 i64)
    (local $_17_1 i64)
    (local $_17_2 i64)
    (local $_17_3 i64)
    (local $_23_0 i64)
    (local $_23_1 i64)
    (local $_23_2 i64)
    (local $_23_3 i64)
    (local $_32_0 i64)
    (local $_32_1 i64)
    (local $_32_2 i64)
    (local $_32_3 i64)
    (local $_33_0 i64)
    (local $_33_1 i64)
    (local $_33_2 i64)
    (local $_33_3 i64)
    (local $_34_0 i64)
    (local $_34_1 i64)
    (local $_34_2 i64)
    (local $_34_3 i64)
    (local $_35_0 i64)
    (local $_35_1 i64)
    (local $_35_2 i64)
    (local $_35_3 i64)
    (local $_36_0 i64)
    (local $_36_1 i64)
    (local $_36_2 i64)
    (local $_36_3 i64)
    (local $_37_0 i64)
    (local $_37_1 i64)
    (local $_37_2 i64)
    (local $_37_3 i64)
    (block $label_
        (local.set $_6_0 (i64.const 0))
        (local.set $_6_1 (i64.const 0))
        (local.set $_6_2 (i64.const 0))
        (local.set $_6_3 (i64.const 128))
        (local.set $_12_0 (i64.const 0))
        (local.set $_12_1 (i64.const 0))
        (local.set $_12_2 (i64.const 0))
        (local.set $_12_3 (i64.const 64))
        (call $mstore (local.get $_12_0) (local.get $_12_1) (local.get $_12_2) (local.get $_12_3) (local.get $_6_0) (local.get $_6_1) (local.get $_6_2) (local.get $_6_3))
        (block
            (local.set $_17_0 (call $callvalue))
            (local.set $_17_1 (global.get $global_))
            (local.set $_17_2 (global.get $global__1))
            (local.set $_17_3 (global.get $global__2))

        )
        (if (call $or_bool (local.get $_17_0) (local.get $_17_1) (local.get $_17_2) (local.get $_17_3)) (then
            (local.set $_23_0 (i64.const 0))
            (local.set $_23_1 (i64.const 0))
            (local.set $_23_2 (i64.const 0))
            (local.set $_23_3 (i64.const 0))
            (local.set $_32_0 (i64.const 0))
            (local.set $_32_1 (i64.const 0))
            (local.set $_32_2 (i64.const 0))
            (local.set $_32_3 (i64.const 0))
            (call $revert (local.get $_32_0) (local.get $_32_1) (local.get $_32_2) (local.get $_32_3) (local.get $_23_0) (local.get $_23_1) (local.get $_23_2) (local.get $_23_3))))
        (call $constructor_MillionEther_963)
        (local.set $_33_0 (i64.const 0))
        (local.set $_33_1 (i64.const 0))
        (local.set $_33_2 (i64.const 0))
        (local.set $_33_3 (datasize "MillionEther_963_deployed"))
        (local.set $_34_0 (i64.const 0))
        (local.set $_34_1 (i64.const 0))
        (local.set $_34_2 (i64.const 0))
        (local.set $_34_3 (dataoffset "MillionEther_963_deployed"))
        (local.set $_35_0 (i64.const 0))
        (local.set $_35_1 (i64.const 0))
        (local.set $_35_2 (i64.const 0))
        (local.set $_35_3 (i64.const 0))
        (call $codecopy (local.get $_35_0) (local.get $_35_1) (local.get $_35_2) (local.get $_35_3) (local.get $_34_0) (local.get $_34_1) (local.get $_34_2) (local.get $_34_3) (local.get $_33_0) (local.get $_33_1) (local.get $_33_2) (local.get $_33_3))
        (local.set $_36_0 (i64.const 0))
        (local.set $_36_1 (i64.const 0))
        (local.set $_36_2 (i64.const 0))
        (local.set $_36_3 (datasize "MillionEther_963_deployed"))
        (local.set $_37_0 (i64.const 0))
        (local.set $_37_1 (i64.const 0))
        (local.set $_37_2 (i64.const 0))
        (local.set $_37_3 (i64.const 0))
        (call $return (local.get $_37_0) (local.get $_37_1) (local.get $_37_2) (local.get $_37_3) (local.get $_36_0) (local.get $_36_1) (local.get $_36_2) (local.get $_36_3))
    )
)

(func $cleanup_from_storage_t_address
    (param $value_0_138 i64)
    (param $value_1_139 i64)
    (param $value_2 i64)
    (param $value_3_140 i64)
    (result i64)
    (local $cleaned_0 i64)
    (local $cleaned_1 i64)
    (local $cleaned_2_141 i64)
    (local $cleaned_3 i64)
    (local $_38_0 i64)
    (local $_38_1 i64)
    (local $_38_2 i64)
    (local $_38_3 i64)
    (block $label__3
        (local.set $_38_0 (i64.const 0))
        (local.set $_38_1 (i64.const 4294967295))
        (local.set $_38_2 (i64.const 18446744073709551615))
        (local.set $_38_3 (i64.const 18446744073709551615))
        (block
            (local.set $cleaned_0 (call $and (local.get $value_0_138) (local.get $value_1_139) (local.get $value_2) (local.get $value_3_140) (local.get $_38_0) (local.get $_38_1) (local.get $_38_2) (local.get $_38_3)))
            (local.set $cleaned_1 (global.get $global_))
            (local.set $cleaned_2_141 (global.get $global__1))
            (local.set $cleaned_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $cleaned_1))
    (global.set $global__1 (local.get $cleaned_2_141))
    (global.set $global__2 (local.get $cleaned_3))
    (local.get $cleaned_0)
)

(func $cleanup_from_storage_t_uint256
    (param $value_1_0 i64)
    (param $value_1_1 i64)
    (param $value_1_2 i64)
    (param $value_1_3 i64)
    (result i64)
    (local $cleaned_2_0 i64)
    (local $cleaned_2_1 i64)
    (local $cleaned_2_2 i64)
    (local $cleaned_2_3 i64)
    (block $label__4
        (local.set $cleaned_2_0 (local.get $value_1_0))
        (local.set $cleaned_2_1 (local.get $value_1_1))
        (local.set $cleaned_2_2 (local.get $value_1_2))
        (local.set $cleaned_2_3 (local.get $value_1_3))

    )
    (global.set $global_ (local.get $cleaned_2_1))
    (global.set $global__1 (local.get $cleaned_2_2))
    (global.set $global__2 (local.get $cleaned_2_3))
    (local.get $cleaned_2_0)
)

(func $cleanup_t_bool
    (param $value_3_0 i64)
    (param $value_3_1 i64)
    (param $value_3_2 i64)
    (param $value_3_3 i64)
    (result i64)
    (local $cleaned_4_0 i64)
    (local $cleaned_4_1 i64)
    (local $cleaned_4_2 i64)
    (local $cleaned_4_3 i64)
    (local $_39_0 i64)
    (local $_39_1 i64)
    (local $_39_2 i64)
    (local $_39_3 i64)
    (block $label__5
        (block
            (local.set $_39_0 (call $iszero (local.get $value_3_0) (local.get $value_3_1) (local.get $value_3_2) (local.get $value_3_3)))
            (local.set $_39_1 (global.get $global_))
            (local.set $_39_2 (global.get $global__1))
            (local.set $_39_3 (global.get $global__2))

        )
        (block
            (local.set $cleaned_4_0 (call $iszero (local.get $_39_0) (local.get $_39_1) (local.get $_39_2) (local.get $_39_3)))
            (local.set $cleaned_4_1 (global.get $global_))
            (local.set $cleaned_4_2 (global.get $global__1))
            (local.set $cleaned_4_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $cleaned_4_1))
    (global.set $global__1 (local.get $cleaned_4_2))
    (global.set $global__2 (local.get $cleaned_4_3))
    (local.get $cleaned_4_0)
)

(func $cleanup_t_uint16
    (param $value_5_0 i64)
    (param $value_5_1 i64)
    (param $value_5_2 i64)
    (param $value_5_3 i64)
    (result i64)
    (local $cleaned_6_0 i64)
    (local $cleaned_6_1 i64)
    (local $cleaned_6_2 i64)
    (local $cleaned_6_3 i64)
    (local $_40_0 i64)
    (local $_40_1 i64)
    (local $_40_2 i64)
    (local $_40_3 i64)
    (block $label__6
        (local.set $_40_0 (i64.const 0))
        (local.set $_40_1 (i64.const 0))
        (local.set $_40_2 (i64.const 0))
        (local.set $_40_3 (i64.const 65535))
        (block
            (local.set $cleaned_6_0 (call $and (local.get $value_5_0) (local.get $value_5_1) (local.get $value_5_2) (local.get $value_5_3) (local.get $_40_0) (local.get $_40_1) (local.get $_40_2) (local.get $_40_3)))
            (local.set $cleaned_6_1 (global.get $global_))
            (local.set $cleaned_6_2 (global.get $global__1))
            (local.set $cleaned_6_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $cleaned_6_1))
    (global.set $global__1 (local.get $cleaned_6_2))
    (global.set $global__2 (local.get $cleaned_6_3))
    (local.get $cleaned_6_0)
)

(func $cleanup_t_uint160
    (param $value_7_0 i64)
    (param $value_7_1 i64)
    (param $value_7_2 i64)
    (param $value_7_3 i64)
    (result i64)
    (local $cleaned_8_0 i64)
    (local $cleaned_8_1 i64)
    (local $cleaned_8_2 i64)
    (local $cleaned_8_3 i64)
    (local $_41_0 i64)
    (local $_41_1 i64)
    (local $_41_2 i64)
    (local $_41_3 i64)
    (block $label__7
        (local.set $_41_0 (i64.const 0))
        (local.set $_41_1 (i64.const 4294967295))
        (local.set $_41_2 (i64.const 18446744073709551615))
        (local.set $_41_3 (i64.const 18446744073709551615))
        (block
            (local.set $cleaned_8_0 (call $and (local.get $value_7_0) (local.get $value_7_1) (local.get $value_7_2) (local.get $value_7_3) (local.get $_41_0) (local.get $_41_1) (local.get $_41_2) (local.get $_41_3)))
            (local.set $cleaned_8_1 (global.get $global_))
            (local.set $cleaned_8_2 (global.get $global__1))
            (local.set $cleaned_8_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $cleaned_8_1))
    (global.set $global__1 (local.get $cleaned_8_2))
    (global.set $global__2 (local.get $cleaned_8_3))
    (local.get $cleaned_8_0)
)

(func $cleanup_t_uint256
    (param $value_9_0 i64)
    (param $value_9_1 i64)
    (param $value_9_2 i64)
    (param $value_9_3 i64)
    (result i64)
    (local $cleaned_10_0 i64)
    (local $cleaned_10_1 i64)
    (local $cleaned_10_2 i64)
    (local $cleaned_10_3 i64)
    (block $label__8
        (local.set $cleaned_10_0 (local.get $value_9_0))
        (local.set $cleaned_10_1 (local.get $value_9_1))
        (local.set $cleaned_10_2 (local.get $value_9_2))
        (local.set $cleaned_10_3 (local.get $value_9_3))

    )
    (global.set $global_ (local.get $cleaned_10_1))
    (global.set $global__1 (local.get $cleaned_10_2))
    (global.set $global__2 (local.get $cleaned_10_3))
    (local.get $cleaned_10_0)
)

(func $cleanup_t_uint32
    (param $value_11_0 i64)
    (param $value_11_1 i64)
    (param $value_11_2 i64)
    (param $value_11_3 i64)
    (result i64)
    (local $cleaned_12_0 i64)
    (local $cleaned_12_1 i64)
    (local $cleaned_12_2 i64)
    (local $cleaned_12_3 i64)
    (local $_42_0 i64)
    (local $_42_1 i64)
    (local $_42_2 i64)
    (local $_42_3 i64)
    (block $label__9
        (local.set $_42_0 (i64.const 0))
        (local.set $_42_1 (i64.const 0))
        (local.set $_42_2 (i64.const 0))
        (local.set $_42_3 (i64.const 4294967295))
        (block
            (local.set $cleaned_12_0 (call $and (local.get $value_11_0) (local.get $value_11_1) (local.get $value_11_2) (local.get $value_11_3) (local.get $_42_0) (local.get $_42_1) (local.get $_42_2) (local.get $_42_3)))
            (local.set $cleaned_12_1 (global.get $global_))
            (local.set $cleaned_12_2 (global.get $global__1))
            (local.set $cleaned_12_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $cleaned_12_1))
    (global.set $global__1 (local.get $cleaned_12_2))
    (global.set $global__2 (local.get $cleaned_12_3))
    (local.get $cleaned_12_0)
)

(func $cleanup_t_uint8
    (param $value_13_0 i64)
    (param $value_13_1 i64)
    (param $value_13_2 i64)
    (param $value_13_3 i64)
    (result i64)
    (local $cleaned_14_0 i64)
    (local $cleaned_14_1 i64)
    (local $cleaned_14_2 i64)
    (local $cleaned_14_3 i64)
    (local $_43_0 i64)
    (local $_43_1 i64)
    (local $_43_2 i64)
    (local $_43_3 i64)
    (block $label__10
        (local.set $_43_0 (i64.const 0))
        (local.set $_43_1 (i64.const 0))
        (local.set $_43_2 (i64.const 0))
        (local.set $_43_3 (i64.const 255))
        (block
            (local.set $cleaned_14_0 (call $and (local.get $value_13_0) (local.get $value_13_1) (local.get $value_13_2) (local.get $value_13_3) (local.get $_43_0) (local.get $_43_1) (local.get $_43_2) (local.get $_43_3)))
            (local.set $cleaned_14_1 (global.get $global_))
            (local.set $cleaned_14_2 (global.get $global__1))
            (local.set $cleaned_14_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $cleaned_14_1))
    (global.set $global__1 (local.get $cleaned_14_2))
    (global.set $global__2 (local.get $cleaned_14_3))
    (local.get $cleaned_14_0)
)

(func $constructor_MillionEther_963
    (local $expr_4_0 i64)
    (local $expr_4_1 i64)
    (local $expr_4_2 i64)
    (local $expr_4_3 i64)
    (local $_44_0 i64)
    (local $_44_1 i64)
    (local $_44_2 i64)
    (local $_44_3 i64)
    (local $expr_32_0 i64)
    (local $expr_32_1 i64)
    (local $expr_32_2 i64)
    (local $expr_32_3 i64)
    (local $_45_0 i64)
    (local $_45_1 i64)
    (local $_45_2 i64)
    (local $_45_3 i64)
    (local $expr_35_0 i64)
    (local $expr_35_1 i64)
    (local $expr_35_2 i64)
    (local $expr_35_3 i64)
    (local $_46_0 i64)
    (local $_46_1 i64)
    (local $_46_2 i64)
    (local $_46_3 i64)
    (local $expr_51_0 i64)
    (local $expr_51_1 i64)
    (local $expr_51_2 i64)
    (local $expr_51_3 i64)
    (local $_47_0 i64)
    (local $_47_1 i64)
    (local $_47_2 i64)
    (local $_47_3 i64)
    (local $expr_73_0 i64)
    (local $expr_73_1 i64)
    (local $expr_73_2 i64)
    (local $expr_73_3 i64)
    (local $_48_0 i64)
    (local $_48_1 i64)
    (local $_48_2 i64)
    (local $_48_3 i64)
    (local $expr_78_0 i64)
    (local $expr_78_1 i64)
    (local $expr_78_2 i64)
    (local $expr_78_3 i64)
    (local $_49_0 i64)
    (local $_49_1 i64)
    (local $_49_2 i64)
    (local $_49_3 i64)
    (local $expr_81_0 i64)
    (local $expr_81_1 i64)
    (local $expr_81_2 i64)
    (local $expr_81_3 i64)
    (local $_50_0 i64)
    (local $_50_1 i64)
    (local $_50_2 i64)
    (local $_50_3 i64)
    (local $expr_84_0 i64)
    (local $expr_84_1 i64)
    (local $expr_84_2 i64)
    (local $expr_84_3 i64)
    (local $_51_0 i64)
    (local $_51_1 i64)
    (local $_51_2 i64)
    (local $_51_3 i64)
    (local $expr_87_0 i64)
    (local $expr_87_1 i64)
    (local $expr_87_2 i64)
    (local $expr_87_3 i64)
    (local $_52_0 i64)
    (local $_52_1 i64)
    (local $_52_2 i64)
    (local $_52_3 i64)
    (local $expr_90_0 i64)
    (local $expr_90_1 i64)
    (local $expr_90_2 i64)
    (local $expr_90_3 i64)
    (local $_53_0 i64)
    (local $_53_1 i64)
    (local $_53_2 i64)
    (local $_53_3 i64)
    (local $expr_93_0 i64)
    (local $expr_93_1 i64)
    (local $expr_93_2 i64)
    (local $expr_93_3 i64)
    (local $_54_0 i64)
    (local $_54_1 i64)
    (local $_54_2 i64)
    (local $_54_3 i64)
    (local $expr_141_0 i64)
    (local $expr_141_1 i64)
    (local $expr_141_2 i64)
    (local $expr_141_3 i64)
    (local $_1_0 i64)
    (local $_1_1 i64)
    (local $_1_2 i64)
    (local $_1_3 i64)
    (local $_55_0 i64)
    (local $_55_1 i64)
    (local $_55_2 i64)
    (local $_55_3 i64)
    (local $expr_142_0 i64)
    (local $expr_142_1 i64)
    (local $expr_142_2 i64)
    (local $expr_142_3 i64)
    (local $_56_0 i64)
    (local $_56_1 i64)
    (local $_56_2 i64)
    (local $_56_3 i64)
    (local $_2_0 i64)
    (local $_2_1 i64)
    (local $_2_2 i64)
    (local $_2_3 i64)
    (local $expr_148_0 i64)
    (local $expr_148_1 i64)
    (local $expr_148_2 i64)
    (local $expr_148_3 i64)
    (local $_3_0 i64)
    (local $_3_1 i64)
    (local $_3_2 i64)
    (local $_3_3 i64)
    (local $expr_144_0 i64)
    (local $expr_144_1 i64)
    (local $expr_144_2 i64)
    (local $expr_144_3 i64)
    (local $_57_0 i64)
    (local $_57_1 i64)
    (local $_57_2 i64)
    (local $_57_3 i64)
    (local $_4_0 i64)
    (local $_4_1 i64)
    (local $_4_2 i64)
    (local $_4_3 i64)
    (local $expr_145_0 i64)
    (local $expr_145_1 i64)
    (local $expr_145_2 i64)
    (local $expr_145_3 i64)
    (local $_5_0 i64)
    (local $_5_1 i64)
    (local $_5_2 i64)
    (local $_5_3 i64)
    (local $_6_slot_0 i64)
    (local $_6_slot_1 i64)
    (local $_6_slot_2 i64)
    (local $_6_slot_3 i64)
    (local $expr_146_slot_0 i64)
    (local $expr_146_slot_1 i64)
    (local $expr_146_slot_2 i64)
    (local $expr_146_slot_3 i64)
    (local $_58_0 i64)
    (local $_58_1 i64)
    (local $_58_2 i64)
    (local $_58_3 i64)
    (local $_7_0 i64)
    (local $_7_1 i64)
    (local $_7_2 i64)
    (local $_7_3 i64)
    (local $expr_149_0 i64)
    (local $expr_149_1 i64)
    (local $expr_149_2 i64)
    (local $expr_149_3 i64)
    (local $expr_155_0 i64)
    (local $expr_155_1 i64)
    (local $expr_155_2 i64)
    (local $expr_155_3 i64)
    (local $_8_0 i64)
    (local $_8_1 i64)
    (local $_8_2 i64)
    (local $_8_3 i64)
    (local $_9_0 i64)
    (local $_9_1 i64)
    (local $_9_2 i64)
    (local $_9_3 i64)
    (local $expr_151_0 i64)
    (local $expr_151_1 i64)
    (local $expr_151_2 i64)
    (local $expr_151_3 i64)
    (local $_59_0 i64)
    (local $_59_1 i64)
    (local $_59_2 i64)
    (local $_59_3 i64)
    (local $_10_0 i64)
    (local $_10_1 i64)
    (local $_10_2 i64)
    (local $_10_3 i64)
    (local $expr_152_0 i64)
    (local $expr_152_1 i64)
    (local $expr_152_2 i64)
    (local $expr_152_3 i64)
    (local $_11_0 i64)
    (local $_11_1 i64)
    (local $_11_2 i64)
    (local $_11_3 i64)
    (local $_12_slot_0 i64)
    (local $_12_slot_1 i64)
    (local $_12_slot_2 i64)
    (local $_12_slot_3 i64)
    (local $expr_153_slot_0 i64)
    (local $expr_153_slot_1 i64)
    (local $expr_153_slot_2 i64)
    (local $expr_153_slot_3 i64)
    (local $_60_0 i64)
    (local $_60_1 i64)
    (local $_60_2 i64)
    (local $_60_3 i64)
    (local $_13_0 i64)
    (local $_13_1 i64)
    (local $_13_2 i64)
    (local $_13_3 i64)
    (local $expr_156_0 i64)
    (local $expr_156_1 i64)
    (local $expr_156_2 i64)
    (local $expr_156_3 i64)
    (local $expr_165_0 i64)
    (local $expr_165_1 i64)
    (local $expr_165_2 i64)
    (local $expr_165_3 i64)
    (local $expr_166_0 i64)
    (local $expr_166_1 i64)
    (local $expr_166_2 i64)
    (local $expr_166_3 i64)
    (local $_14_0 i64)
    (local $_14_1 i64)
    (local $_14_2 i64)
    (local $_14_3 i64)
    (local $expr_158_0 i64)
    (local $expr_158_1 i64)
    (local $expr_158_2 i64)
    (local $expr_158_3 i64)
    (local $_61_0 i64)
    (local $_61_1 i64)
    (local $_61_2 i64)
    (local $_61_3 i64)
    (local $_15_0 i64)
    (local $_15_1 i64)
    (local $_15_2 i64)
    (local $_15_3 i64)
    (local $expr_159_0 i64)
    (local $expr_159_1 i64)
    (local $expr_159_2 i64)
    (local $expr_159_3 i64)
    (local $_16_0 i64)
    (local $_16_1 i64)
    (local $_16_2 i64)
    (local $_16_3 i64)
    (local $_17_slot_0 i64)
    (local $_17_slot_1 i64)
    (local $_17_slot_2 i64)
    (local $_17_slot_3 i64)
    (local $expr_160_slot_0 i64)
    (local $expr_160_slot_1 i64)
    (local $expr_160_slot_2 i64)
    (local $expr_160_slot_3 i64)
    (local $_62_0 i64)
    (local $_62_1 i64)
    (local $_62_2 i64)
    (local $_62_3 i64)
    (local $_18_0 i64)
    (local $_18_1 i64)
    (local $_18_2 i64)
    (local $_18_3 i64)
    (local $expr_167_0 i64)
    (local $expr_167_1 i64)
    (local $expr_167_2 i64)
    (local $expr_167_3 i64)
    (local $expr_173_0 i64)
    (local $expr_173_1 i64)
    (local $expr_173_2 i64)
    (local $expr_173_3 i64)
    (local $_19_0 i64)
    (local $_19_1 i64)
    (local $_19_2 i64)
    (local $_19_3 i64)
    (local $_20_0 i64)
    (local $_20_1 i64)
    (local $_20_2 i64)
    (local $_20_3 i64)
    (local $expr_169_0 i64)
    (local $expr_169_1 i64)
    (local $expr_169_2 i64)
    (local $expr_169_3 i64)
    (local $_63_0 i64)
    (local $_63_1 i64)
    (local $_63_2 i64)
    (local $_63_3 i64)
    (local $_21_0 i64)
    (local $_21_1 i64)
    (local $_21_2 i64)
    (local $_21_3 i64)
    (local $expr_170_0 i64)
    (local $expr_170_1 i64)
    (local $expr_170_2 i64)
    (local $expr_170_3 i64)
    (local $_22_0 i64)
    (local $_22_1 i64)
    (local $_22_2 i64)
    (local $_22_3 i64)
    (local $_23_slot_0 i64)
    (local $_23_slot_1 i64)
    (local $_23_slot_2 i64)
    (local $_23_slot_3 i64)
    (local $expr_171_slot_0 i64)
    (local $expr_171_slot_1 i64)
    (local $expr_171_slot_2 i64)
    (local $expr_171_slot_3 i64)
    (local $_64_0 i64)
    (local $_64_1 i64)
    (local $_64_2 i64)
    (local $_64_3 i64)
    (local $_24_0 i64)
    (local $_24_1 i64)
    (local $_24_2 i64)
    (local $_24_3 i64)
    (local $expr_174_0 i64)
    (local $expr_174_1 i64)
    (local $expr_174_2 i64)
    (local $expr_174_3 i64)
    (local $_65_0 i64)
    (local $_65_1 i64)
    (local $_65_2 i64)
    (local $_65_3 i64)
    (local $_25_0 i64)
    (local $_25_1 i64)
    (local $_25_2 i64)
    (local $_25_3 i64)
    (local $expr_179_0 i64)
    (local $expr_179_1 i64)
    (local $expr_179_2 i64)
    (local $expr_179_3 i64)
    (local $_26_0 i64)
    (local $_26_1 i64)
    (local $_26_2 i64)
    (local $_26_3 i64)
    (local $expr_176_0 i64)
    (local $expr_176_1 i64)
    (local $expr_176_2 i64)
    (local $expr_176_3 i64)
    (local $expr_177_0 i64)
    (local $expr_177_1 i64)
    (local $expr_177_2 i64)
    (local $expr_177_3 i64)
    (local $_27_0 i64)
    (local $_27_1 i64)
    (local $_27_2 i64)
    (local $_27_3 i64)
    (local $expr_180_0 i64)
    (local $expr_180_1 i64)
    (local $expr_180_2 i64)
    (local $expr_180_3 i64)
    (local $_66_0 i64)
    (local $_66_1 i64)
    (local $_66_2 i64)
    (local $_66_3 i64)
    (local $_28_0 i64)
    (local $_28_1 i64)
    (local $_28_2 i64)
    (local $_28_3 i64)
    (local $expr_185_0 i64)
    (local $expr_185_1 i64)
    (local $expr_185_2 i64)
    (local $expr_185_3 i64)
    (local $_29_0 i64)
    (local $_29_1 i64)
    (local $_29_2 i64)
    (local $_29_3 i64)
    (local $expr_182_0 i64)
    (local $expr_182_1 i64)
    (local $expr_182_2 i64)
    (local $expr_182_3 i64)
    (local $_67_0 i64)
    (local $_67_1 i64)
    (local $_67_2 i64)
    (local $_67_3 i64)
    (local $_30_0 i64)
    (local $_30_1 i64)
    (local $_30_2 i64)
    (local $_30_3 i64)
    (local $expr_183_0 i64)
    (local $expr_183_1 i64)
    (local $expr_183_2 i64)
    (local $expr_183_3 i64)
    (local $_31_0 i64)
    (local $_31_1 i64)
    (local $_31_2 i64)
    (local $_31_3 i64)
    (local $expr_186_0 i64)
    (local $expr_186_1 i64)
    (local $expr_186_2 i64)
    (local $expr_186_3 i64)
    (block $label__11
        (local.set $expr_4_0 (i64.const 0))
        (local.set $expr_4_1 (i64.const 0))
        (local.set $expr_4_2 (i64.const 0))
        (local.set $expr_4_3 (i64.const 0))
        (local.set $_44_0 (i64.const 0))
        (local.set $_44_1 (i64.const 0))
        (local.set $_44_2 (i64.const 0))
        (local.set $_44_3 (i64.const 1))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256 (local.get $_44_0) (local.get $_44_1) (local.get $_44_2) (local.get $_44_3) (local.get $expr_4_0) (local.get $expr_4_1) (local.get $expr_4_2) (local.get $expr_4_3))
        (local.set $expr_32_0 (i64.const 0))
        (local.set $expr_32_1 (i64.const 0))
        (local.set $expr_32_2 (i64.const 0))
        (local.set $expr_32_3 (i64.const 0))
        (local.set $_45_0 (i64.const 0))
        (local.set $_45_1 (i64.const 0))
        (local.set $_45_2 (i64.const 0))
        (local.set $_45_3 (i64.const 4))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint16 (local.get $_45_0) (local.get $_45_1) (local.get $_45_2) (local.get $_45_3) (local.get $expr_32_0) (local.get $expr_32_1) (local.get $expr_32_2) (local.get $expr_32_3))
        (local.set $expr_35_0 (i64.const 0))
        (local.set $expr_35_1 (i64.const 0))
        (local.set $expr_35_2 (i64.const 0))
        (local.set $expr_35_3 (i64.const 0))
        (local.set $_46_0 (i64.const 0))
        (local.set $_46_1 (i64.const 0))
        (local.set $_46_2 (i64.const 0))
        (local.set $_46_3 (i64.const 5))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256 (local.get $_46_0) (local.get $_46_1) (local.get $_46_2) (local.get $_46_3) (local.get $expr_35_0) (local.get $expr_35_1) (local.get $expr_35_2) (local.get $expr_35_3))
        (local.set $expr_51_0 (i64.const 0))
        (local.set $expr_51_1 (i64.const 0))
        (local.set $expr_51_2 (i64.const 0))
        (local.set $expr_51_3 (i64.const 0))
        (local.set $_47_0 (i64.const 0))
        (local.set $_47_1 (i64.const 0))
        (local.set $_47_2 (i64.const 0))
        (local.set $_47_3 (i64.const 30609))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256 (local.get $_47_0) (local.get $_47_1) (local.get $_47_2) (local.get $_47_3) (local.get $expr_51_0) (local.get $expr_51_1) (local.get $expr_51_2) (local.get $expr_51_3))
        (local.set $expr_73_0 (i64.const 0))
        (local.set $expr_73_1 (i64.const 0))
        (local.set $expr_73_2 (i64.const 0))
        (local.set $expr_73_3 (i64.const 0))
        (local.set $_48_0 (i64.const 0))
        (local.set $_48_1 (i64.const 0))
        (local.set $_48_2 (i64.const 0))
        (local.set $_48_3 (i64.const 30611))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256 (local.get $_48_0) (local.get $_48_1) (local.get $_48_2) (local.get $_48_3) (local.get $expr_73_0) (local.get $expr_73_1) (local.get $expr_73_2) (local.get $expr_73_3))
        (local.set $expr_78_0 (i64.const 0))
        (local.set $expr_78_1 (i64.const 0))
        (local.set $expr_78_2 (i64.const 0))
        (local.set $expr_78_3 (i64.const 0))
        (local.set $_49_0 (i64.const 0))
        (local.set $_49_1 (i64.const 0))
        (local.set $_49_2 (i64.const 0))
        (local.set $_49_3 (i64.const 30612))
        (call $update_storage_value_offset_20t_rational_0_by_1_to_t_uint8 (local.get $_49_0) (local.get $_49_1) (local.get $_49_2) (local.get $_49_3) (local.get $expr_78_0) (local.get $expr_78_1) (local.get $expr_78_2) (local.get $expr_78_3))
        (local.set $expr_81_0 (i64.const 0))
        (local.set $expr_81_1 (i64.const 0))
        (local.set $expr_81_2 (i64.const 0))
        (local.set $expr_81_3 (i64.const 0))
        (local.set $_50_0 (i64.const 0))
        (local.set $_50_1 (i64.const 0))
        (local.set $_50_2 (i64.const 0))
        (local.set $_50_3 (i64.const 30613))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256 (local.get $_50_0) (local.get $_50_1) (local.get $_50_2) (local.get $_50_3) (local.get $expr_81_0) (local.get $expr_81_1) (local.get $expr_81_2) (local.get $expr_81_3))
        (local.set $expr_84_0 (i64.const 0))
        (local.set $expr_84_1 (i64.const 0))
        (local.set $expr_84_2 (i64.const 0))
        (local.set $expr_84_3 (i64.const 0))
        (local.set $_51_0 (i64.const 0))
        (local.set $_51_1 (i64.const 0))
        (local.set $_51_2 (i64.const 0))
        (local.set $_51_3 (i64.const 30614))
        (call $update_storage_value_offset_0t_bool_to_t_bool (local.get $_51_0) (local.get $_51_1) (local.get $_51_2) (local.get $_51_3) (local.get $expr_84_0) (local.get $expr_84_1) (local.get $expr_84_2) (local.get $expr_84_3))
        (local.set $expr_87_0 (i64.const 0))
        (local.set $expr_87_1 (i64.const 0))
        (local.set $expr_87_2 (i64.const 0))
        (local.set $expr_87_3 (i64.const 0))
        (local.set $_52_0 (i64.const 0))
        (local.set $_52_1 (i64.const 0))
        (local.set $_52_2 (i64.const 0))
        (local.set $_52_3 (i64.const 30614))
        (call $update_storage_value_offset_1t_bool_to_t_bool (local.get $_52_0) (local.get $_52_1) (local.get $_52_2) (local.get $_52_3) (local.get $expr_87_0) (local.get $expr_87_1) (local.get $expr_87_2) (local.get $expr_87_3))
        (local.set $expr_90_0 (i64.const 0))
        (local.set $expr_90_1 (i64.const 0))
        (local.set $expr_90_2 (i64.const 0))
        (local.set $expr_90_3 (i64.const 3600))
        (local.set $_53_0 (i64.const 0))
        (local.set $_53_1 (i64.const 0))
        (local.set $_53_2 (i64.const 0))
        (local.set $_53_3 (i64.const 30614))
        (call $update_storage_value_offset_2t_rational_3600_by_1_to_t_uint32 (local.get $_53_0) (local.get $_53_1) (local.get $_53_2) (local.get $_53_3) (local.get $expr_90_0) (local.get $expr_90_1) (local.get $expr_90_2) (local.get $expr_90_3))
        (local.set $expr_93_0 (i64.const 0))
        (local.set $expr_93_1 (i64.const 0))
        (local.set $expr_93_2 (i64.const 0))
        (local.set $expr_93_3 (i64.const 0))
        (local.set $_54_0 (i64.const 0))
        (local.set $_54_1 (i64.const 0))
        (local.set $_54_2 (i64.const 0))
        (local.set $_54_3 (i64.const 30615))
        (call $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256 (local.get $_54_0) (local.get $_54_1) (local.get $_54_2) (local.get $_54_3) (local.get $expr_93_0) (local.get $expr_93_1) (local.get $expr_93_2) (local.get $expr_93_3))
        (block
            (local.set $expr_141_0 (call $caller))
            (local.set $expr_141_1 (global.get $global_))
            (local.set $expr_141_2 (global.get $global__1))
            (local.set $expr_141_3 (global.get $global__2))

        )
        (block
            (local.set $_1_0 (call $convert_t_address_payable_to_t_address (local.get $expr_141_0) (local.get $expr_141_1) (local.get $expr_141_2) (local.get $expr_141_3)))
            (local.set $_1_1 (global.get $global_))
            (local.set $_1_2 (global.get $global__1))
            (local.set $_1_3 (global.get $global__2))

        )
        (local.set $_55_0 (i64.const 0))
        (local.set $_55_1 (i64.const 0))
        (local.set $_55_2 (i64.const 0))
        (local.set $_55_3 (i64.const 0))
        (call $update_storage_value_offset_0t_address_to_t_address (local.get $_55_0) (local.get $_55_1) (local.get $_55_2) (local.get $_55_3) (local.get $_1_0) (local.get $_1_1) (local.get $_1_2) (local.get $_1_3))
        (local.set $expr_142_0 (local.get $_1_0))
        (local.set $expr_142_1 (local.get $_1_1))
        (local.set $expr_142_2 (local.get $_1_2))
        (local.set $expr_142_3 (local.get $_1_3))
        (local.set $_56_0 (i64.const 0))
        (local.set $_56_1 (i64.const 0))
        (local.set $_56_2 (i64.const 0))
        (local.set $_56_3 (i64.const 0))
        (block
            (local.set $_2_0 (call $read_from_storage_split_offset_0_t_address (local.get $_56_0) (local.get $_56_1) (local.get $_56_2) (local.get $_56_3)))
            (local.set $_2_1 (global.get $global_))
            (local.set $_2_2 (global.get $global__1))
            (local.set $_2_3 (global.get $global__2))

        )
        (local.set $expr_148_0 (local.get $_2_0))
        (local.set $expr_148_1 (local.get $_2_1))
        (local.set $expr_148_2 (local.get $_2_2))
        (local.set $expr_148_3 (local.get $_2_3))
        (local.set $_3_0 (i64.const 0))
        (local.set $_3_1 (i64.const 0))
        (local.set $_3_2 (i64.const 0))
        (local.set $_3_3 (i64.const 2))
        (local.set $expr_144_0 (local.get $_3_0))
        (local.set $expr_144_1 (local.get $_3_1))
        (local.set $expr_144_2 (local.get $_3_2))
        (local.set $expr_144_3 (local.get $_3_3))
        (local.set $_57_0 (i64.const 0))
        (local.set $_57_1 (i64.const 0))
        (local.set $_57_2 (i64.const 0))
        (local.set $_57_3 (i64.const 0))
        (block
            (local.set $_4_0 (call $read_from_storage_split_offset_0_t_address (local.get $_57_0) (local.get $_57_1) (local.get $_57_2) (local.get $_57_3)))
            (local.set $_4_1 (global.get $global_))
            (local.set $_4_2 (global.get $global__1))
            (local.set $_4_3 (global.get $global__2))

        )
        (local.set $expr_145_0 (local.get $_4_0))
        (local.set $expr_145_1 (local.get $_4_1))
        (local.set $expr_145_2 (local.get $_4_2))
        (local.set $expr_145_3 (local.get $_4_3))
        (block
            (local.set $_5_0 (call $mapping_index_access_t_mapping$_t_address_$_t_struct$_User_$22_storage_$_of_t_address (local.get $expr_144_0) (local.get $expr_144_1) (local.get $expr_144_2) (local.get $expr_144_3) (local.get $expr_145_0) (local.get $expr_145_1) (local.get $expr_145_2) (local.get $expr_145_3)))
            (local.set $_5_1 (global.get $global_))
            (local.set $_5_2 (global.get $global__1))
            (local.set $_5_3 (global.get $global__2))

        )
        (local.set $_6_slot_0 (local.get $_5_0))
        (local.set $_6_slot_1 (local.get $_5_1))
        (local.set $_6_slot_2 (local.get $_5_2))
        (local.set $_6_slot_3 (local.get $_5_3))
        (local.set $expr_146_slot_0 (local.get $_6_slot_0))
        (local.set $expr_146_slot_1 (local.get $_6_slot_1))
        (local.set $expr_146_slot_2 (local.get $_6_slot_2))
        (local.set $expr_146_slot_3 (local.get $_6_slot_3))
        (local.set $_58_0 (i64.const 0))
        (local.set $_58_1 (i64.const 0))
        (local.set $_58_2 (i64.const 0))
        (local.set $_58_3 (i64.const 0))
        (block
            (local.set $_7_0 (call $add (local.get $expr_146_slot_0) (local.get $expr_146_slot_1) (local.get $expr_146_slot_2) (local.get $expr_146_slot_3) (local.get $_58_0) (local.get $_58_1) (local.get $_58_2) (local.get $_58_3)))
            (local.set $_7_1 (global.get $global_))
            (local.set $_7_2 (global.get $global__1))
            (local.set $_7_3 (global.get $global__2))

        )
        (call $update_storage_value_offset_0t_address_to_t_address (local.get $_7_0) (local.get $_7_1) (local.get $_7_2) (local.get $_7_3) (local.get $expr_148_0) (local.get $expr_148_1) (local.get $expr_148_2) (local.get $expr_148_3))
        (local.set $expr_149_0 (local.get $expr_148_0))
        (local.set $expr_149_1 (local.get $expr_148_1))
        (local.set $expr_149_2 (local.get $expr_148_2))
        (local.set $expr_149_3 (local.get $expr_148_3))
        (local.set $expr_155_0 (i64.const 0))
        (local.set $expr_155_1 (i64.const 0))
        (local.set $expr_155_2 (i64.const 0))
        (local.set $expr_155_3 (i64.const 0))
        (block
            (local.set $_8_0 (call $convert_t_rational_0_by_1_to_t_uint8 (local.get $expr_155_0) (local.get $expr_155_1) (local.get $expr_155_2) (local.get $expr_155_3)))
            (local.set $_8_1 (global.get $global_))
            (local.set $_8_2 (global.get $global__1))
            (local.set $_8_3 (global.get $global__2))

        )
        (local.set $_9_0 (i64.const 0))
        (local.set $_9_1 (i64.const 0))
        (local.set $_9_2 (i64.const 0))
        (local.set $_9_3 (i64.const 2))
        (local.set $expr_151_0 (local.get $_9_0))
        (local.set $expr_151_1 (local.get $_9_1))
        (local.set $expr_151_2 (local.get $_9_2))
        (local.set $expr_151_3 (local.get $_9_3))
        (local.set $_59_0 (i64.const 0))
        (local.set $_59_1 (i64.const 0))
        (local.set $_59_2 (i64.const 0))
        (local.set $_59_3 (i64.const 0))
        (block
            (local.set $_10_0 (call $read_from_storage_split_offset_0_t_address (local.get $_59_0) (local.get $_59_1) (local.get $_59_2) (local.get $_59_3)))
            (local.set $_10_1 (global.get $global_))
            (local.set $_10_2 (global.get $global__1))
            (local.set $_10_3 (global.get $global__2))

        )
        (local.set $expr_152_0 (local.get $_10_0))
        (local.set $expr_152_1 (local.get $_10_1))
        (local.set $expr_152_2 (local.get $_10_2))
        (local.set $expr_152_3 (local.get $_10_3))
        (block
            (local.set $_11_0 (call $mapping_index_access_t_mapping$_t_address_$_t_struct$_User_$22_storage_$_of_t_address (local.get $expr_151_0) (local.get $expr_151_1) (local.get $expr_151_2) (local.get $expr_151_3) (local.get $expr_152_0) (local.get $expr_152_1) (local.get $expr_152_2) (local.get $expr_152_3)))
            (local.set $_11_1 (global.get $global_))
            (local.set $_11_2 (global.get $global__1))
            (local.set $_11_3 (global.get $global__2))

        )
        (local.set $_12_slot_0 (local.get $_11_0))
        (local.set $_12_slot_1 (local.get $_11_1))
        (local.set $_12_slot_2 (local.get $_11_2))
        (local.set $_12_slot_3 (local.get $_11_3))
        (local.set $expr_153_slot_0 (local.get $_12_slot_0))
        (local.set $expr_153_slot_1 (local.get $_12_slot_1))
        (local.set $expr_153_slot_2 (local.get $_12_slot_2))
        (local.set $expr_153_slot_3 (local.get $_12_slot_3))
        (local.set $_60_0 (i64.const 0))
        (local.set $_60_1 (i64.const 0))
        (local.set $_60_2 (i64.const 0))
        (local.set $_60_3 (i64.const 0))
        (block
            (local.set $_13_0 (call $add (local.get $expr_153_slot_0) (local.get $expr_153_slot_1) (local.get $expr_153_slot_2) (local.get $expr_153_slot_3) (local.get $_60_0) (local.get $_60_1) (local.get $_60_2) (local.get $_60_3)))
            (local.set $_13_1 (global.get $global_))
            (local.set $_13_2 (global.get $global__1))
            (local.set $_13_3 (global.get $global__2))

        )
        (call $update_storage_value_offset_20t_uint8_to_t_uint8 (local.get $_13_0) (local.get $_13_1) (local.get $_13_2) (local.get $_13_3) (local.get $_8_0) (local.get $_8_1) (local.get $_8_2) (local.get $_8_3))
        (local.set $expr_156_0 (local.get $_8_0))
        (local.set $expr_156_1 (local.get $_8_1))
        (local.set $expr_156_2 (local.get $_8_2))
        (local.set $expr_156_3 (local.get $_8_3))
        (block
            (local.set $expr_165_0 (call $timestamp))
            (local.set $expr_165_1 (global.get $global_))
            (local.set $expr_165_2 (global.get $global__1))
            (local.set $expr_165_3 (global.get $global__2))

        )
        (block
            (local.set $expr_166_0 (call $convert_t_uint256_to_t_uint32 (local.get $expr_165_0) (local.get $expr_165_1) (local.get $expr_165_2) (local.get $expr_165_3)))
            (local.set $expr_166_1 (global.get $global_))
            (local.set $expr_166_2 (global.get $global__1))
            (local.set $expr_166_3 (global.get $global__2))

        )
        (local.set $_14_0 (i64.const 0))
        (local.set $_14_1 (i64.const 0))
        (local.set $_14_2 (i64.const 0))
        (local.set $_14_3 (i64.const 2))
        (local.set $expr_158_0 (local.get $_14_0))
        (local.set $expr_158_1 (local.get $_14_1))
        (local.set $expr_158_2 (local.get $_14_2))
        (local.set $expr_158_3 (local.get $_14_3))
        (local.set $_61_0 (i64.const 0))
        (local.set $_61_1 (i64.const 0))
        (local.set $_61_2 (i64.const 0))
        (local.set $_61_3 (i64.const 0))
        (block
            (local.set $_15_0 (call $read_from_storage_split_offset_0_t_address (local.get $_61_0) (local.get $_61_1) (local.get $_61_2) (local.get $_61_3)))
            (local.set $_15_1 (global.get $global_))
            (local.set $_15_2 (global.get $global__1))
            (local.set $_15_3 (global.get $global__2))

        )
        (local.set $expr_159_0 (local.get $_15_0))
        (local.set $expr_159_1 (local.get $_15_1))
        (local.set $expr_159_2 (local.get $_15_2))
        (local.set $expr_159_3 (local.get $_15_3))
        (block
            (local.set $_16_0 (call $mapping_index_access_t_mapping$_t_address_$_t_struct$_User_$22_storage_$_of_t_address (local.get $expr_158_0) (local.get $expr_158_1) (local.get $expr_158_2) (local.get $expr_158_3) (local.get $expr_159_0) (local.get $expr_159_1) (local.get $expr_159_2) (local.get $expr_159_3)))
            (local.set $_16_1 (global.get $global_))
            (local.set $_16_2 (global.get $global__1))
            (local.set $_16_3 (global.get $global__2))

        )
        (local.set $_17_slot_0 (local.get $_16_0))
        (local.set $_17_slot_1 (local.get $_16_1))
        (local.set $_17_slot_2 (local.get $_16_2))
        (local.set $_17_slot_3 (local.get $_16_3))
        (local.set $expr_160_slot_0 (local.get $_17_slot_0))
        (local.set $expr_160_slot_1 (local.get $_17_slot_1))
        (local.set $expr_160_slot_2 (local.get $_17_slot_2))
        (local.set $expr_160_slot_3 (local.get $_17_slot_3))
        (local.set $_62_0 (i64.const 0))
        (local.set $_62_1 (i64.const 0))
        (local.set $_62_2 (i64.const 0))
        (local.set $_62_3 (i64.const 2))
        (block
            (local.set $_18_0 (call $add (local.get $expr_160_slot_0) (local.get $expr_160_slot_1) (local.get $expr_160_slot_2) (local.get $expr_160_slot_3) (local.get $_62_0) (local.get $_62_1) (local.get $_62_2) (local.get $_62_3)))
            (local.set $_18_1 (global.get $global_))
            (local.set $_18_2 (global.get $global__1))
            (local.set $_18_3 (global.get $global__2))

        )
        (call $update_storage_value_offset_0t_uint32_to_t_uint32 (local.get $_18_0) (local.get $_18_1) (local.get $_18_2) (local.get $_18_3) (local.get $expr_166_0) (local.get $expr_166_1) (local.get $expr_166_2) (local.get $expr_166_3))
        (local.set $expr_167_0 (local.get $expr_166_0))
        (local.set $expr_167_1 (local.get $expr_166_1))
        (local.set $expr_167_2 (local.get $expr_166_2))
        (local.set $expr_167_3 (local.get $expr_166_3))
        (local.set $expr_173_0 (i64.const 0))
        (local.set $expr_173_1 (i64.const 0))
        (local.set $expr_173_2 (i64.const 0))
        (local.set $expr_173_3 (i64.const 0))
        (block
            (local.set $_19_0 (call $convert_t_rational_0_by_1_to_t_uint256 (local.get $expr_173_0) (local.get $expr_173_1) (local.get $expr_173_2) (local.get $expr_173_3)))
            (local.set $_19_1 (global.get $global_))
            (local.set $_19_2 (global.get $global__1))
            (local.set $_19_3 (global.get $global__2))

        )
        (local.set $_20_0 (i64.const 0))
        (local.set $_20_1 (i64.const 0))
        (local.set $_20_2 (i64.const 0))
        (local.set $_20_3 (i64.const 2))
        (local.set $expr_169_0 (local.get $_20_0))
        (local.set $expr_169_1 (local.get $_20_1))
        (local.set $expr_169_2 (local.get $_20_2))
        (local.set $expr_169_3 (local.get $_20_3))
        (local.set $_63_0 (i64.const 0))
        (local.set $_63_1 (i64.const 0))
        (local.set $_63_2 (i64.const 0))
        (local.set $_63_3 (i64.const 0))
        (block
            (local.set $_21_0 (call $read_from_storage_split_offset_0_t_address (local.get $_63_0) (local.get $_63_1) (local.get $_63_2) (local.get $_63_3)))
            (local.set $_21_1 (global.get $global_))
            (local.set $_21_2 (global.get $global__1))
            (local.set $_21_3 (global.get $global__2))

        )
        (local.set $expr_170_0 (local.get $_21_0))
        (local.set $expr_170_1 (local.get $_21_1))
        (local.set $expr_170_2 (local.get $_21_2))
        (local.set $expr_170_3 (local.get $_21_3))
        (block
            (local.set $_22_0 (call $mapping_index_access_t_mapping$_t_address_$_t_struct$_User_$22_storage_$_of_t_address (local.get $expr_169_0) (local.get $expr_169_1) (local.get $expr_169_2) (local.get $expr_169_3) (local.get $expr_170_0) (local.get $expr_170_1) (local.get $expr_170_2) (local.get $expr_170_3)))
            (local.set $_22_1 (global.get $global_))
            (local.set $_22_2 (global.get $global__1))
            (local.set $_22_3 (global.get $global__2))

        )
        (local.set $_23_slot_0 (local.get $_22_0))
        (local.set $_23_slot_1 (local.get $_22_1))
        (local.set $_23_slot_2 (local.get $_22_2))
        (local.set $_23_slot_3 (local.get $_22_3))
        (local.set $expr_171_slot_0 (local.get $_23_slot_0))
        (local.set $expr_171_slot_1 (local.get $_23_slot_1))
        (local.set $expr_171_slot_2 (local.get $_23_slot_2))
        (local.set $expr_171_slot_3 (local.get $_23_slot_3))
        (local.set $_64_0 (i64.const 0))
        (local.set $_64_1 (i64.const 0))
        (local.set $_64_2 (i64.const 0))
        (local.set $_64_3 (i64.const 3))
        (block
            (local.set $_24_0 (call $add (local.get $expr_171_slot_0) (local.get $expr_171_slot_1) (local.get $expr_171_slot_2) (local.get $expr_171_slot_3) (local.get $_64_0) (local.get $_64_1) (local.get $_64_2) (local.get $_64_3)))
            (local.set $_24_1 (global.get $global_))
            (local.set $_24_2 (global.get $global__1))
            (local.set $_24_3 (global.get $global__2))

        )
        (call $update_storage_value_offset_0t_uint256_to_t_uint256 (local.get $_24_0) (local.get $_24_1) (local.get $_24_2) (local.get $_24_3) (local.get $_19_0) (local.get $_19_1) (local.get $_19_2) (local.get $_19_3))
        (local.set $expr_174_0 (local.get $_19_0))
        (local.set $expr_174_1 (local.get $_19_1))
        (local.set $expr_174_2 (local.get $_19_2))
        (local.set $expr_174_3 (local.get $_19_3))
        (local.set $_65_0 (i64.const 0))
        (local.set $_65_1 (i64.const 0))
        (local.set $_65_2 (i64.const 0))
        (local.set $_65_3 (i64.const 0))
        (block
            (local.set $_25_0 (call $read_from_storage_split_offset_0_t_address (local.get $_65_0) (local.get $_65_1) (local.get $_65_2) (local.get $_65_3)))
            (local.set $_25_1 (global.get $global_))
            (local.set $_25_2 (global.get $global__1))
            (local.set $_25_3 (global.get $global__2))

        )
        (local.set $expr_179_0 (local.get $_25_0))
        (local.set $expr_179_1 (local.get $_25_1))
        (local.set $expr_179_2 (local.get $_25_2))
        (local.set $expr_179_3 (local.get $_25_3))
        (local.set $_26_0 (i64.const 0))
        (local.set $_26_1 (i64.const 0))
        (local.set $_26_2 (i64.const 0))
        (local.set $_26_3 (i64.const 3))
        (local.set $expr_176_0 (local.get $_26_0))
        (local.set $expr_176_1 (local.get $_26_1))
        (local.set $expr_176_2 (local.get $_26_2))
        (local.set $expr_176_3 (local.get $_26_3))
        (local.set $expr_177_0 (i64.const 0))
        (local.set $expr_177_1 (i64.const 0))
        (local.set $expr_177_2 (i64.const 0))
        (local.set $expr_177_3 (i64.const 0))
        (block
            (local.set $_27_0 (call $mapping_index_access_t_mapping$_t_uint256_$_t_address_$_of_t_rational_0_by_1 (local.get $expr_176_0) (local.get $expr_176_1) (local.get $expr_176_2) (local.get $expr_176_3) (local.get $expr_177_0) (local.get $expr_177_1) (local.get $expr_177_2) (local.get $expr_177_3)))
            (local.set $_27_1 (global.get $global_))
            (local.set $_27_2 (global.get $global__1))
            (local.set $_27_3 (global.get $global__2))

        )
        (call $update_storage_value_offset_0t_address_to_t_address (local.get $_27_0) (local.get $_27_1) (local.get $_27_2) (local.get $_27_3) (local.get $expr_179_0) (local.get $expr_179_1) (local.get $expr_179_2) (local.get $expr_179_3))
        (local.set $expr_180_0 (local.get $expr_179_0))
        (local.set $expr_180_1 (local.get $expr_179_1))
        (local.set $expr_180_2 (local.get $expr_179_2))
        (local.set $expr_180_3 (local.get $expr_179_3))
        (local.set $_66_0 (i64.const 0))
        (local.set $_66_1 (i64.const 0))
        (local.set $_66_2 (i64.const 0))
        (local.set $_66_3 (i64.const 0))
        (block
            (local.set $_28_0 (call $read_from_storage_split_offset_0_t_address (local.get $_66_0) (local.get $_66_1) (local.get $_66_2) (local.get $_66_3)))
            (local.set $_28_1 (global.get $global_))
            (local.set $_28_2 (global.get $global__1))
            (local.set $_28_3 (global.get $global__2))

        )
        (local.set $expr_185_0 (local.get $_28_0))
        (local.set $expr_185_1 (local.get $_28_1))
        (local.set $expr_185_2 (local.get $_28_2))
        (local.set $expr_185_3 (local.get $_28_3))
        (local.set $_29_0 (i64.const 0))
        (local.set $_29_1 (i64.const 0))
        (local.set $_29_2 (i64.const 0))
        (local.set $_29_3 (i64.const 3))
        (local.set $expr_182_0 (local.get $_29_0))
        (local.set $expr_182_1 (local.get $_29_1))
        (local.set $expr_182_2 (local.get $_29_2))
        (local.set $expr_182_3 (local.get $_29_3))
        (local.set $_67_0 (i64.const 0))
        (local.set $_67_1 (i64.const 0))
        (local.set $_67_2 (i64.const 0))
        (local.set $_67_3 (i64.const 1))
        (block
            (local.set $_30_0 (call $read_from_storage_split_offset_0_t_uint256 (local.get $_67_0) (local.get $_67_1) (local.get $_67_2) (local.get $_67_3)))
            (local.set $_30_1 (global.get $global_))
            (local.set $_30_2 (global.get $global__1))
            (local.set $_30_3 (global.get $global__2))

        )
        (local.set $expr_183_0 (local.get $_30_0))
        (local.set $expr_183_1 (local.get $_30_1))
        (local.set $expr_183_2 (local.get $_30_2))
        (local.set $expr_183_3 (local.get $_30_3))
        (block
            (local.set $_31_0 (call $mapping_index_access_t_mapping$_t_uint256_$_t_address_$_of_t_uint256 (local.get $expr_182_0) (local.get $expr_182_1) (local.get $expr_182_2) (local.get $expr_182_3) (local.get $expr_183_0) (local.get $expr_183_1) (local.get $expr_183_2) (local.get $expr_183_3)))
            (local.set $_31_1 (global.get $global_))
            (local.set $_31_2 (global.get $global__1))
            (local.set $_31_3 (global.get $global__2))

        )
        (call $update_storage_value_offset_0t_address_to_t_address (local.get $_31_0) (local.get $_31_1) (local.get $_31_2) (local.get $_31_3) (local.get $expr_185_0) (local.get $expr_185_1) (local.get $expr_185_2) (local.get $expr_185_3))
        (local.set $expr_186_0 (local.get $expr_185_0))
        (local.set $expr_186_1 (local.get $expr_185_1))
        (local.set $expr_186_2 (local.get $expr_185_2))
        (local.set $expr_186_3 (local.get $expr_185_3))

    )
)

(func $convert_t_address_payable_to_t_address
    (param $value_15_0 i64)
    (param $value_15_1 i64)
    (param $value_15_2 i64)
    (param $value_15_3 i64)
    (result i64)
    (local $converted_0 i64)
    (local $converted_1 i64)
    (local $converted_2 i64)
    (local $converted_3 i64)
    (block $label__12
        (block
            (local.set $converted_0 (call $convert_t_uint160_to_t_address (local.get $value_15_0) (local.get $value_15_1) (local.get $value_15_2) (local.get $value_15_3)))
            (local.set $converted_1 (global.get $global_))
            (local.set $converted_2 (global.get $global__1))
            (local.set $converted_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_1))
    (global.set $global__1 (local.get $converted_2))
    (global.set $global__2 (local.get $converted_3))
    (local.get $converted_0)
)

(func $convert_t_address_to_t_address
    (param $value_16_0 i64)
    (param $value_16_1 i64)
    (param $value_16_2 i64)
    (param $value_16_3 i64)
    (result i64)
    (local $converted_17_0 i64)
    (local $converted_17_1 i64)
    (local $converted_17_2 i64)
    (local $converted_17_3 i64)
    (block $label__13
        (block
            (local.set $converted_17_0 (call $convert_t_uint160_to_t_address (local.get $value_16_0) (local.get $value_16_1) (local.get $value_16_2) (local.get $value_16_3)))
            (local.set $converted_17_1 (global.get $global_))
            (local.set $converted_17_2 (global.get $global__1))
            (local.set $converted_17_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_17_1))
    (global.set $global__1 (local.get $converted_17_2))
    (global.set $global__2 (local.get $converted_17_3))
    (local.get $converted_17_0)
)

(func $convert_t_bool_to_t_bool
    (param $value_18_0 i64)
    (param $value_18_1 i64)
    (param $value_18_2 i64)
    (param $value_18_3 i64)
    (result i64)
    (local $converted_19_0 i64)
    (local $converted_19_1 i64)
    (local $converted_19_2 i64)
    (local $converted_19_3 i64)
    (block $label__14
        (block
            (local.set $converted_19_0 (call $cleanup_t_bool (local.get $value_18_0) (local.get $value_18_1) (local.get $value_18_2) (local.get $value_18_3)))
            (local.set $converted_19_1 (global.get $global_))
            (local.set $converted_19_2 (global.get $global__1))
            (local.set $converted_19_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_19_1))
    (global.set $global__1 (local.get $converted_19_2))
    (global.set $global__2 (local.get $converted_19_3))
    (local.get $converted_19_0)
)

(func $convert_t_rational_0_by_1_to_t_uint16
    (param $value_20_0 i64)
    (param $value_20_1 i64)
    (param $value_20_2 i64)
    (param $value_20_3 i64)
    (result i64)
    (local $converted_21_0 i64)
    (local $converted_21_1 i64)
    (local $converted_21_2 i64)
    (local $converted_21_3 i64)
    (block $label__15
        (block
            (local.set $converted_21_0 (call $cleanup_t_uint16 (local.get $value_20_0) (local.get $value_20_1) (local.get $value_20_2) (local.get $value_20_3)))
            (local.set $converted_21_1 (global.get $global_))
            (local.set $converted_21_2 (global.get $global__1))
            (local.set $converted_21_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_21_1))
    (global.set $global__1 (local.get $converted_21_2))
    (global.set $global__2 (local.get $converted_21_3))
    (local.get $converted_21_0)
)

(func $convert_t_rational_0_by_1_to_t_uint256
    (param $value_22_0 i64)
    (param $value_22_1 i64)
    (param $value_22_2 i64)
    (param $value_22_3 i64)
    (result i64)
    (local $converted_23_0 i64)
    (local $converted_23_1 i64)
    (local $converted_23_2 i64)
    (local $converted_23_3 i64)
    (block $label__16
        (block
            (local.set $converted_23_0 (call $cleanup_t_uint256 (local.get $value_22_0) (local.get $value_22_1) (local.get $value_22_2) (local.get $value_22_3)))
            (local.set $converted_23_1 (global.get $global_))
            (local.set $converted_23_2 (global.get $global__1))
            (local.set $converted_23_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_23_1))
    (global.set $global__1 (local.get $converted_23_2))
    (global.set $global__2 (local.get $converted_23_3))
    (local.get $converted_23_0)
)

(func $convert_t_rational_0_by_1_to_t_uint8
    (param $value_24_0 i64)
    (param $value_24_1 i64)
    (param $value_24_2 i64)
    (param $value_24_3 i64)
    (result i64)
    (local $converted_25_0 i64)
    (local $converted_25_1 i64)
    (local $converted_25_2 i64)
    (local $converted_25_3 i64)
    (block $label__17
        (block
            (local.set $converted_25_0 (call $cleanup_t_uint8 (local.get $value_24_0) (local.get $value_24_1) (local.get $value_24_2) (local.get $value_24_3)))
            (local.set $converted_25_1 (global.get $global_))
            (local.set $converted_25_2 (global.get $global__1))
            (local.set $converted_25_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_25_1))
    (global.set $global__1 (local.get $converted_25_2))
    (global.set $global__2 (local.get $converted_25_3))
    (local.get $converted_25_0)
)

(func $convert_t_rational_3600_by_1_to_t_uint32
    (param $value_26_0 i64)
    (param $value_26_1 i64)
    (param $value_26_2 i64)
    (param $value_26_3 i64)
    (result i64)
    (local $converted_27_0 i64)
    (local $converted_27_1 i64)
    (local $converted_27_2 i64)
    (local $converted_27_3 i64)
    (block $label__18
        (block
            (local.set $converted_27_0 (call $cleanup_t_uint32 (local.get $value_26_0) (local.get $value_26_1) (local.get $value_26_2) (local.get $value_26_3)))
            (local.set $converted_27_1 (global.get $global_))
            (local.set $converted_27_2 (global.get $global__1))
            (local.set $converted_27_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_27_1))
    (global.set $global__1 (local.get $converted_27_2))
    (global.set $global__2 (local.get $converted_27_3))
    (local.get $converted_27_0)
)

(func $convert_t_uint160_to_t_address
    (param $value_28_0 i64)
    (param $value_28_1 i64)
    (param $value_28_2 i64)
    (param $value_28_3 i64)
    (result i64)
    (local $converted_29_0 i64)
    (local $converted_29_1 i64)
    (local $converted_29_2 i64)
    (local $converted_29_3 i64)
    (block $label__19
        (block
            (local.set $converted_29_0 (call $convert_t_uint160_to_t_uint160 (local.get $value_28_0) (local.get $value_28_1) (local.get $value_28_2) (local.get $value_28_3)))
            (local.set $converted_29_1 (global.get $global_))
            (local.set $converted_29_2 (global.get $global__1))
            (local.set $converted_29_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_29_1))
    (global.set $global__1 (local.get $converted_29_2))
    (global.set $global__2 (local.get $converted_29_3))
    (local.get $converted_29_0)
)

(func $convert_t_uint160_to_t_uint160
    (param $value_30_0 i64)
    (param $value_30_1 i64)
    (param $value_30_2 i64)
    (param $value_30_3 i64)
    (result i64)
    (local $converted_31_0 i64)
    (local $converted_31_1 i64)
    (local $converted_31_2 i64)
    (local $converted_31_3 i64)
    (block $label__20
        (block
            (local.set $converted_31_0 (call $cleanup_t_uint160 (local.get $value_30_0) (local.get $value_30_1) (local.get $value_30_2) (local.get $value_30_3)))
            (local.set $converted_31_1 (global.get $global_))
            (local.set $converted_31_2 (global.get $global__1))
            (local.set $converted_31_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_31_1))
    (global.set $global__1 (local.get $converted_31_2))
    (global.set $global__2 (local.get $converted_31_3))
    (local.get $converted_31_0)
)

(func $convert_t_uint256_to_t_uint256
    (param $value_32_0 i64)
    (param $value_32_1 i64)
    (param $value_32_2 i64)
    (param $value_32_3 i64)
    (result i64)
    (local $converted_33_0 i64)
    (local $converted_33_1 i64)
    (local $converted_33_2 i64)
    (local $converted_33_3 i64)
    (block $label__21
        (block
            (local.set $converted_33_0 (call $cleanup_t_uint256 (local.get $value_32_0) (local.get $value_32_1) (local.get $value_32_2) (local.get $value_32_3)))
            (local.set $converted_33_1 (global.get $global_))
            (local.set $converted_33_2 (global.get $global__1))
            (local.set $converted_33_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_33_1))
    (global.set $global__1 (local.get $converted_33_2))
    (global.set $global__2 (local.get $converted_33_3))
    (local.get $converted_33_0)
)

(func $convert_t_uint256_to_t_uint32
    (param $value_34_0 i64)
    (param $value_34_1 i64)
    (param $value_34_2 i64)
    (param $value_34_3 i64)
    (result i64)
    (local $converted_35_0 i64)
    (local $converted_35_1 i64)
    (local $converted_35_2 i64)
    (local $converted_35_3 i64)
    (block $label__22
        (block
            (local.set $converted_35_0 (call $cleanup_t_uint32 (local.get $value_34_0) (local.get $value_34_1) (local.get $value_34_2) (local.get $value_34_3)))
            (local.set $converted_35_1 (global.get $global_))
            (local.set $converted_35_2 (global.get $global__1))
            (local.set $converted_35_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_35_1))
    (global.set $global__1 (local.get $converted_35_2))
    (global.set $global__2 (local.get $converted_35_3))
    (local.get $converted_35_0)
)

(func $convert_t_uint32_to_t_uint32
    (param $value_36_0 i64)
    (param $value_36_1 i64)
    (param $value_36_2 i64)
    (param $value_36_3 i64)
    (result i64)
    (local $converted_37_0 i64)
    (local $converted_37_1 i64)
    (local $converted_37_2 i64)
    (local $converted_37_3 i64)
    (block $label__23
        (block
            (local.set $converted_37_0 (call $cleanup_t_uint32 (local.get $value_36_0) (local.get $value_36_1) (local.get $value_36_2) (local.get $value_36_3)))
            (local.set $converted_37_1 (global.get $global_))
            (local.set $converted_37_2 (global.get $global__1))
            (local.set $converted_37_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_37_1))
    (global.set $global__1 (local.get $converted_37_2))
    (global.set $global__2 (local.get $converted_37_3))
    (local.get $converted_37_0)
)

(func $convert_t_uint8_to_t_uint8
    (param $value_38_0 i64)
    (param $value_38_1 i64)
    (param $value_38_2 i64)
    (param $value_38_3 i64)
    (result i64)
    (local $converted_39_0 i64)
    (local $converted_39_1 i64)
    (local $converted_39_2 i64)
    (local $converted_39_3 i64)
    (block $label__24
        (block
            (local.set $converted_39_0 (call $cleanup_t_uint8 (local.get $value_38_0) (local.get $value_38_1) (local.get $value_38_2) (local.get $value_38_3)))
            (local.set $converted_39_1 (global.get $global_))
            (local.set $converted_39_2 (global.get $global__1))
            (local.set $converted_39_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $converted_39_1))
    (global.set $global__1 (local.get $converted_39_2))
    (global.set $global__2 (local.get $converted_39_3))
    (local.get $converted_39_0)
)

(func $extract_from_storage_value_offset_0t_address
    (param $slot_value_0 i64)
    (param $slot_value_1 i64)
    (param $slot_value_2 i64)
    (param $slot_value_3 i64)
    (result i64)
    (local $value_40_0 i64)
    (local $value_40_1 i64)
    (local $value_40_2 i64)
    (local $value_40_3 i64)
    (local $_68_0 i64)
    (local $_68_1 i64)
    (local $_68_2 i64)
    (local $_68_3 i64)
    (block $label__25
        (block
            (local.set $_68_0 (call $shift_right_0_unsigned (local.get $slot_value_0) (local.get $slot_value_1) (local.get $slot_value_2) (local.get $slot_value_3)))
            (local.set $_68_1 (global.get $global_))
            (local.set $_68_2 (global.get $global__1))
            (local.set $_68_3 (global.get $global__2))

        )
        (block
            (local.set $value_40_0 (call $cleanup_from_storage_t_address (local.get $_68_0) (local.get $_68_1) (local.get $_68_2) (local.get $_68_3)))
            (local.set $value_40_1 (global.get $global_))
            (local.set $value_40_2 (global.get $global__1))
            (local.set $value_40_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $value_40_1))
    (global.set $global__1 (local.get $value_40_2))
    (global.set $global__2 (local.get $value_40_3))
    (local.get $value_40_0)
)

(func $extract_from_storage_value_offset_0t_uint256
    (param $slot_value_41_0 i64)
    (param $slot_value_41_1 i64)
    (param $slot_value_41_2 i64)
    (param $slot_value_41_3 i64)
    (result i64)
    (local $value_42_0 i64)
    (local $value_42_1 i64)
    (local $value_42_2 i64)
    (local $value_42_3 i64)
    (local $_69_0 i64)
    (local $_69_1 i64)
    (local $_69_2 i64)
    (local $_69_3 i64)
    (block $label__26
        (block
            (local.set $_69_0 (call $shift_right_0_unsigned (local.get $slot_value_41_0) (local.get $slot_value_41_1) (local.get $slot_value_41_2) (local.get $slot_value_41_3)))
            (local.set $_69_1 (global.get $global_))
            (local.set $_69_2 (global.get $global__1))
            (local.set $_69_3 (global.get $global__2))

        )
        (block
            (local.set $value_42_0 (call $cleanup_from_storage_t_uint256 (local.get $_69_0) (local.get $_69_1) (local.get $_69_2) (local.get $_69_3)))
            (local.set $value_42_1 (global.get $global_))
            (local.set $value_42_2 (global.get $global__1))
            (local.set $value_42_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $value_42_1))
    (global.set $global__1 (local.get $value_42_2))
    (global.set $global__2 (local.get $value_42_3))
    (local.get $value_42_0)
)

(func $mapping_index_access_t_mapping$_t_address_$_t_struct$_User_$22_storage_$_of_t_address
    (param $slot_0 i64)
    (param $slot_1 i64)
    (param $slot_2 i64)
    (param $slot_3 i64)
    (param $key_0 i64)
    (param $key_1 i64)
    (param $key_2 i64)
    (param $key_3 i64)
    (result i64)
    (local $dataSlot_0 i64)
    (local $dataSlot_1 i64)
    (local $dataSlot_2 i64)
    (local $dataSlot_3 i64)
    (local $_70_0 i64)
    (local $_70_1 i64)
    (local $_70_2 i64)
    (local $_70_3 i64)
    (local $_71_0 i64)
    (local $_71_1 i64)
    (local $_71_2 i64)
    (local $_71_3 i64)
    (local $_72_0 i64)
    (local $_72_1 i64)
    (local $_72_2 i64)
    (local $_72_3 i64)
    (local $_73_0 i64)
    (local $_73_1 i64)
    (local $_73_2 i64)
    (local $_73_3 i64)
    (local $_74_0 i64)
    (local $_74_1 i64)
    (local $_74_2 i64)
    (local $_74_3 i64)
    (block $label__27
        (block
            (local.set $_70_0 (call $convert_t_address_to_t_address (local.get $key_0) (local.get $key_1) (local.get $key_2) (local.get $key_3)))
            (local.set $_70_1 (global.get $global_))
            (local.set $_70_2 (global.get $global__1))
            (local.set $_70_3 (global.get $global__2))

        )
        (local.set $_71_0 (i64.const 0))
        (local.set $_71_1 (i64.const 0))
        (local.set $_71_2 (i64.const 0))
        (local.set $_71_3 (i64.const 0))
        (call $mstore (local.get $_71_0) (local.get $_71_1) (local.get $_71_2) (local.get $_71_3) (local.get $_70_0) (local.get $_70_1) (local.get $_70_2) (local.get $_70_3))
        (local.set $_72_0 (i64.const 0))
        (local.set $_72_1 (i64.const 0))
        (local.set $_72_2 (i64.const 0))
        (local.set $_72_3 (i64.const 32))
        (call $mstore (local.get $_72_0) (local.get $_72_1) (local.get $_72_2) (local.get $_72_3) (local.get $slot_0) (local.get $slot_1) (local.get $slot_2) (local.get $slot_3))
        (local.set $_73_0 (i64.const 0))
        (local.set $_73_1 (i64.const 0))
        (local.set $_73_2 (i64.const 0))
        (local.set $_73_3 (i64.const 64))
        (local.set $_74_0 (i64.const 0))
        (local.set $_74_1 (i64.const 0))
        (local.set $_74_2 (i64.const 0))
        (local.set $_74_3 (i64.const 0))
        (block
            (local.set $dataSlot_0 (call $keccak256 (local.get $_74_0) (local.get $_74_1) (local.get $_74_2) (local.get $_74_3) (local.get $_73_0) (local.get $_73_1) (local.get $_73_2) (local.get $_73_3)))
            (local.set $dataSlot_1 (global.get $global_))
            (local.set $dataSlot_2 (global.get $global__1))
            (local.set $dataSlot_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $dataSlot_1))
    (global.set $global__1 (local.get $dataSlot_2))
    (global.set $global__2 (local.get $dataSlot_3))
    (local.get $dataSlot_0)
)

(func $mapping_index_access_t_mapping$_t_uint256_$_t_address_$_of_t_rational_0_by_1
    (param $slot_43_0 i64)
    (param $slot_43_1 i64)
    (param $slot_43_2 i64)
    (param $slot_43_3 i64)
    (param $key_44_0 i64)
    (param $key_44_1 i64)
    (param $key_44_2 i64)
    (param $key_44_3 i64)
    (result i64)
    (local $dataSlot_45_0 i64)
    (local $dataSlot_45_1 i64)
    (local $dataSlot_45_2 i64)
    (local $dataSlot_45_3 i64)
    (local $_75_0 i64)
    (local $_75_1 i64)
    (local $_75_2 i64)
    (local $_75_3 i64)
    (local $_76_0 i64)
    (local $_76_1 i64)
    (local $_76_2 i64)
    (local $_76_3 i64)
    (local $_77_0 i64)
    (local $_77_1 i64)
    (local $_77_2 i64)
    (local $_77_3 i64)
    (local $_78_0 i64)
    (local $_78_1 i64)
    (local $_78_2 i64)
    (local $_78_3 i64)
    (local $_79_0 i64)
    (local $_79_1 i64)
    (local $_79_2 i64)
    (local $_79_3 i64)
    (block $label__28
        (block
            (local.set $_75_0 (call $convert_t_rational_0_by_1_to_t_uint256 (local.get $key_44_0) (local.get $key_44_1) (local.get $key_44_2) (local.get $key_44_3)))
            (local.set $_75_1 (global.get $global_))
            (local.set $_75_2 (global.get $global__1))
            (local.set $_75_3 (global.get $global__2))

        )
        (local.set $_76_0 (i64.const 0))
        (local.set $_76_1 (i64.const 0))
        (local.set $_76_2 (i64.const 0))
        (local.set $_76_3 (i64.const 0))
        (call $mstore (local.get $_76_0) (local.get $_76_1) (local.get $_76_2) (local.get $_76_3) (local.get $_75_0) (local.get $_75_1) (local.get $_75_2) (local.get $_75_3))
        (local.set $_77_0 (i64.const 0))
        (local.set $_77_1 (i64.const 0))
        (local.set $_77_2 (i64.const 0))
        (local.set $_77_3 (i64.const 32))
        (call $mstore (local.get $_77_0) (local.get $_77_1) (local.get $_77_2) (local.get $_77_3) (local.get $slot_43_0) (local.get $slot_43_1) (local.get $slot_43_2) (local.get $slot_43_3))
        (local.set $_78_0 (i64.const 0))
        (local.set $_78_1 (i64.const 0))
        (local.set $_78_2 (i64.const 0))
        (local.set $_78_3 (i64.const 64))
        (local.set $_79_0 (i64.const 0))
        (local.set $_79_1 (i64.const 0))
        (local.set $_79_2 (i64.const 0))
        (local.set $_79_3 (i64.const 0))
        (block
            (local.set $dataSlot_45_0 (call $keccak256 (local.get $_79_0) (local.get $_79_1) (local.get $_79_2) (local.get $_79_3) (local.get $_78_0) (local.get $_78_1) (local.get $_78_2) (local.get $_78_3)))
            (local.set $dataSlot_45_1 (global.get $global_))
            (local.set $dataSlot_45_2 (global.get $global__1))
            (local.set $dataSlot_45_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $dataSlot_45_1))
    (global.set $global__1 (local.get $dataSlot_45_2))
    (global.set $global__2 (local.get $dataSlot_45_3))
    (local.get $dataSlot_45_0)
)

(func $mapping_index_access_t_mapping$_t_uint256_$_t_address_$_of_t_uint256
    (param $slot_46_0 i64)
    (param $slot_46_1 i64)
    (param $slot_46_2 i64)
    (param $slot_46_3 i64)
    (param $key_47_0 i64)
    (param $key_47_1 i64)
    (param $key_47_2 i64)
    (param $key_47_3 i64)
    (result i64)
    (local $dataSlot_48_0 i64)
    (local $dataSlot_48_1 i64)
    (local $dataSlot_48_2 i64)
    (local $dataSlot_48_3 i64)
    (local $_80_0 i64)
    (local $_80_1 i64)
    (local $_80_2 i64)
    (local $_80_3 i64)
    (local $_81_0 i64)
    (local $_81_1 i64)
    (local $_81_2 i64)
    (local $_81_3 i64)
    (local $_82_0 i64)
    (local $_82_1 i64)
    (local $_82_2 i64)
    (local $_82_3 i64)
    (local $_83_0 i64)
    (local $_83_1 i64)
    (local $_83_2 i64)
    (local $_83_3 i64)
    (local $_84_0 i64)
    (local $_84_1 i64)
    (local $_84_2 i64)
    (local $_84_3 i64)
    (block $label__29
        (block
            (local.set $_80_0 (call $convert_t_uint256_to_t_uint256 (local.get $key_47_0) (local.get $key_47_1) (local.get $key_47_2) (local.get $key_47_3)))
            (local.set $_80_1 (global.get $global_))
            (local.set $_80_2 (global.get $global__1))
            (local.set $_80_3 (global.get $global__2))

        )
        (local.set $_81_0 (i64.const 0))
        (local.set $_81_1 (i64.const 0))
        (local.set $_81_2 (i64.const 0))
        (local.set $_81_3 (i64.const 0))
        (call $mstore (local.get $_81_0) (local.get $_81_1) (local.get $_81_2) (local.get $_81_3) (local.get $_80_0) (local.get $_80_1) (local.get $_80_2) (local.get $_80_3))
        (local.set $_82_0 (i64.const 0))
        (local.set $_82_1 (i64.const 0))
        (local.set $_82_2 (i64.const 0))
        (local.set $_82_3 (i64.const 32))
        (call $mstore (local.get $_82_0) (local.get $_82_1) (local.get $_82_2) (local.get $_82_3) (local.get $slot_46_0) (local.get $slot_46_1) (local.get $slot_46_2) (local.get $slot_46_3))
        (local.set $_83_0 (i64.const 0))
        (local.set $_83_1 (i64.const 0))
        (local.set $_83_2 (i64.const 0))
        (local.set $_83_3 (i64.const 64))
        (local.set $_84_0 (i64.const 0))
        (local.set $_84_1 (i64.const 0))
        (local.set $_84_2 (i64.const 0))
        (local.set $_84_3 (i64.const 0))
        (block
            (local.set $dataSlot_48_0 (call $keccak256 (local.get $_84_0) (local.get $_84_1) (local.get $_84_2) (local.get $_84_3) (local.get $_83_0) (local.get $_83_1) (local.get $_83_2) (local.get $_83_3)))
            (local.set $dataSlot_48_1 (global.get $global_))
            (local.set $dataSlot_48_2 (global.get $global__1))
            (local.set $dataSlot_48_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $dataSlot_48_1))
    (global.set $global__1 (local.get $dataSlot_48_2))
    (global.set $global__2 (local.get $dataSlot_48_3))
    (local.get $dataSlot_48_0)
)

(func $prepare_store_t_address
    (param $value_49_0 i64)
    (param $value_49_1 i64)
    (param $value_49_2 i64)
    (param $value_49_3 i64)
    (result i64)
    (local $ret_0 i64)
    (local $ret_1 i64)
    (local $ret_2 i64)
    (local $ret_3 i64)
    (block $label__30
        (local.set $ret_0 (local.get $value_49_0))
        (local.set $ret_1 (local.get $value_49_1))
        (local.set $ret_2 (local.get $value_49_2))
        (local.set $ret_3 (local.get $value_49_3))

    )
    (global.set $global_ (local.get $ret_1))
    (global.set $global__1 (local.get $ret_2))
    (global.set $global__2 (local.get $ret_3))
    (local.get $ret_0)
)

(func $prepare_store_t_bool
    (param $value_50_0 i64)
    (param $value_50_1 i64)
    (param $value_50_2 i64)
    (param $value_50_3 i64)
    (result i64)
    (local $ret_51_0 i64)
    (local $ret_51_1 i64)
    (local $ret_51_2 i64)
    (local $ret_51_3 i64)
    (block $label__31
        (local.set $ret_51_0 (local.get $value_50_0))
        (local.set $ret_51_1 (local.get $value_50_1))
        (local.set $ret_51_2 (local.get $value_50_2))
        (local.set $ret_51_3 (local.get $value_50_3))

    )
    (global.set $global_ (local.get $ret_51_1))
    (global.set $global__1 (local.get $ret_51_2))
    (global.set $global__2 (local.get $ret_51_3))
    (local.get $ret_51_0)
)

(func $prepare_store_t_uint16
    (param $value_52_0 i64)
    (param $value_52_1 i64)
    (param $value_52_2 i64)
    (param $value_52_3 i64)
    (result i64)
    (local $ret_53_0 i64)
    (local $ret_53_1 i64)
    (local $ret_53_2 i64)
    (local $ret_53_3 i64)
    (block $label__32
        (local.set $ret_53_0 (local.get $value_52_0))
        (local.set $ret_53_1 (local.get $value_52_1))
        (local.set $ret_53_2 (local.get $value_52_2))
        (local.set $ret_53_3 (local.get $value_52_3))

    )
    (global.set $global_ (local.get $ret_53_1))
    (global.set $global__1 (local.get $ret_53_2))
    (global.set $global__2 (local.get $ret_53_3))
    (local.get $ret_53_0)
)

(func $prepare_store_t_uint256
    (param $value_54_0 i64)
    (param $value_54_1 i64)
    (param $value_54_2 i64)
    (param $value_54_3 i64)
    (result i64)
    (local $ret_55_0 i64)
    (local $ret_55_1 i64)
    (local $ret_55_2 i64)
    (local $ret_55_3 i64)
    (block $label__33
        (local.set $ret_55_0 (local.get $value_54_0))
        (local.set $ret_55_1 (local.get $value_54_1))
        (local.set $ret_55_2 (local.get $value_54_2))
        (local.set $ret_55_3 (local.get $value_54_3))

    )
    (global.set $global_ (local.get $ret_55_1))
    (global.set $global__1 (local.get $ret_55_2))
    (global.set $global__2 (local.get $ret_55_3))
    (local.get $ret_55_0)
)

(func $prepare_store_t_uint32
    (param $value_56_0 i64)
    (param $value_56_1 i64)
    (param $value_56_2 i64)
    (param $value_56_3 i64)
    (result i64)
    (local $ret_57_0 i64)
    (local $ret_57_1 i64)
    (local $ret_57_2 i64)
    (local $ret_57_3 i64)
    (block $label__34
        (local.set $ret_57_0 (local.get $value_56_0))
        (local.set $ret_57_1 (local.get $value_56_1))
        (local.set $ret_57_2 (local.get $value_56_2))
        (local.set $ret_57_3 (local.get $value_56_3))

    )
    (global.set $global_ (local.get $ret_57_1))
    (global.set $global__1 (local.get $ret_57_2))
    (global.set $global__2 (local.get $ret_57_3))
    (local.get $ret_57_0)
)

(func $prepare_store_t_uint8
    (param $value_58_0 i64)
    (param $value_58_1 i64)
    (param $value_58_2 i64)
    (param $value_58_3 i64)
    (result i64)
    (local $ret_59_0 i64)
    (local $ret_59_1 i64)
    (local $ret_59_2 i64)
    (local $ret_59_3 i64)
    (block $label__35
        (local.set $ret_59_0 (local.get $value_58_0))
        (local.set $ret_59_1 (local.get $value_58_1))
        (local.set $ret_59_2 (local.get $value_58_2))
        (local.set $ret_59_3 (local.get $value_58_3))

    )
    (global.set $global_ (local.get $ret_59_1))
    (global.set $global__1 (local.get $ret_59_2))
    (global.set $global__2 (local.get $ret_59_3))
    (local.get $ret_59_0)
)

(func $read_from_storage_split_offset_0_t_address
    (param $slot_60_0 i64)
    (param $slot_60_1 i64)
    (param $slot_60_2 i64)
    (param $slot_60_3 i64)
    (result i64)
    (local $value_61_0 i64)
    (local $value_61_1 i64)
    (local $value_61_2 i64)
    (local $value_61_3 i64)
    (local $_85_0 i64)
    (local $_85_1 i64)
    (local $_85_2 i64)
    (local $_85_3 i64)
    (block $label__36
        (block
            (local.set $_85_0 (call $sload (local.get $slot_60_0) (local.get $slot_60_1) (local.get $slot_60_2) (local.get $slot_60_3)))
            (local.set $_85_1 (global.get $global_))
            (local.set $_85_2 (global.get $global__1))
            (local.set $_85_3 (global.get $global__2))

        )
        (block
            (local.set $value_61_0 (call $extract_from_storage_value_offset_0t_address (local.get $_85_0) (local.get $_85_1) (local.get $_85_2) (local.get $_85_3)))
            (local.set $value_61_1 (global.get $global_))
            (local.set $value_61_2 (global.get $global__1))
            (local.set $value_61_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $value_61_1))
    (global.set $global__1 (local.get $value_61_2))
    (global.set $global__2 (local.get $value_61_3))
    (local.get $value_61_0)
)

(func $read_from_storage_split_offset_0_t_uint256
    (param $slot_62_0 i64)
    (param $slot_62_1 i64)
    (param $slot_62_2 i64)
    (param $slot_62_3 i64)
    (result i64)
    (local $value_63_0 i64)
    (local $value_63_1 i64)
    (local $value_63_2 i64)
    (local $value_63_3 i64)
    (local $_86_0 i64)
    (local $_86_1 i64)
    (local $_86_2 i64)
    (local $_86_3 i64)
    (block $label__37
        (block
            (local.set $_86_0 (call $sload (local.get $slot_62_0) (local.get $slot_62_1) (local.get $slot_62_2) (local.get $slot_62_3)))
            (local.set $_86_1 (global.get $global_))
            (local.set $_86_2 (global.get $global__1))
            (local.set $_86_3 (global.get $global__2))

        )
        (block
            (local.set $value_63_0 (call $extract_from_storage_value_offset_0t_uint256 (local.get $_86_0) (local.get $_86_1) (local.get $_86_2) (local.get $_86_3)))
            (local.set $value_63_1 (global.get $global_))
            (local.set $value_63_2 (global.get $global__1))
            (local.set $value_63_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $value_63_1))
    (global.set $global__1 (local.get $value_63_2))
    (global.set $global__2 (local.get $value_63_3))
    (local.get $value_63_0)
)

(func $shift_left_0
    (param $value_64_0 i64)
    (param $value_64_1 i64)
    (param $value_64_2 i64)
    (param $value_64_3 i64)
    (result i64)
    (local $newValue_0 i64)
    (local $newValue_1 i64)
    (local $newValue_2 i64)
    (local $newValue_3 i64)
    (local $_87_0 i64)
    (local $_87_1 i64)
    (local $_87_2 i64)
    (local $_87_3 i64)
    (block $label__38
        (local.set $_87_0 (i64.const 0))
        (local.set $_87_1 (i64.const 0))
        (local.set $_87_2 (i64.const 0))
        (local.set $_87_3 (i64.const 0))
        (block
            (local.set $newValue_0 (call $shl (local.get $_87_0) (local.get $_87_1) (local.get $_87_2) (local.get $_87_3) (local.get $value_64_0) (local.get $value_64_1) (local.get $value_64_2) (local.get $value_64_3)))
            (local.set $newValue_1 (global.get $global_))
            (local.set $newValue_2 (global.get $global__1))
            (local.set $newValue_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $newValue_1))
    (global.set $global__1 (local.get $newValue_2))
    (global.set $global__2 (local.get $newValue_3))
    (local.get $newValue_0)
)

(func $shift_left_16
    (param $value_65_0 i64)
    (param $value_65_1 i64)
    (param $value_65_2 i64)
    (param $value_65_3 i64)
    (result i64)
    (local $newValue_66_0 i64)
    (local $newValue_66_1 i64)
    (local $newValue_66_2 i64)
    (local $newValue_66_3 i64)
    (local $_88_0 i64)
    (local $_88_1 i64)
    (local $_88_2 i64)
    (local $_88_3 i64)
    (block $label__39
        (local.set $_88_0 (i64.const 0))
        (local.set $_88_1 (i64.const 0))
        (local.set $_88_2 (i64.const 0))
        (local.set $_88_3 (i64.const 16))
        (block
            (local.set $newValue_66_0 (call $shl (local.get $_88_0) (local.get $_88_1) (local.get $_88_2) (local.get $_88_3) (local.get $value_65_0) (local.get $value_65_1) (local.get $value_65_2) (local.get $value_65_3)))
            (local.set $newValue_66_1 (global.get $global_))
            (local.set $newValue_66_2 (global.get $global__1))
            (local.set $newValue_66_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $newValue_66_1))
    (global.set $global__1 (local.get $newValue_66_2))
    (global.set $global__2 (local.get $newValue_66_3))
    (local.get $newValue_66_0)
)

(func $shift_left_160
    (param $value_67_0 i64)
    (param $value_67_1 i64)
    (param $value_67_2 i64)
    (param $value_67_3 i64)
    (result i64)
    (local $newValue_68_0 i64)
    (local $newValue_68_1 i64)
    (local $newValue_68_2 i64)
    (local $newValue_68_3 i64)
    (local $_89_0 i64)
    (local $_89_1 i64)
    (local $_89_2 i64)
    (local $_89_3 i64)
    (block $label__40
        (local.set $_89_0 (i64.const 0))
        (local.set $_89_1 (i64.const 0))
        (local.set $_89_2 (i64.const 0))
        (local.set $_89_3 (i64.const 160))
        (block
            (local.set $newValue_68_0 (call $shl (local.get $_89_0) (local.get $_89_1) (local.get $_89_2) (local.get $_89_3) (local.get $value_67_0) (local.get $value_67_1) (local.get $value_67_2) (local.get $value_67_3)))
            (local.set $newValue_68_1 (global.get $global_))
            (local.set $newValue_68_2 (global.get $global__1))
            (local.set $newValue_68_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $newValue_68_1))
    (global.set $global__1 (local.get $newValue_68_2))
    (global.set $global__2 (local.get $newValue_68_3))
    (local.get $newValue_68_0)
)

(func $shift_left_8
    (param $value_69_0 i64)
    (param $value_69_1 i64)
    (param $value_69_2 i64)
    (param $value_69_3 i64)
    (result i64)
    (local $newValue_70_0 i64)
    (local $newValue_70_1 i64)
    (local $newValue_70_2 i64)
    (local $newValue_70_3 i64)
    (local $_90_0 i64)
    (local $_90_1 i64)
    (local $_90_2 i64)
    (local $_90_3 i64)
    (block $label__41
        (local.set $_90_0 (i64.const 0))
        (local.set $_90_1 (i64.const 0))
        (local.set $_90_2 (i64.const 0))
        (local.set $_90_3 (i64.const 8))
        (block
            (local.set $newValue_70_0 (call $shl (local.get $_90_0) (local.get $_90_1) (local.get $_90_2) (local.get $_90_3) (local.get $value_69_0) (local.get $value_69_1) (local.get $value_69_2) (local.get $value_69_3)))
            (local.set $newValue_70_1 (global.get $global_))
            (local.set $newValue_70_2 (global.get $global__1))
            (local.set $newValue_70_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $newValue_70_1))
    (global.set $global__1 (local.get $newValue_70_2))
    (global.set $global__2 (local.get $newValue_70_3))
    (local.get $newValue_70_0)
)

(func $shift_right_0_unsigned
    (param $value_71_0 i64)
    (param $value_71_1 i64)
    (param $value_71_2 i64)
    (param $value_71_3 i64)
    (result i64)
    (local $newValue_72_0 i64)
    (local $newValue_72_1 i64)
    (local $newValue_72_2 i64)
    (local $newValue_72_3 i64)
    (local $_91_0 i64)
    (local $_91_1 i64)
    (local $_91_2 i64)
    (local $_91_3 i64)
    (block $label__42
        (local.set $_91_0 (i64.const 0))
        (local.set $_91_1 (i64.const 0))
        (local.set $_91_2 (i64.const 0))
        (local.set $_91_3 (i64.const 0))
        (block
            (local.set $newValue_72_0 (call $shr (local.get $_91_0) (local.get $_91_1) (local.get $_91_2) (local.get $_91_3) (local.get $value_71_0) (local.get $value_71_1) (local.get $value_71_2) (local.get $value_71_3)))
            (local.set $newValue_72_1 (global.get $global_))
            (local.set $newValue_72_2 (global.get $global__1))
            (local.set $newValue_72_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $newValue_72_1))
    (global.set $global__1 (local.get $newValue_72_2))
    (global.set $global__2 (local.get $newValue_72_3))
    (local.get $newValue_72_0)
)

(func $update_byte_slice_1_shift_0
    (param $value_73_0 i64)
    (param $value_73_1 i64)
    (param $value_73_2 i64)
    (param $value_73_3 i64)
    (param $toInsert_0 i64)
    (param $toInsert_1 i64)
    (param $toInsert_2 i64)
    (param $toInsert_3 i64)
    (result i64)
    (local $result_0 i64)
    (local $result_1 i64)
    (local $result_2 i64)
    (local $result_3 i64)
    (local $mask_0 i64)
    (local $mask_1 i64)
    (local $mask_2 i64)
    (local $mask_3 i64)
    (local $_92_0 i64)
    (local $_92_1 i64)
    (local $_92_2 i64)
    (local $_92_3 i64)
    (local $_93_0 i64)
    (local $_93_1 i64)
    (local $_93_2 i64)
    (local $_93_3 i64)
    (block $label__43
        (local.set $mask_0 (i64.const 0))
        (local.set $mask_1 (i64.const 0))
        (local.set $mask_2 (i64.const 0))
        (local.set $mask_3 (i64.const 255))
        (block
            (local.set $toInsert_0 (call $shift_left_0 (local.get $toInsert_0) (local.get $toInsert_1) (local.get $toInsert_2) (local.get $toInsert_3)))
            (local.set $toInsert_1 (global.get $global_))
            (local.set $toInsert_2 (global.get $global__1))
            (local.set $toInsert_3 (global.get $global__2))

        )
        (block
            (local.set $_92_0 (call $not (local.get $mask_0) (local.get $mask_1) (local.get $mask_2) (local.get $mask_3)))
            (local.set $_92_1 (global.get $global_))
            (local.set $_92_2 (global.get $global__1))
            (local.set $_92_3 (global.get $global__2))

        )
        (block
            (local.set $value_73_0 (call $and (local.get $value_73_0) (local.get $value_73_1) (local.get $value_73_2) (local.get $value_73_3) (local.get $_92_0) (local.get $_92_1) (local.get $_92_2) (local.get $_92_3)))
            (local.set $value_73_1 (global.get $global_))
            (local.set $value_73_2 (global.get $global__1))
            (local.set $value_73_3 (global.get $global__2))

        )
        (block
            (local.set $_93_0 (call $and (local.get $toInsert_0) (local.get $toInsert_1) (local.get $toInsert_2) (local.get $toInsert_3) (local.get $mask_0) (local.get $mask_1) (local.get $mask_2) (local.get $mask_3)))
            (local.set $_93_1 (global.get $global_))
            (local.set $_93_2 (global.get $global__1))
            (local.set $_93_3 (global.get $global__2))

        )
        (block
            (local.set $result_0 (call $or (local.get $value_73_0) (local.get $value_73_1) (local.get $value_73_2) (local.get $value_73_3) (local.get $_93_0) (local.get $_93_1) (local.get $_93_2) (local.get $_93_3)))
            (local.set $result_1 (global.get $global_))
            (local.set $result_2 (global.get $global__1))
            (local.set $result_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_1))
    (global.set $global__1 (local.get $result_2))
    (global.set $global__2 (local.get $result_3))
    (local.get $result_0)
)

(func $update_byte_slice_1_shift_1
    (param $value_74_0 i64)
    (param $value_74_1 i64)
    (param $value_74_2 i64)
    (param $value_74_3 i64)
    (param $toInsert_75_0 i64)
    (param $toInsert_75_1 i64)
    (param $toInsert_75_2 i64)
    (param $toInsert_75_3 i64)
    (result i64)
    (local $result_76_0 i64)
    (local $result_76_1 i64)
    (local $result_76_2 i64)
    (local $result_76_3 i64)
    (local $mask_77_0 i64)
    (local $mask_77_1 i64)
    (local $mask_77_2 i64)
    (local $mask_77_3 i64)
    (local $_94_0 i64)
    (local $_94_1 i64)
    (local $_94_2 i64)
    (local $_94_3 i64)
    (local $_95_0 i64)
    (local $_95_1 i64)
    (local $_95_2 i64)
    (local $_95_3 i64)
    (block $label__44
        (local.set $mask_77_0 (i64.const 0))
        (local.set $mask_77_1 (i64.const 0))
        (local.set $mask_77_2 (i64.const 0))
        (local.set $mask_77_3 (i64.const 65280))
        (block
            (local.set $toInsert_75_0 (call $shift_left_8 (local.get $toInsert_75_0) (local.get $toInsert_75_1) (local.get $toInsert_75_2) (local.get $toInsert_75_3)))
            (local.set $toInsert_75_1 (global.get $global_))
            (local.set $toInsert_75_2 (global.get $global__1))
            (local.set $toInsert_75_3 (global.get $global__2))

        )
        (block
            (local.set $_94_0 (call $not (local.get $mask_77_0) (local.get $mask_77_1) (local.get $mask_77_2) (local.get $mask_77_3)))
            (local.set $_94_1 (global.get $global_))
            (local.set $_94_2 (global.get $global__1))
            (local.set $_94_3 (global.get $global__2))

        )
        (block
            (local.set $value_74_0 (call $and (local.get $value_74_0) (local.get $value_74_1) (local.get $value_74_2) (local.get $value_74_3) (local.get $_94_0) (local.get $_94_1) (local.get $_94_2) (local.get $_94_3)))
            (local.set $value_74_1 (global.get $global_))
            (local.set $value_74_2 (global.get $global__1))
            (local.set $value_74_3 (global.get $global__2))

        )
        (block
            (local.set $_95_0 (call $and (local.get $toInsert_75_0) (local.get $toInsert_75_1) (local.get $toInsert_75_2) (local.get $toInsert_75_3) (local.get $mask_77_0) (local.get $mask_77_1) (local.get $mask_77_2) (local.get $mask_77_3)))
            (local.set $_95_1 (global.get $global_))
            (local.set $_95_2 (global.get $global__1))
            (local.set $_95_3 (global.get $global__2))

        )
        (block
            (local.set $result_76_0 (call $or (local.get $value_74_0) (local.get $value_74_1) (local.get $value_74_2) (local.get $value_74_3) (local.get $_95_0) (local.get $_95_1) (local.get $_95_2) (local.get $_95_3)))
            (local.set $result_76_1 (global.get $global_))
            (local.set $result_76_2 (global.get $global__1))
            (local.set $result_76_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_76_1))
    (global.set $global__1 (local.get $result_76_2))
    (global.set $global__2 (local.get $result_76_3))
    (local.get $result_76_0)
)

(func $update_byte_slice_1_shift_20
    (param $value_78_0 i64)
    (param $value_78_1 i64)
    (param $value_78_2 i64)
    (param $value_78_3 i64)
    (param $toInsert_79_0 i64)
    (param $toInsert_79_1 i64)
    (param $toInsert_79_2 i64)
    (param $toInsert_79_3 i64)
    (result i64)
    (local $result_80_0 i64)
    (local $result_80_1 i64)
    (local $result_80_2 i64)
    (local $result_80_3 i64)
    (local $mask_81_0 i64)
    (local $mask_81_1 i64)
    (local $mask_81_2 i64)
    (local $mask_81_3 i64)
    (local $_96_0 i64)
    (local $_96_1 i64)
    (local $_96_2 i64)
    (local $_96_3 i64)
    (local $_97_0 i64)
    (local $_97_1 i64)
    (local $_97_2 i64)
    (local $_97_3 i64)
    (block $label__45
        (local.set $mask_81_0 (i64.const 0))
        (local.set $mask_81_1 (i64.const 1095216660480))
        (local.set $mask_81_2 (i64.const 0))
        (local.set $mask_81_3 (i64.const 0))
        (block
            (local.set $toInsert_79_0 (call $shift_left_160 (local.get $toInsert_79_0) (local.get $toInsert_79_1) (local.get $toInsert_79_2) (local.get $toInsert_79_3)))
            (local.set $toInsert_79_1 (global.get $global_))
            (local.set $toInsert_79_2 (global.get $global__1))
            (local.set $toInsert_79_3 (global.get $global__2))

        )
        (block
            (local.set $_96_0 (call $not (local.get $mask_81_0) (local.get $mask_81_1) (local.get $mask_81_2) (local.get $mask_81_3)))
            (local.set $_96_1 (global.get $global_))
            (local.set $_96_2 (global.get $global__1))
            (local.set $_96_3 (global.get $global__2))

        )
        (block
            (local.set $value_78_0 (call $and (local.get $value_78_0) (local.get $value_78_1) (local.get $value_78_2) (local.get $value_78_3) (local.get $_96_0) (local.get $_96_1) (local.get $_96_2) (local.get $_96_3)))
            (local.set $value_78_1 (global.get $global_))
            (local.set $value_78_2 (global.get $global__1))
            (local.set $value_78_3 (global.get $global__2))

        )
        (block
            (local.set $_97_0 (call $and (local.get $toInsert_79_0) (local.get $toInsert_79_1) (local.get $toInsert_79_2) (local.get $toInsert_79_3) (local.get $mask_81_0) (local.get $mask_81_1) (local.get $mask_81_2) (local.get $mask_81_3)))
            (local.set $_97_1 (global.get $global_))
            (local.set $_97_2 (global.get $global__1))
            (local.set $_97_3 (global.get $global__2))

        )
        (block
            (local.set $result_80_0 (call $or (local.get $value_78_0) (local.get $value_78_1) (local.get $value_78_2) (local.get $value_78_3) (local.get $_97_0) (local.get $_97_1) (local.get $_97_2) (local.get $_97_3)))
            (local.set $result_80_1 (global.get $global_))
            (local.set $result_80_2 (global.get $global__1))
            (local.set $result_80_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_80_1))
    (global.set $global__1 (local.get $result_80_2))
    (global.set $global__2 (local.get $result_80_3))
    (local.get $result_80_0)
)

(func $update_byte_slice_20_shift_0
    (param $value_82_0 i64)
    (param $value_82_1 i64)
    (param $value_82_2 i64)
    (param $value_82_3 i64)
    (param $toInsert_83_0 i64)
    (param $toInsert_83_1 i64)
    (param $toInsert_83_2 i64)
    (param $toInsert_83_3 i64)
    (result i64)
    (local $result_84_0 i64)
    (local $result_84_1 i64)
    (local $result_84_2 i64)
    (local $result_84_3 i64)
    (local $mask_85_0 i64)
    (local $mask_85_1 i64)
    (local $mask_85_2 i64)
    (local $mask_85_3 i64)
    (local $_98_0 i64)
    (local $_98_1 i64)
    (local $_98_2 i64)
    (local $_98_3 i64)
    (local $_99_0 i64)
    (local $_99_1 i64)
    (local $_99_2 i64)
    (local $_99_3 i64)
    (block $label__46
        (local.set $mask_85_0 (i64.const 0))
        (local.set $mask_85_1 (i64.const 4294967295))
        (local.set $mask_85_2 (i64.const 18446744073709551615))
        (local.set $mask_85_3 (i64.const 18446744073709551615))
        (block
            (local.set $toInsert_83_0 (call $shift_left_0 (local.get $toInsert_83_0) (local.get $toInsert_83_1) (local.get $toInsert_83_2) (local.get $toInsert_83_3)))
            (local.set $toInsert_83_1 (global.get $global_))
            (local.set $toInsert_83_2 (global.get $global__1))
            (local.set $toInsert_83_3 (global.get $global__2))

        )
        (block
            (local.set $_98_0 (call $not (local.get $mask_85_0) (local.get $mask_85_1) (local.get $mask_85_2) (local.get $mask_85_3)))
            (local.set $_98_1 (global.get $global_))
            (local.set $_98_2 (global.get $global__1))
            (local.set $_98_3 (global.get $global__2))

        )
        (block
            (local.set $value_82_0 (call $and (local.get $value_82_0) (local.get $value_82_1) (local.get $value_82_2) (local.get $value_82_3) (local.get $_98_0) (local.get $_98_1) (local.get $_98_2) (local.get $_98_3)))
            (local.set $value_82_1 (global.get $global_))
            (local.set $value_82_2 (global.get $global__1))
            (local.set $value_82_3 (global.get $global__2))

        )
        (block
            (local.set $_99_0 (call $and (local.get $toInsert_83_0) (local.get $toInsert_83_1) (local.get $toInsert_83_2) (local.get $toInsert_83_3) (local.get $mask_85_0) (local.get $mask_85_1) (local.get $mask_85_2) (local.get $mask_85_3)))
            (local.set $_99_1 (global.get $global_))
            (local.set $_99_2 (global.get $global__1))
            (local.set $_99_3 (global.get $global__2))

        )
        (block
            (local.set $result_84_0 (call $or (local.get $value_82_0) (local.get $value_82_1) (local.get $value_82_2) (local.get $value_82_3) (local.get $_99_0) (local.get $_99_1) (local.get $_99_2) (local.get $_99_3)))
            (local.set $result_84_1 (global.get $global_))
            (local.set $result_84_2 (global.get $global__1))
            (local.set $result_84_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_84_1))
    (global.set $global__1 (local.get $result_84_2))
    (global.set $global__2 (local.get $result_84_3))
    (local.get $result_84_0)
)

(func $update_byte_slice_2_shift_0
    (param $value_86_0 i64)
    (param $value_86_1 i64)
    (param $value_86_2 i64)
    (param $value_86_3 i64)
    (param $toInsert_87_0 i64)
    (param $toInsert_87_1 i64)
    (param $toInsert_87_2 i64)
    (param $toInsert_87_3 i64)
    (result i64)
    (local $result_88_0 i64)
    (local $result_88_1 i64)
    (local $result_88_2 i64)
    (local $result_88_3 i64)
    (local $mask_89_0 i64)
    (local $mask_89_1 i64)
    (local $mask_89_2 i64)
    (local $mask_89_3 i64)
    (local $_100_0 i64)
    (local $_100_1 i64)
    (local $_100_2 i64)
    (local $_100_3 i64)
    (local $_101_0 i64)
    (local $_101_1 i64)
    (local $_101_2 i64)
    (local $_101_3 i64)
    (block $label__47
        (local.set $mask_89_0 (i64.const 0))
        (local.set $mask_89_1 (i64.const 0))
        (local.set $mask_89_2 (i64.const 0))
        (local.set $mask_89_3 (i64.const 65535))
        (block
            (local.set $toInsert_87_0 (call $shift_left_0 (local.get $toInsert_87_0) (local.get $toInsert_87_1) (local.get $toInsert_87_2) (local.get $toInsert_87_3)))
            (local.set $toInsert_87_1 (global.get $global_))
            (local.set $toInsert_87_2 (global.get $global__1))
            (local.set $toInsert_87_3 (global.get $global__2))

        )
        (block
            (local.set $_100_0 (call $not (local.get $mask_89_0) (local.get $mask_89_1) (local.get $mask_89_2) (local.get $mask_89_3)))
            (local.set $_100_1 (global.get $global_))
            (local.set $_100_2 (global.get $global__1))
            (local.set $_100_3 (global.get $global__2))

        )
        (block
            (local.set $value_86_0 (call $and (local.get $value_86_0) (local.get $value_86_1) (local.get $value_86_2) (local.get $value_86_3) (local.get $_100_0) (local.get $_100_1) (local.get $_100_2) (local.get $_100_3)))
            (local.set $value_86_1 (global.get $global_))
            (local.set $value_86_2 (global.get $global__1))
            (local.set $value_86_3 (global.get $global__2))

        )
        (block
            (local.set $_101_0 (call $and (local.get $toInsert_87_0) (local.get $toInsert_87_1) (local.get $toInsert_87_2) (local.get $toInsert_87_3) (local.get $mask_89_0) (local.get $mask_89_1) (local.get $mask_89_2) (local.get $mask_89_3)))
            (local.set $_101_1 (global.get $global_))
            (local.set $_101_2 (global.get $global__1))
            (local.set $_101_3 (global.get $global__2))

        )
        (block
            (local.set $result_88_0 (call $or (local.get $value_86_0) (local.get $value_86_1) (local.get $value_86_2) (local.get $value_86_3) (local.get $_101_0) (local.get $_101_1) (local.get $_101_2) (local.get $_101_3)))
            (local.set $result_88_1 (global.get $global_))
            (local.set $result_88_2 (global.get $global__1))
            (local.set $result_88_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_88_1))
    (global.set $global__1 (local.get $result_88_2))
    (global.set $global__2 (local.get $result_88_3))
    (local.get $result_88_0)
)

(func $update_byte_slice_32_shift_0
    (param $value_90_0 i64)
    (param $value_90_1 i64)
    (param $value_90_2 i64)
    (param $value_90_3 i64)
    (param $toInsert_91_0 i64)
    (param $toInsert_91_1 i64)
    (param $toInsert_91_2 i64)
    (param $toInsert_91_3 i64)
    (result i64)
    (local $result_92_0 i64)
    (local $result_92_1 i64)
    (local $result_92_2 i64)
    (local $result_92_3 i64)
    (local $mask_93_0 i64)
    (local $mask_93_1 i64)
    (local $mask_93_2 i64)
    (local $mask_93_3 i64)
    (local $_102_0 i64)
    (local $_102_1 i64)
    (local $_102_2 i64)
    (local $_102_3 i64)
    (local $_103_0 i64)
    (local $_103_1 i64)
    (local $_103_2 i64)
    (local $_103_3 i64)
    (block $label__48
        (local.set $mask_93_0 (i64.const 18446744073709551615))
        (local.set $mask_93_1 (i64.const 18446744073709551615))
        (local.set $mask_93_2 (i64.const 18446744073709551615))
        (local.set $mask_93_3 (i64.const 18446744073709551615))
        (block
            (local.set $toInsert_91_0 (call $shift_left_0 (local.get $toInsert_91_0) (local.get $toInsert_91_1) (local.get $toInsert_91_2) (local.get $toInsert_91_3)))
            (local.set $toInsert_91_1 (global.get $global_))
            (local.set $toInsert_91_2 (global.get $global__1))
            (local.set $toInsert_91_3 (global.get $global__2))

        )
        (block
            (local.set $_102_0 (call $not (local.get $mask_93_0) (local.get $mask_93_1) (local.get $mask_93_2) (local.get $mask_93_3)))
            (local.set $_102_1 (global.get $global_))
            (local.set $_102_2 (global.get $global__1))
            (local.set $_102_3 (global.get $global__2))

        )
        (block
            (local.set $value_90_0 (call $and (local.get $value_90_0) (local.get $value_90_1) (local.get $value_90_2) (local.get $value_90_3) (local.get $_102_0) (local.get $_102_1) (local.get $_102_2) (local.get $_102_3)))
            (local.set $value_90_1 (global.get $global_))
            (local.set $value_90_2 (global.get $global__1))
            (local.set $value_90_3 (global.get $global__2))

        )
        (block
            (local.set $_103_0 (call $and (local.get $toInsert_91_0) (local.get $toInsert_91_1) (local.get $toInsert_91_2) (local.get $toInsert_91_3) (local.get $mask_93_0) (local.get $mask_93_1) (local.get $mask_93_2) (local.get $mask_93_3)))
            (local.set $_103_1 (global.get $global_))
            (local.set $_103_2 (global.get $global__1))
            (local.set $_103_3 (global.get $global__2))

        )
        (block
            (local.set $result_92_0 (call $or (local.get $value_90_0) (local.get $value_90_1) (local.get $value_90_2) (local.get $value_90_3) (local.get $_103_0) (local.get $_103_1) (local.get $_103_2) (local.get $_103_3)))
            (local.set $result_92_1 (global.get $global_))
            (local.set $result_92_2 (global.get $global__1))
            (local.set $result_92_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_92_1))
    (global.set $global__1 (local.get $result_92_2))
    (global.set $global__2 (local.get $result_92_3))
    (local.get $result_92_0)
)

(func $update_byte_slice_4_shift_0
    (param $value_94_0 i64)
    (param $value_94_1 i64)
    (param $value_94_2 i64)
    (param $value_94_3 i64)
    (param $toInsert_95_0 i64)
    (param $toInsert_95_1 i64)
    (param $toInsert_95_2 i64)
    (param $toInsert_95_3 i64)
    (result i64)
    (local $result_96_0 i64)
    (local $result_96_1 i64)
    (local $result_96_2 i64)
    (local $result_96_3 i64)
    (local $mask_97_0 i64)
    (local $mask_97_1 i64)
    (local $mask_97_2 i64)
    (local $mask_97_3 i64)
    (local $_104_0 i64)
    (local $_104_1 i64)
    (local $_104_2 i64)
    (local $_104_3 i64)
    (local $_105_0 i64)
    (local $_105_1 i64)
    (local $_105_2 i64)
    (local $_105_3 i64)
    (block $label__49
        (local.set $mask_97_0 (i64.const 0))
        (local.set $mask_97_1 (i64.const 0))
        (local.set $mask_97_2 (i64.const 0))
        (local.set $mask_97_3 (i64.const 4294967295))
        (block
            (local.set $toInsert_95_0 (call $shift_left_0 (local.get $toInsert_95_0) (local.get $toInsert_95_1) (local.get $toInsert_95_2) (local.get $toInsert_95_3)))
            (local.set $toInsert_95_1 (global.get $global_))
            (local.set $toInsert_95_2 (global.get $global__1))
            (local.set $toInsert_95_3 (global.get $global__2))

        )
        (block
            (local.set $_104_0 (call $not (local.get $mask_97_0) (local.get $mask_97_1) (local.get $mask_97_2) (local.get $mask_97_3)))
            (local.set $_104_1 (global.get $global_))
            (local.set $_104_2 (global.get $global__1))
            (local.set $_104_3 (global.get $global__2))

        )
        (block
            (local.set $value_94_0 (call $and (local.get $value_94_0) (local.get $value_94_1) (local.get $value_94_2) (local.get $value_94_3) (local.get $_104_0) (local.get $_104_1) (local.get $_104_2) (local.get $_104_3)))
            (local.set $value_94_1 (global.get $global_))
            (local.set $value_94_2 (global.get $global__1))
            (local.set $value_94_3 (global.get $global__2))

        )
        (block
            (local.set $_105_0 (call $and (local.get $toInsert_95_0) (local.get $toInsert_95_1) (local.get $toInsert_95_2) (local.get $toInsert_95_3) (local.get $mask_97_0) (local.get $mask_97_1) (local.get $mask_97_2) (local.get $mask_97_3)))
            (local.set $_105_1 (global.get $global_))
            (local.set $_105_2 (global.get $global__1))
            (local.set $_105_3 (global.get $global__2))

        )
        (block
            (local.set $result_96_0 (call $or (local.get $value_94_0) (local.get $value_94_1) (local.get $value_94_2) (local.get $value_94_3) (local.get $_105_0) (local.get $_105_1) (local.get $_105_2) (local.get $_105_3)))
            (local.set $result_96_1 (global.get $global_))
            (local.set $result_96_2 (global.get $global__1))
            (local.set $result_96_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_96_1))
    (global.set $global__1 (local.get $result_96_2))
    (global.set $global__2 (local.get $result_96_3))
    (local.get $result_96_0)
)

(func $update_byte_slice_4_shift_2
    (param $value_98_0 i64)
    (param $value_98_1 i64)
    (param $value_98_2 i64)
    (param $value_98_3 i64)
    (param $toInsert_99_0 i64)
    (param $toInsert_99_1 i64)
    (param $toInsert_99_2 i64)
    (param $toInsert_99_3 i64)
    (result i64)
    (local $result_100_0 i64)
    (local $result_100_1 i64)
    (local $result_100_2 i64)
    (local $result_100_3 i64)
    (local $mask_101_0 i64)
    (local $mask_101_1 i64)
    (local $mask_101_2 i64)
    (local $mask_101_3 i64)
    (local $_106_0 i64)
    (local $_106_1 i64)
    (local $_106_2 i64)
    (local $_106_3 i64)
    (local $_107_0 i64)
    (local $_107_1 i64)
    (local $_107_2 i64)
    (local $_107_3 i64)
    (block $label__50
        (local.set $mask_101_0 (i64.const 0))
        (local.set $mask_101_1 (i64.const 0))
        (local.set $mask_101_2 (i64.const 0))
        (local.set $mask_101_3 (i64.const 281474976645120))
        (block
            (local.set $toInsert_99_0 (call $shift_left_16 (local.get $toInsert_99_0) (local.get $toInsert_99_1) (local.get $toInsert_99_2) (local.get $toInsert_99_3)))
            (local.set $toInsert_99_1 (global.get $global_))
            (local.set $toInsert_99_2 (global.get $global__1))
            (local.set $toInsert_99_3 (global.get $global__2))

        )
        (block
            (local.set $_106_0 (call $not (local.get $mask_101_0) (local.get $mask_101_1) (local.get $mask_101_2) (local.get $mask_101_3)))
            (local.set $_106_1 (global.get $global_))
            (local.set $_106_2 (global.get $global__1))
            (local.set $_106_3 (global.get $global__2))

        )
        (block
            (local.set $value_98_0 (call $and (local.get $value_98_0) (local.get $value_98_1) (local.get $value_98_2) (local.get $value_98_3) (local.get $_106_0) (local.get $_106_1) (local.get $_106_2) (local.get $_106_3)))
            (local.set $value_98_1 (global.get $global_))
            (local.set $value_98_2 (global.get $global__1))
            (local.set $value_98_3 (global.get $global__2))

        )
        (block
            (local.set $_107_0 (call $and (local.get $toInsert_99_0) (local.get $toInsert_99_1) (local.get $toInsert_99_2) (local.get $toInsert_99_3) (local.get $mask_101_0) (local.get $mask_101_1) (local.get $mask_101_2) (local.get $mask_101_3)))
            (local.set $_107_1 (global.get $global_))
            (local.set $_107_2 (global.get $global__1))
            (local.set $_107_3 (global.get $global__2))

        )
        (block
            (local.set $result_100_0 (call $or (local.get $value_98_0) (local.get $value_98_1) (local.get $value_98_2) (local.get $value_98_3) (local.get $_107_0) (local.get $_107_1) (local.get $_107_2) (local.get $_107_3)))
            (local.set $result_100_1 (global.get $global_))
            (local.set $result_100_2 (global.get $global__1))
            (local.set $result_100_3 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $result_100_1))
    (global.set $global__1 (local.get $result_100_2))
    (global.set $global__2 (local.get $result_100_3))
    (local.get $result_100_0)
)

(func $update_storage_value_offset_0t_address_to_t_address
    (param $slot_102_0 i64)
    (param $slot_102_1 i64)
    (param $slot_102_2 i64)
    (param $slot_102_3 i64)
    (param $value_0_0 i64)
    (param $value_0_1 i64)
    (param $value_0_2 i64)
    (param $value_0_3 i64)
    (local $convertedValue_0_0 i64)
    (local $convertedValue_0_1 i64)
    (local $convertedValue_0_2 i64)
    (local $convertedValue_0_3 i64)
    (local $_108_0 i64)
    (local $_108_1 i64)
    (local $_108_2 i64)
    (local $_108_3 i64)
    (local $_109_0 i64)
    (local $_109_1 i64)
    (local $_109_2 i64)
    (local $_109_3 i64)
    (local $_110_0 i64)
    (local $_110_1 i64)
    (local $_110_2 i64)
    (local $_110_3 i64)
    (block $label__51
        (block
            (local.set $convertedValue_0_0 (call $convert_t_address_to_t_address (local.get $value_0_0) (local.get $value_0_1) (local.get $value_0_2) (local.get $value_0_3)))
            (local.set $convertedValue_0_1 (global.get $global_))
            (local.set $convertedValue_0_2 (global.get $global__1))
            (local.set $convertedValue_0_3 (global.get $global__2))

        )
        (block
            (local.set $_108_0 (call $prepare_store_t_address (local.get $convertedValue_0_0) (local.get $convertedValue_0_1) (local.get $convertedValue_0_2) (local.get $convertedValue_0_3)))
            (local.set $_108_1 (global.get $global_))
            (local.set $_108_2 (global.get $global__1))
            (local.set $_108_3 (global.get $global__2))

        )
        (block
            (local.set $_109_0 (call $sload (local.get $slot_102_0) (local.get $slot_102_1) (local.get $slot_102_2) (local.get $slot_102_3)))
            (local.set $_109_1 (global.get $global_))
            (local.set $_109_2 (global.get $global__1))
            (local.set $_109_3 (global.get $global__2))

        )
        (block
            (local.set $_110_0 (call $update_byte_slice_20_shift_0 (local.get $_109_0) (local.get $_109_1) (local.get $_109_2) (local.get $_109_3) (local.get $_108_0) (local.get $_108_1) (local.get $_108_2) (local.get $_108_3)))
            (local.set $_110_1 (global.get $global_))
            (local.set $_110_2 (global.get $global__1))
            (local.set $_110_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_102_0) (local.get $slot_102_1) (local.get $slot_102_2) (local.get $slot_102_3) (local.get $_110_0) (local.get $_110_1) (local.get $_110_2) (local.get $_110_3))
    )
)

(func $update_storage_value_offset_0t_bool_to_t_bool
    (param $slot_103_0 i64)
    (param $slot_103_1 i64)
    (param $slot_103_2 i64)
    (param $slot_103_3 i64)
    (param $value_0_104_0 i64)
    (param $value_0_104_1 i64)
    (param $value_0_104_2 i64)
    (param $value_0_104_3 i64)
    (local $convertedValue_0_105_0 i64)
    (local $convertedValue_0_105_1 i64)
    (local $convertedValue_0_105_2 i64)
    (local $convertedValue_0_105_3 i64)
    (local $_111_0 i64)
    (local $_111_1 i64)
    (local $_111_2 i64)
    (local $_111_3 i64)
    (local $_112_0 i64)
    (local $_112_1 i64)
    (local $_112_2 i64)
    (local $_112_3 i64)
    (local $_113_0 i64)
    (local $_113_1 i64)
    (local $_113_2 i64)
    (local $_113_3 i64)
    (block $label__52
        (block
            (local.set $convertedValue_0_105_0 (call $convert_t_bool_to_t_bool (local.get $value_0_104_0) (local.get $value_0_104_1) (local.get $value_0_104_2) (local.get $value_0_104_3)))
            (local.set $convertedValue_0_105_1 (global.get $global_))
            (local.set $convertedValue_0_105_2 (global.get $global__1))
            (local.set $convertedValue_0_105_3 (global.get $global__2))

        )
        (block
            (local.set $_111_0 (call $prepare_store_t_bool (local.get $convertedValue_0_105_0) (local.get $convertedValue_0_105_1) (local.get $convertedValue_0_105_2) (local.get $convertedValue_0_105_3)))
            (local.set $_111_1 (global.get $global_))
            (local.set $_111_2 (global.get $global__1))
            (local.set $_111_3 (global.get $global__2))

        )
        (block
            (local.set $_112_0 (call $sload (local.get $slot_103_0) (local.get $slot_103_1) (local.get $slot_103_2) (local.get $slot_103_3)))
            (local.set $_112_1 (global.get $global_))
            (local.set $_112_2 (global.get $global__1))
            (local.set $_112_3 (global.get $global__2))

        )
        (block
            (local.set $_113_0 (call $update_byte_slice_1_shift_0 (local.get $_112_0) (local.get $_112_1) (local.get $_112_2) (local.get $_112_3) (local.get $_111_0) (local.get $_111_1) (local.get $_111_2) (local.get $_111_3)))
            (local.set $_113_1 (global.get $global_))
            (local.set $_113_2 (global.get $global__1))
            (local.set $_113_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_103_0) (local.get $slot_103_1) (local.get $slot_103_2) (local.get $slot_103_3) (local.get $_113_0) (local.get $_113_1) (local.get $_113_2) (local.get $_113_3))
    )
)

(func $update_storage_value_offset_0t_rational_0_by_1_to_t_uint16
    (param $slot_106_0 i64)
    (param $slot_106_1 i64)
    (param $slot_106_2 i64)
    (param $slot_106_3 i64)
    (param $value_0_107_0 i64)
    (param $value_0_107_1 i64)
    (param $value_0_107_2 i64)
    (param $value_0_107_3 i64)
    (local $convertedValue_0_108_0 i64)
    (local $convertedValue_0_108_1 i64)
    (local $convertedValue_0_108_2 i64)
    (local $convertedValue_0_108_3 i64)
    (local $_114_0 i64)
    (local $_114_1 i64)
    (local $_114_2 i64)
    (local $_114_3 i64)
    (local $_115_0 i64)
    (local $_115_1 i64)
    (local $_115_2 i64)
    (local $_115_3 i64)
    (local $_116_0 i64)
    (local $_116_1 i64)
    (local $_116_2 i64)
    (local $_116_3 i64)
    (block $label__53
        (block
            (local.set $convertedValue_0_108_0 (call $convert_t_rational_0_by_1_to_t_uint16 (local.get $value_0_107_0) (local.get $value_0_107_1) (local.get $value_0_107_2) (local.get $value_0_107_3)))
            (local.set $convertedValue_0_108_1 (global.get $global_))
            (local.set $convertedValue_0_108_2 (global.get $global__1))
            (local.set $convertedValue_0_108_3 (global.get $global__2))

        )
        (block
            (local.set $_114_0 (call $prepare_store_t_uint16 (local.get $convertedValue_0_108_0) (local.get $convertedValue_0_108_1) (local.get $convertedValue_0_108_2) (local.get $convertedValue_0_108_3)))
            (local.set $_114_1 (global.get $global_))
            (local.set $_114_2 (global.get $global__1))
            (local.set $_114_3 (global.get $global__2))

        )
        (block
            (local.set $_115_0 (call $sload (local.get $slot_106_0) (local.get $slot_106_1) (local.get $slot_106_2) (local.get $slot_106_3)))
            (local.set $_115_1 (global.get $global_))
            (local.set $_115_2 (global.get $global__1))
            (local.set $_115_3 (global.get $global__2))

        )
        (block
            (local.set $_116_0 (call $update_byte_slice_2_shift_0 (local.get $_115_0) (local.get $_115_1) (local.get $_115_2) (local.get $_115_3) (local.get $_114_0) (local.get $_114_1) (local.get $_114_2) (local.get $_114_3)))
            (local.set $_116_1 (global.get $global_))
            (local.set $_116_2 (global.get $global__1))
            (local.set $_116_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_106_0) (local.get $slot_106_1) (local.get $slot_106_2) (local.get $slot_106_3) (local.get $_116_0) (local.get $_116_1) (local.get $_116_2) (local.get $_116_3))
    )
)

(func $update_storage_value_offset_0t_rational_0_by_1_to_t_uint256
    (param $slot_109_0 i64)
    (param $slot_109_1 i64)
    (param $slot_109_2 i64)
    (param $slot_109_3 i64)
    (param $value_0_110_0 i64)
    (param $value_0_110_1 i64)
    (param $value_0_110_2 i64)
    (param $value_0_110_3 i64)
    (local $convertedValue_0_111_0 i64)
    (local $convertedValue_0_111_1 i64)
    (local $convertedValue_0_111_2 i64)
    (local $convertedValue_0_111_3 i64)
    (local $_117_0 i64)
    (local $_117_1 i64)
    (local $_117_2 i64)
    (local $_117_3 i64)
    (local $_118_0 i64)
    (local $_118_1 i64)
    (local $_118_2 i64)
    (local $_118_3 i64)
    (local $_119_0 i64)
    (local $_119_1 i64)
    (local $_119_2 i64)
    (local $_119_3 i64)
    (block $label__54
        (block
            (local.set $convertedValue_0_111_0 (call $convert_t_rational_0_by_1_to_t_uint256 (local.get $value_0_110_0) (local.get $value_0_110_1) (local.get $value_0_110_2) (local.get $value_0_110_3)))
            (local.set $convertedValue_0_111_1 (global.get $global_))
            (local.set $convertedValue_0_111_2 (global.get $global__1))
            (local.set $convertedValue_0_111_3 (global.get $global__2))

        )
        (block
            (local.set $_117_0 (call $prepare_store_t_uint256 (local.get $convertedValue_0_111_0) (local.get $convertedValue_0_111_1) (local.get $convertedValue_0_111_2) (local.get $convertedValue_0_111_3)))
            (local.set $_117_1 (global.get $global_))
            (local.set $_117_2 (global.get $global__1))
            (local.set $_117_3 (global.get $global__2))

        )
        (block
            (local.set $_118_0 (call $sload (local.get $slot_109_0) (local.get $slot_109_1) (local.get $slot_109_2) (local.get $slot_109_3)))
            (local.set $_118_1 (global.get $global_))
            (local.set $_118_2 (global.get $global__1))
            (local.set $_118_3 (global.get $global__2))

        )
        (block
            (local.set $_119_0 (call $update_byte_slice_32_shift_0 (local.get $_118_0) (local.get $_118_1) (local.get $_118_2) (local.get $_118_3) (local.get $_117_0) (local.get $_117_1) (local.get $_117_2) (local.get $_117_3)))
            (local.set $_119_1 (global.get $global_))
            (local.set $_119_2 (global.get $global__1))
            (local.set $_119_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_109_0) (local.get $slot_109_1) (local.get $slot_109_2) (local.get $slot_109_3) (local.get $_119_0) (local.get $_119_1) (local.get $_119_2) (local.get $_119_3))
    )
)

(func $update_storage_value_offset_0t_uint256_to_t_uint256
    (param $slot_112_0 i64)
    (param $slot_112_1 i64)
    (param $slot_112_2 i64)
    (param $slot_112_3 i64)
    (param $value_0_113_0 i64)
    (param $value_0_113_1 i64)
    (param $value_0_113_2 i64)
    (param $value_0_113_3 i64)
    (local $convertedValue_0_114_0 i64)
    (local $convertedValue_0_114_1 i64)
    (local $convertedValue_0_114_2 i64)
    (local $convertedValue_0_114_3 i64)
    (local $_120_0 i64)
    (local $_120_1 i64)
    (local $_120_2 i64)
    (local $_120_3 i64)
    (local $_121_0 i64)
    (local $_121_1 i64)
    (local $_121_2 i64)
    (local $_121_3 i64)
    (local $_122_0 i64)
    (local $_122_1 i64)
    (local $_122_2 i64)
    (local $_122_3 i64)
    (block $label__55
        (block
            (local.set $convertedValue_0_114_0 (call $convert_t_uint256_to_t_uint256 (local.get $value_0_113_0) (local.get $value_0_113_1) (local.get $value_0_113_2) (local.get $value_0_113_3)))
            (local.set $convertedValue_0_114_1 (global.get $global_))
            (local.set $convertedValue_0_114_2 (global.get $global__1))
            (local.set $convertedValue_0_114_3 (global.get $global__2))

        )
        (block
            (local.set $_120_0 (call $prepare_store_t_uint256 (local.get $convertedValue_0_114_0) (local.get $convertedValue_0_114_1) (local.get $convertedValue_0_114_2) (local.get $convertedValue_0_114_3)))
            (local.set $_120_1 (global.get $global_))
            (local.set $_120_2 (global.get $global__1))
            (local.set $_120_3 (global.get $global__2))

        )
        (block
            (local.set $_121_0 (call $sload (local.get $slot_112_0) (local.get $slot_112_1) (local.get $slot_112_2) (local.get $slot_112_3)))
            (local.set $_121_1 (global.get $global_))
            (local.set $_121_2 (global.get $global__1))
            (local.set $_121_3 (global.get $global__2))

        )
        (block
            (local.set $_122_0 (call $update_byte_slice_32_shift_0 (local.get $_121_0) (local.get $_121_1) (local.get $_121_2) (local.get $_121_3) (local.get $_120_0) (local.get $_120_1) (local.get $_120_2) (local.get $_120_3)))
            (local.set $_122_1 (global.get $global_))
            (local.set $_122_2 (global.get $global__1))
            (local.set $_122_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_112_0) (local.get $slot_112_1) (local.get $slot_112_2) (local.get $slot_112_3) (local.get $_122_0) (local.get $_122_1) (local.get $_122_2) (local.get $_122_3))
    )
)

(func $update_storage_value_offset_0t_uint32_to_t_uint32
    (param $slot_115_0 i64)
    (param $slot_115_1 i64)
    (param $slot_115_2 i64)
    (param $slot_115_3 i64)
    (param $value_0_116_0 i64)
    (param $value_0_116_1 i64)
    (param $value_0_116_2 i64)
    (param $value_0_116_3 i64)
    (local $convertedValue_0_117_0 i64)
    (local $convertedValue_0_117_1 i64)
    (local $convertedValue_0_117_2 i64)
    (local $convertedValue_0_117_3 i64)
    (local $_123_0 i64)
    (local $_123_1 i64)
    (local $_123_2 i64)
    (local $_123_3 i64)
    (local $_124_0 i64)
    (local $_124_1 i64)
    (local $_124_2 i64)
    (local $_124_3 i64)
    (local $_125_0 i64)
    (local $_125_1 i64)
    (local $_125_2 i64)
    (local $_125_3 i64)
    (block $label__56
        (block
            (local.set $convertedValue_0_117_0 (call $convert_t_uint32_to_t_uint32 (local.get $value_0_116_0) (local.get $value_0_116_1) (local.get $value_0_116_2) (local.get $value_0_116_3)))
            (local.set $convertedValue_0_117_1 (global.get $global_))
            (local.set $convertedValue_0_117_2 (global.get $global__1))
            (local.set $convertedValue_0_117_3 (global.get $global__2))

        )
        (block
            (local.set $_123_0 (call $prepare_store_t_uint32 (local.get $convertedValue_0_117_0) (local.get $convertedValue_0_117_1) (local.get $convertedValue_0_117_2) (local.get $convertedValue_0_117_3)))
            (local.set $_123_1 (global.get $global_))
            (local.set $_123_2 (global.get $global__1))
            (local.set $_123_3 (global.get $global__2))

        )
        (block
            (local.set $_124_0 (call $sload (local.get $slot_115_0) (local.get $slot_115_1) (local.get $slot_115_2) (local.get $slot_115_3)))
            (local.set $_124_1 (global.get $global_))
            (local.set $_124_2 (global.get $global__1))
            (local.set $_124_3 (global.get $global__2))

        )
        (block
            (local.set $_125_0 (call $update_byte_slice_4_shift_0 (local.get $_124_0) (local.get $_124_1) (local.get $_124_2) (local.get $_124_3) (local.get $_123_0) (local.get $_123_1) (local.get $_123_2) (local.get $_123_3)))
            (local.set $_125_1 (global.get $global_))
            (local.set $_125_2 (global.get $global__1))
            (local.set $_125_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_115_0) (local.get $slot_115_1) (local.get $slot_115_2) (local.get $slot_115_3) (local.get $_125_0) (local.get $_125_1) (local.get $_125_2) (local.get $_125_3))
    )
)

(func $update_storage_value_offset_1t_bool_to_t_bool
    (param $slot_118_0 i64)
    (param $slot_118_1 i64)
    (param $slot_118_2 i64)
    (param $slot_118_3 i64)
    (param $value_0_119_0 i64)
    (param $value_0_119_1 i64)
    (param $value_0_119_2 i64)
    (param $value_0_119_3 i64)
    (local $convertedValue_0_120_0 i64)
    (local $convertedValue_0_120_1 i64)
    (local $convertedValue_0_120_2 i64)
    (local $convertedValue_0_120_3 i64)
    (local $_126_0 i64)
    (local $_126_1 i64)
    (local $_126_2 i64)
    (local $_126_3 i64)
    (local $_127_0 i64)
    (local $_127_1 i64)
    (local $_127_2 i64)
    (local $_127_3 i64)
    (local $_128_0 i64)
    (local $_128_1 i64)
    (local $_128_2 i64)
    (local $_128_3 i64)
    (block $label__57
        (block
            (local.set $convertedValue_0_120_0 (call $convert_t_bool_to_t_bool (local.get $value_0_119_0) (local.get $value_0_119_1) (local.get $value_0_119_2) (local.get $value_0_119_3)))
            (local.set $convertedValue_0_120_1 (global.get $global_))
            (local.set $convertedValue_0_120_2 (global.get $global__1))
            (local.set $convertedValue_0_120_3 (global.get $global__2))

        )
        (block
            (local.set $_126_0 (call $prepare_store_t_bool (local.get $convertedValue_0_120_0) (local.get $convertedValue_0_120_1) (local.get $convertedValue_0_120_2) (local.get $convertedValue_0_120_3)))
            (local.set $_126_1 (global.get $global_))
            (local.set $_126_2 (global.get $global__1))
            (local.set $_126_3 (global.get $global__2))

        )
        (block
            (local.set $_127_0 (call $sload (local.get $slot_118_0) (local.get $slot_118_1) (local.get $slot_118_2) (local.get $slot_118_3)))
            (local.set $_127_1 (global.get $global_))
            (local.set $_127_2 (global.get $global__1))
            (local.set $_127_3 (global.get $global__2))

        )
        (block
            (local.set $_128_0 (call $update_byte_slice_1_shift_1 (local.get $_127_0) (local.get $_127_1) (local.get $_127_2) (local.get $_127_3) (local.get $_126_0) (local.get $_126_1) (local.get $_126_2) (local.get $_126_3)))
            (local.set $_128_1 (global.get $global_))
            (local.set $_128_2 (global.get $global__1))
            (local.set $_128_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_118_0) (local.get $slot_118_1) (local.get $slot_118_2) (local.get $slot_118_3) (local.get $_128_0) (local.get $_128_1) (local.get $_128_2) (local.get $_128_3))
    )
)

(func $update_storage_value_offset_20t_rational_0_by_1_to_t_uint8
    (param $slot_121_0 i64)
    (param $slot_121_1 i64)
    (param $slot_121_2 i64)
    (param $slot_121_3 i64)
    (param $value_0_122_0 i64)
    (param $value_0_122_1 i64)
    (param $value_0_122_2 i64)
    (param $value_0_122_3 i64)
    (local $convertedValue_0_123_0 i64)
    (local $convertedValue_0_123_1 i64)
    (local $convertedValue_0_123_2 i64)
    (local $convertedValue_0_123_3 i64)
    (local $_129_0 i64)
    (local $_129_1 i64)
    (local $_129_2 i64)
    (local $_129_3 i64)
    (local $_130_0 i64)
    (local $_130_1 i64)
    (local $_130_2 i64)
    (local $_130_3 i64)
    (local $_131_0 i64)
    (local $_131_1 i64)
    (local $_131_2 i64)
    (local $_131_3 i64)
    (block $label__58
        (block
            (local.set $convertedValue_0_123_0 (call $convert_t_rational_0_by_1_to_t_uint8 (local.get $value_0_122_0) (local.get $value_0_122_1) (local.get $value_0_122_2) (local.get $value_0_122_3)))
            (local.set $convertedValue_0_123_1 (global.get $global_))
            (local.set $convertedValue_0_123_2 (global.get $global__1))
            (local.set $convertedValue_0_123_3 (global.get $global__2))

        )
        (block
            (local.set $_129_0 (call $prepare_store_t_uint8 (local.get $convertedValue_0_123_0) (local.get $convertedValue_0_123_1) (local.get $convertedValue_0_123_2) (local.get $convertedValue_0_123_3)))
            (local.set $_129_1 (global.get $global_))
            (local.set $_129_2 (global.get $global__1))
            (local.set $_129_3 (global.get $global__2))

        )
        (block
            (local.set $_130_0 (call $sload (local.get $slot_121_0) (local.get $slot_121_1) (local.get $slot_121_2) (local.get $slot_121_3)))
            (local.set $_130_1 (global.get $global_))
            (local.set $_130_2 (global.get $global__1))
            (local.set $_130_3 (global.get $global__2))

        )
        (block
            (local.set $_131_0 (call $update_byte_slice_1_shift_20 (local.get $_130_0) (local.get $_130_1) (local.get $_130_2) (local.get $_130_3) (local.get $_129_0) (local.get $_129_1) (local.get $_129_2) (local.get $_129_3)))
            (local.set $_131_1 (global.get $global_))
            (local.set $_131_2 (global.get $global__1))
            (local.set $_131_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_121_0) (local.get $slot_121_1) (local.get $slot_121_2) (local.get $slot_121_3) (local.get $_131_0) (local.get $_131_1) (local.get $_131_2) (local.get $_131_3))
    )
)

(func $update_storage_value_offset_20t_uint8_to_t_uint8
    (param $slot_124_0 i64)
    (param $slot_124_1 i64)
    (param $slot_124_2 i64)
    (param $slot_124_3 i64)
    (param $value_0_125_0 i64)
    (param $value_0_125_1 i64)
    (param $value_0_125_2 i64)
    (param $value_0_125_3 i64)
    (local $convertedValue_0_126_0 i64)
    (local $convertedValue_0_126_1 i64)
    (local $convertedValue_0_126_2 i64)
    (local $convertedValue_0_126_3 i64)
    (local $_132_0 i64)
    (local $_132_1 i64)
    (local $_132_2 i64)
    (local $_132_3 i64)
    (local $_133_0 i64)
    (local $_133_1 i64)
    (local $_133_2 i64)
    (local $_133_3 i64)
    (local $_134_0 i64)
    (local $_134_1 i64)
    (local $_134_2 i64)
    (local $_134_3 i64)
    (block $label__59
        (block
            (local.set $convertedValue_0_126_0 (call $convert_t_uint8_to_t_uint8 (local.get $value_0_125_0) (local.get $value_0_125_1) (local.get $value_0_125_2) (local.get $value_0_125_3)))
            (local.set $convertedValue_0_126_1 (global.get $global_))
            (local.set $convertedValue_0_126_2 (global.get $global__1))
            (local.set $convertedValue_0_126_3 (global.get $global__2))

        )
        (block
            (local.set $_132_0 (call $prepare_store_t_uint8 (local.get $convertedValue_0_126_0) (local.get $convertedValue_0_126_1) (local.get $convertedValue_0_126_2) (local.get $convertedValue_0_126_3)))
            (local.set $_132_1 (global.get $global_))
            (local.set $_132_2 (global.get $global__1))
            (local.set $_132_3 (global.get $global__2))

        )
        (block
            (local.set $_133_0 (call $sload (local.get $slot_124_0) (local.get $slot_124_1) (local.get $slot_124_2) (local.get $slot_124_3)))
            (local.set $_133_1 (global.get $global_))
            (local.set $_133_2 (global.get $global__1))
            (local.set $_133_3 (global.get $global__2))

        )
        (block
            (local.set $_134_0 (call $update_byte_slice_1_shift_20 (local.get $_133_0) (local.get $_133_1) (local.get $_133_2) (local.get $_133_3) (local.get $_132_0) (local.get $_132_1) (local.get $_132_2) (local.get $_132_3)))
            (local.set $_134_1 (global.get $global_))
            (local.set $_134_2 (global.get $global__1))
            (local.set $_134_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_124_0) (local.get $slot_124_1) (local.get $slot_124_2) (local.get $slot_124_3) (local.get $_134_0) (local.get $_134_1) (local.get $_134_2) (local.get $_134_3))
    )
)

(func $update_storage_value_offset_2t_rational_3600_by_1_to_t_uint32
    (param $slot_127_0 i64)
    (param $slot_127_1 i64)
    (param $slot_127_2 i64)
    (param $slot_127_3 i64)
    (param $value_0_128_0 i64)
    (param $value_0_128_1 i64)
    (param $value_0_128_2 i64)
    (param $value_0_128_3 i64)
    (local $convertedValue_0_129_0 i64)
    (local $convertedValue_0_129_1 i64)
    (local $convertedValue_0_129_2 i64)
    (local $convertedValue_0_129_3 i64)
    (local $_135_0 i64)
    (local $_135_1 i64)
    (local $_135_2 i64)
    (local $_135_3 i64)
    (local $_136_0 i64)
    (local $_136_1 i64)
    (local $_136_2 i64)
    (local $_136_3 i64)
    (local $_137_0 i64)
    (local $_137_1 i64)
    (local $_137_2 i64)
    (local $_137_3 i64)
    (block $label__60
        (block
            (local.set $convertedValue_0_129_0 (call $convert_t_rational_3600_by_1_to_t_uint32 (local.get $value_0_128_0) (local.get $value_0_128_1) (local.get $value_0_128_2) (local.get $value_0_128_3)))
            (local.set $convertedValue_0_129_1 (global.get $global_))
            (local.set $convertedValue_0_129_2 (global.get $global__1))
            (local.set $convertedValue_0_129_3 (global.get $global__2))

        )
        (block
            (local.set $_135_0 (call $prepare_store_t_uint32 (local.get $convertedValue_0_129_0) (local.get $convertedValue_0_129_1) (local.get $convertedValue_0_129_2) (local.get $convertedValue_0_129_3)))
            (local.set $_135_1 (global.get $global_))
            (local.set $_135_2 (global.get $global__1))
            (local.set $_135_3 (global.get $global__2))

        )
        (block
            (local.set $_136_0 (call $sload (local.get $slot_127_0) (local.get $slot_127_1) (local.get $slot_127_2) (local.get $slot_127_3)))
            (local.set $_136_1 (global.get $global_))
            (local.set $_136_2 (global.get $global__1))
            (local.set $_136_3 (global.get $global__2))

        )
        (block
            (local.set $_137_0 (call $update_byte_slice_4_shift_2 (local.get $_136_0) (local.get $_136_1) (local.get $_136_2) (local.get $_136_3) (local.get $_135_0) (local.get $_135_1) (local.get $_135_2) (local.get $_135_3)))
            (local.set $_137_1 (global.get $global_))
            (local.set $_137_2 (global.get $global__1))
            (local.set $_137_3 (global.get $global__2))

        )
        (call $sstore (local.get $slot_127_0) (local.get $slot_127_1) (local.get $slot_127_2) (local.get $slot_127_3) (local.get $_137_0) (local.get $_137_1) (local.get $_137_2) (local.get $_137_3))
    )
)

(func $add_carry
    (param $x i64)
    (param $y i64)
    (param $c i64)
    (result i64)
    (local $r i64)
    (local $r_c i64)
    (local $t i64)
    (block $label__61
        (local.set $t (i64.add (local.get $x) (local.get $y)))
        (local.set $r (i64.add (local.get $t) (local.get $c)))
        (local.set $r_c (i64.extend_i32_u (i32.or (i64.lt_u (local.get $t) (local.get $x)) (i64.lt_u (local.get $r) (local.get $t)))))

    )
    (global.set $global_ (local.get $r_c))
    (local.get $r)
)

(func $add
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $carry i64)
    (block $label__62
        (nop)
        (block
            (local.set $r4 (call $add_carry (local.get $x4) (local.get $y4) (i64.const 0)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $x3) (local.get $y3) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r2 (call $add_carry (local.get $x2) (local.get $y2) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r1 (call $add_carry (local.get $x1) (local.get $y1) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $sub
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $carry i64)
    (block $label__63
        (nop)
        (block
            (local.set $r4 (call $add_carry (local.get $x4) (call $bit_negate (local.get $y4)) (i64.const 1)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $x3) (call $bit_negate (local.get $y3)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r2 (call $add_carry (local.get $x2) (call $bit_negate (local.get $y2)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r1 (call $add_carry (local.get $x1) (call $bit_negate (local.get $y1)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $sub320
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $carry i64)
    (block $label__64
        (nop)
        (block
            (local.set $r5 (call $add_carry (local.get $x5) (call $bit_negate (local.get $y5)) (i64.const 1)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r4 (call $add_carry (local.get $x4) (call $bit_negate (local.get $y4)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $x3) (call $bit_negate (local.get $y3)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r2 (call $add_carry (local.get $x2) (call $bit_negate (local.get $y2)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r1 (call $add_carry (local.get $x1) (call $bit_negate (local.get $y1)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (local.get $r1)
)

(func $sub512
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (param $y6 i64)
    (param $y7 i64)
    (param $y8 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $r6 i64)
    (local $r7 i64)
    (local $r8 i64)
    (local $carry i64)
    (block $label__66
        (nop)
        (block
            (local.set $r8 (call $add_carry (local.get $x8) (call $bit_negate (local.get $y8)) (i64.const 1)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r7 (call $add_carry (local.get $x7) (call $bit_negate (local.get $y7)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r6 (call $add_carry (local.get $x6) (call $bit_negate (local.get $y6)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r5 (call $add_carry (local.get $x5) (call $bit_negate (local.get $y5)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r4 (call $add_carry (local.get $x4) (call $bit_negate (local.get $y4)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $x3) (call $bit_negate (local.get $y3)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r2 (call $add_carry (local.get $x2) (call $bit_negate (local.get $y2)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $r1 (call $add_carry (local.get $x1) (call $bit_negate (local.get $y1)) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (global.set $global__67 (local.get $r6))
    (global.set $global__68 (local.get $r7))
    (global.set $global__69 (local.get $r8))
    (local.get $r1)
)

(func $mul_64x64_128
    (param $x i64)
    (param $y i64)
    (result i64)
    (local $hi i64)
    (local $lo i64)
    (local $xh i64)
    (local $xl i64)
    (local $yh i64)
    (local $yl i64)
    (local $t0 i64)
    (local $t1 i64)
    (local $t2 i64)
    (local $t3 i64)
    (local $t0h i64)
    (local $t0l i64)
    (local $u1 i64)
    (local $u1h i64)
    (local $u1l i64)
    (local $u2 i64)
    (block $label__70
        (block
            (local.set $xh (call $split (local.get $x)))
            (local.set $xl (global.get $global_))

        )
        (block
            (local.set $yh (call $split (local.get $y)))
            (local.set $yl (global.get $global_))

        )
        (local.set $t0 (i64.mul (local.get $xl) (local.get $yl)))
        (local.set $t1 (i64.mul (local.get $xh) (local.get $yl)))
        (local.set $t2 (i64.mul (local.get $xl) (local.get $yh)))
        (local.set $t3 (i64.mul (local.get $xh) (local.get $yh)))
        (block
            (local.set $t0h (call $split (local.get $t0)))
            (local.set $t0l (global.get $global_))

        )
        (local.set $u1 (i64.add (local.get $t1) (local.get $t0h)))
        (block
            (local.set $u1h (call $split (local.get $u1)))
            (local.set $u1l (global.get $global_))

        )
        (local.set $u2 (i64.add (local.get $t2) (local.get $u1l)))
        (local.set $lo (i64.or (i64.shl (local.get $u2) (i64.const 32)) (local.get $t0l)))
        (local.set $hi (i64.add (local.get $t3) (i64.add (i64.shr_u (local.get $u2) (i64.const 32)) (local.get $u1h))))

    )
    (global.set $global_ (local.get $lo))
    (local.get $hi)
)

(func $mul_128x128_256
    (param $x1 i64)
    (param $x2 i64)
    (param $y1 i64)
    (param $y2 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $ah i64)
    (local $al i64)
    (local $bh i64)
    (local $bl i64)
    (local $ch i64)
    (local $cl i64)
    (local $dh i64)
    (local $dl i64)
    (local $carry1 i64)
    (local $carry2 i64)
    (local $t1 i64)
    (local $t2 i64)
    (block $label__71
        (block
            (local.set $ah (call $mul_64x64_128 (local.get $x1) (local.get $y1)))
            (local.set $al (global.get $global_))

        )
        (block
            (local.set $bh (call $mul_64x64_128 (local.get $x1) (local.get $y2)))
            (local.set $bl (global.get $global_))

        )
        (block
            (local.set $ch (call $mul_64x64_128 (local.get $x2) (local.get $y1)))
            (local.set $cl (global.get $global_))

        )
        (block
            (local.set $dh (call $mul_64x64_128 (local.get $x2) (local.get $y2)))
            (local.set $dl (global.get $global_))

        )
        (local.set $r4 (local.get $dl))
        (nop)
        (nop)
        (block
            (local.set $r3 (call $add_carry (local.get $bl) (local.get $cl) (i64.const 0)))
            (local.set $carry1 (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $r3) (local.get $dh) (i64.const 0)))
            (local.set $carry2 (global.get $global_))

        )
        (block
            (local.set $t1 (call $add_carry (local.get $bh) (local.get $ch) (local.get $carry1)))
            (local.set $carry1 (global.get $global_))

        )
        (block
            (local.set $r2 (call $add_carry (local.get $t1) (local.get $al) (local.get $carry2)))
            (local.set $carry2 (global.get $global_))

        )
        (local.set $r1 (i64.add (i64.add (local.get $ah) (local.get $carry1)) (local.get $carry2)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $mul_256x256_512
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $r6 i64)
    (local $r7 i64)
    (local $r8 i64)
    (local $a1 i64)
    (local $a2 i64)
    (local $a3 i64)
    (local $a4 i64)
    (local $b1 i64)
    (local $b2 i64)
    (local $b3 i64)
    (local $b4 i64)
    (local $c1 i64)
    (local $c2 i64)
    (local $c3 i64)
    (local $c4 i64)
    (local $d1 i64)
    (local $d2 i64)
    (local $d3 i64)
    (local $d4 i64)
    (local $carry1 i64)
    (local $carry2 i64)
    (local $t1 i64)
    (local $t2 i64)
    (block $label__72
        (block
            (local.set $a1 (call $mul_128x128_256 (local.get $x1) (local.get $x2) (local.get $y1) (local.get $y2)))
            (local.set $a2 (global.get $global_))
            (local.set $a3 (global.get $global__1))
            (local.set $a4 (global.get $global__2))

        )
        (block
            (local.set $b1 (call $mul_128x128_256 (local.get $x1) (local.get $x2) (local.get $y3) (local.get $y4)))
            (local.set $b2 (global.get $global_))
            (local.set $b3 (global.get $global__1))
            (local.set $b4 (global.get $global__2))

        )
        (block
            (local.set $c1 (call $mul_128x128_256 (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2)))
            (local.set $c2 (global.get $global_))
            (local.set $c3 (global.get $global__1))
            (local.set $c4 (global.get $global__2))

        )
        (block
            (local.set $d1 (call $mul_128x128_256 (local.get $x3) (local.get $x4) (local.get $y3) (local.get $y4)))
            (local.set $d2 (global.get $global_))
            (local.set $d3 (global.get $global__1))
            (local.set $d4 (global.get $global__2))

        )
        (local.set $r8 (local.get $d4))
        (local.set $r7 (local.get $d3))
        (nop)
        (nop)
        (block
            (local.set $r6 (call $add_carry (local.get $b4) (local.get $c4) (i64.const 0)))
            (local.set $carry1 (global.get $global_))

        )
        (block
            (local.set $r6 (call $add_carry (local.get $r6) (local.get $d2) (i64.const 0)))
            (local.set $carry2 (global.get $global_))

        )
        (block
            (local.set $r5 (call $add_carry (local.get $b3) (local.get $c3) (local.get $carry1)))
            (local.set $carry1 (global.get $global_))

        )
        (block
            (local.set $r5 (call $add_carry (local.get $r5) (local.get $d1) (local.get $carry2)))
            (local.set $carry2 (global.get $global_))

        )
        (block
            (local.set $r4 (call $add_carry (local.get $a4) (local.get $b2) (local.get $carry1)))
            (local.set $carry1 (global.get $global_))

        )
        (block
            (local.set $r4 (call $add_carry (local.get $r4) (local.get $c2) (local.get $carry2)))
            (local.set $carry2 (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $a3) (local.get $b1) (local.get $carry1)))
            (local.set $carry1 (global.get $global_))

        )
        (block
            (local.set $r3 (call $add_carry (local.get $r3) (local.get $c1) (local.get $carry2)))
            (local.set $carry2 (global.get $global_))

        )
        (block
            (local.set $r2 (call $add_carry (local.get $a2) (local.get $carry1) (local.get $carry2)))
            (local.set $carry1 (global.get $global_))

        )
        (local.set $r1 (i64.add (local.get $a1) (local.get $carry1)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (global.set $global__67 (local.get $r6))
    (global.set $global__68 (local.get $r7))
    (global.set $global__69 (local.get $r8))
    (local.get $r1)
)

(func $mul
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $b1 i64)
    (local $b2 i64)
    (local $b3 i64)
    (local $b4 i64)
    (local $c1 i64)
    (local $c2 i64)
    (local $c3 i64)
    (local $c4 i64)
    (local $d1 i64)
    (local $d2 i64)
    (local $d3 i64)
    (local $d4 i64)
    (local $t1 i64)
    (local $t2 i64)
    (block $label__73
        (block
            (local.set $b1 (call $mul_128x128_256 (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2)))
            (local.set $b2 (global.get $global_))
            (local.set $b3 (global.get $global__1))
            (local.set $b4 (global.get $global__2))

        )
        (block
            (local.set $c1 (call $mul_128x128_256 (local.get $x1) (local.get $x2) (local.get $y3) (local.get $y4)))
            (local.set $c2 (global.get $global_))
            (local.set $c3 (global.get $global__1))
            (local.set $c4 (global.get $global__2))

        )
        (block
            (local.set $d1 (call $mul_128x128_256 (local.get $x3) (local.get $x4) (local.get $y3) (local.get $y4)))
            (local.set $d2 (global.get $global_))
            (local.set $d3 (global.get $global__1))
            (local.set $d4 (global.get $global__2))

        )
        (local.set $r4 (local.get $d4))
        (local.set $r3 (local.get $d3))
        (nop)
        (block
            (local.set $t1 (call $add (i64.const 0) (i64.const 0) (local.get $b3) (local.get $b4) (i64.const 0) (i64.const 0) (local.get $c3) (local.get $c4)))
            (local.set $t2 (global.get $global_))
            (local.set $r1 (global.get $global__1))
            (local.set $r2 (global.get $global__2))

        )
        (block
            (local.set $t1 (call $add (i64.const 0) (i64.const 0) (local.get $r1) (local.get $r2) (i64.const 0) (i64.const 0) (local.get $d1) (local.get $d2)))
            (local.set $t2 (global.get $global_))
            (local.set $r1 (global.get $global__1))
            (local.set $r2 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $div
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $m1 i64)
    (local $m2 i64)
    (local $m3 i64)
    (local $m4 i64)
    (block $label__74
        (if (call $iszero256 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (then
            (br $label__74)
        ))
        (local.set $m1 (i64.const 0))
        (local.set $m2 (i64.const 0))
        (local.set $m3 (i64.const 0))
        (local.set $m4 (i64.const 1))
        (block $label__75
            (loop $label__77
                (br_if $label__75 (i32.eqz (i32.const 1)))
                (block $label__76
                    (if (i32.or (i64.eqz (i64.clz (local.get $y1))) (call $gte_256x256_64 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))) (then
                        (br $label__75)
                    ))
                    (block
                        (local.set $y1 (call $shl_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))

                    )
                    (block
                        (local.set $m1 (call $shl_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))

                    )

                )
                (br $label__77)
            )

        )
        (block $label__78
            (loop $label__80
                (br_if $label__78 (i32.eqz (call $or_bool (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4))))
                (block $label__79
                    (if (call $gte_256x256_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (then
                        (block
                            (local.set $x1 (call $sub (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                            (local.set $x2 (global.get $global_))
                            (local.set $x3 (global.get $global__1))
                            (local.set $x4 (global.get $global__2))

                        )
                        (block
                            (local.set $r1 (call $add (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
                            (local.set $r2 (global.get $global_))
                            (local.set $r3 (global.get $global__1))
                            (local.set $r4 (global.get $global__2))

                        )
                    ))
                    (block
                        (local.set $y1 (call $shr_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))

                    )
                    (block
                        (local.set $m1 (call $shr_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))

                    )

                )
                (br $label__80)
            )

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $sdiv
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $sign i32)
    (block $label__81
        (local.set $sign (i32.wrap_i64 (i64.shr_u (i64.xor (local.get $x1) (local.get $y1)) (i64.const 63))))
        (if (i64.eqz (i64.clz (local.get $x1))) (then
            (block
                (local.set $x1 (call $xor (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $x2 (global.get $global_))
                (local.set $x3 (global.get $global__1))
                (local.set $x4 (global.get $global__2))

            )
            (block
                (local.set $x1 (call $add (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 1)))
                (local.set $x2 (global.get $global_))
                (local.set $x3 (global.get $global__1))
                (local.set $x4 (global.get $global__2))

            )
        ))
        (if (i64.eqz (i64.clz (local.get $y1))) (then
            (block
                (local.set $y1 (call $xor (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $y2 (global.get $global_))
                (local.set $y3 (global.get $global__1))
                (local.set $y4 (global.get $global__2))

            )
            (block
                (local.set $y1 (call $add (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 1)))
                (local.set $y2 (global.get $global_))
                (local.set $y3 (global.get $global__1))
                (local.set $y4 (global.get $global__2))

            )
        ))
        (block
            (local.set $r1 (call $div (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
            (local.set $r2 (global.get $global_))
            (local.set $r3 (global.get $global__1))
            (local.set $r4 (global.get $global__2))

        )
        (if (local.get $sign) (then
            (block
                (local.set $r1 (call $xor (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $r2 (global.get $global_))
                (local.set $r3 (global.get $global__1))
                (local.set $r4 (global.get $global__2))

            )
            (block
                (local.set $r1 (call $add (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 1)))
                (local.set $r2 (global.get $global_))
                (local.set $r3 (global.get $global__1))
                (local.set $r4 (global.get $global__2))

            )
        ))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $mod
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $m1 i64)
    (local $m2 i64)
    (local $m3 i64)
    (local $m4 i64)
    (block $label__82
        (if (call $iszero256 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (then
            (br $label__82)
        ))
        (local.set $r1 (local.get $x1))
        (local.set $r2 (local.get $x2))
        (local.set $r3 (local.get $x3))
        (local.set $r4 (local.get $x4))
        (local.set $m1 (i64.const 0))
        (local.set $m2 (i64.const 0))
        (local.set $m3 (i64.const 0))
        (local.set $m4 (i64.const 1))
        (block $label__83
            (loop $label__85
                (br_if $label__83 (i32.eqz (i32.const 1)))
                (block $label__84
                    (if (i32.or (i64.eqz (i64.clz (local.get $y1))) (call $gte_256x256_64 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4))) (then
                        (br $label__83)
                    ))
                    (block
                        (local.set $y1 (call $shl_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))

                    )
                    (block
                        (local.set $m1 (call $shl_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))

                    )

                )
                (br $label__85)
            )

        )
        (block $label__86
            (loop $label__88
                (br_if $label__86 (i32.eqz (call $or_bool (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4))))
                (block $label__87
                    (if (call $gte_256x256_64 (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (then
                        (block
                            (local.set $r1 (call $sub (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                            (local.set $r2 (global.get $global_))
                            (local.set $r3 (global.get $global__1))
                            (local.set $r4 (global.get $global__2))

                        )
                    ))
                    (block
                        (local.set $y1 (call $shr_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))

                    )
                    (block
                        (local.set $m1 (call $shr_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))

                    )

                )
                (br $label__88)
            )

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $mod320
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $m1 i64)
    (local $m2 i64)
    (local $m3 i64)
    (local $m4 i64)
    (local $m5 i64)
    (block $label__89
        (if (call $iszero320 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5)) (then
            (br $label__89)
        ))
        (local.set $m1 (i64.const 0))
        (local.set $m2 (i64.const 0))
        (local.set $m3 (i64.const 0))
        (local.set $m4 (i64.const 0))
        (local.set $m5 (i64.const 1))
        (local.set $r1 (local.get $x1))
        (local.set $r2 (local.get $x2))
        (local.set $r3 (local.get $x3))
        (local.set $r4 (local.get $x4))
        (local.set $r5 (local.get $x5))
        (block $label__90
            (loop $label__92
                (br_if $label__90 (i32.eqz (i32.const 1)))
                (block $label__91
                    (if (i32.or (i64.eqz (i64.clz (local.get $y1))) (call $gte_320x320_64 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5))) (then
                        (br $label__90)
                    ))
                    (block
                        (local.set $y1 (call $shl320_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))
                        (local.set $y5 (global.get $global__65))

                    )
                    (block
                        (local.set $m1 (call $shl320_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4) (local.get $m5)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))
                        (local.set $m5 (global.get $global__65))

                    )

                )
                (br $label__92)
            )

        )
        (block $label__93
            (loop $label__95
                (br_if $label__93 (i32.eqz (call $or_bool_320 (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4) (local.get $m5))))
                (block $label__94
                    (if (call $gte_320x320_64 (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5)) (then
                        (block
                            (local.set $r1 (call $sub320 (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5)))
                            (local.set $r2 (global.get $global_))
                            (local.set $r3 (global.get $global__1))
                            (local.set $r4 (global.get $global__2))
                            (local.set $r5 (global.get $global__65))

                        )
                    ))
                    (block
                        (local.set $y1 (call $shr320_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))
                        (local.set $y5 (global.get $global__65))

                    )
                    (block
                        (local.set $m1 (call $shr320_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4) (local.get $m5)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))
                        (local.set $m5 (global.get $global__65))

                    )

                )
                (br $label__95)
            )

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (local.get $r1)
)

(func $mod512
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (param $y6 i64)
    (param $y7 i64)
    (param $y8 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $r6 i64)
    (local $r7 i64)
    (local $r8 i64)
    (local $m1 i64)
    (local $m2 i64)
    (local $m3 i64)
    (local $m4 i64)
    (local $m5 i64)
    (local $m6 i64)
    (local $m7 i64)
    (local $m8 i64)
    (block $label__96
        (if (call $iszero512 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8)) (then
            (br $label__96)
        ))
        (local.set $m1 (i64.const 0))
        (local.set $m2 (i64.const 0))
        (local.set $m3 (i64.const 0))
        (local.set $m4 (i64.const 0))
        (local.set $m5 (i64.const 0))
        (local.set $m6 (i64.const 0))
        (local.set $m7 (i64.const 0))
        (local.set $m8 (i64.const 1))
        (local.set $r1 (local.get $x1))
        (local.set $r2 (local.get $x2))
        (local.set $r3 (local.get $x3))
        (local.set $r4 (local.get $x4))
        (local.set $r5 (local.get $x5))
        (local.set $r6 (local.get $x6))
        (local.set $r7 (local.get $x7))
        (local.set $r8 (local.get $x8))
        (block $label__97
            (loop $label__99
                (br_if $label__97 (i32.eqz (i32.const 1)))
                (block $label__98
                    (if (i32.or (i64.eqz (i64.clz (local.get $y1))) (call $gte_512x512_64 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8) (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5) (local.get $r6) (local.get $r7) (local.get $r8))) (then
                        (br $label__97)
                    ))
                    (block
                        (local.set $y1 (call $shl512_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))
                        (local.set $y5 (global.get $global__65))
                        (local.set $y6 (global.get $global__67))
                        (local.set $y7 (global.get $global__68))
                        (local.set $y8 (global.get $global__69))

                    )
                    (block
                        (local.set $m1 (call $shl512_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4) (local.get $m5) (local.get $m6) (local.get $m7) (local.get $m8)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))
                        (local.set $m5 (global.get $global__65))
                        (local.set $m6 (global.get $global__67))
                        (local.set $m7 (global.get $global__68))
                        (local.set $m8 (global.get $global__69))

                    )

                )
                (br $label__99)
            )

        )
        (block $label__100
            (loop $label__102
                (br_if $label__100 (i32.eqz (call $or_bool_512 (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4) (local.get $m5) (local.get $m6) (local.get $m7) (local.get $m8))))
                (block $label__101
                    (if (call $gte_512x512_64 (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5) (local.get $r6) (local.get $r7) (local.get $r8) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8)) (then
                        (block
                            (local.set $r1 (call $sub512 (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5) (local.get $r6) (local.get $r7) (local.get $r8) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8)))
                            (local.set $r2 (global.get $global_))
                            (local.set $r3 (global.get $global__1))
                            (local.set $r4 (global.get $global__2))
                            (local.set $r5 (global.get $global__65))
                            (local.set $r6 (global.get $global__67))
                            (local.set $r7 (global.get $global__68))
                            (local.set $r8 (global.get $global__69))

                        )
                    ))
                    (block
                        (local.set $y1 (call $shr512_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))
                        (local.set $y5 (global.get $global__65))
                        (local.set $y6 (global.get $global__67))
                        (local.set $y7 (global.get $global__68))
                        (local.set $y8 (global.get $global__69))

                    )
                    (block
                        (local.set $m1 (call $shr512_internal (i64.const 1) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4) (local.get $m5) (local.get $m6) (local.get $m7) (local.get $m8)))
                        (local.set $m2 (global.get $global_))
                        (local.set $m3 (global.get $global__1))
                        (local.set $m4 (global.get $global__2))
                        (local.set $m5 (global.get $global__65))
                        (local.set $m6 (global.get $global__67))
                        (local.set $m7 (global.get $global__68))
                        (local.set $m8 (global.get $global__69))

                    )

                )
                (br $label__102)
            )

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (global.set $global__67 (local.get $r6))
    (global.set $global__68 (local.get $r7))
    (global.set $global__69 (local.get $r8))
    (local.get $r1)
)

(func $smod
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $m1 i64)
    (local $m2 i64)
    (local $m3 i64)
    (local $m4 i64)
    (local $sign i32)
    (block $label__103
        (local.set $m1 (i64.const 0))
        (local.set $m2 (i64.const 0))
        (local.set $m3 (i64.const 0))
        (local.set $m4 (i64.const 1))
        (local.set $sign (i32.wrap_i64 (i64.shr_u (local.get $x1) (i64.const 63))))
        (if (i64.eqz (i64.clz (local.get $x1))) (then
            (block
                (local.set $x1 (call $xor (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $x2 (global.get $global_))
                (local.set $x3 (global.get $global__1))
                (local.set $x4 (global.get $global__2))

            )
            (block
                (local.set $x1 (call $add (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 1)))
                (local.set $x2 (global.get $global_))
                (local.set $x3 (global.get $global__1))
                (local.set $x4 (global.get $global__2))

            )
        ))
        (if (i64.eqz (i64.clz (local.get $y1))) (then
            (block
                (local.set $y1 (call $xor (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $y2 (global.get $global_))
                (local.set $y3 (global.get $global__1))
                (local.set $y4 (global.get $global__2))

            )
            (block
                (local.set $y1 (call $add (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 1)))
                (local.set $y2 (global.get $global_))
                (local.set $y3 (global.get $global__1))
                (local.set $y4 (global.get $global__2))

            )
        ))
        (block
            (local.set $r1 (call $mod (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
            (local.set $r2 (global.get $global_))
            (local.set $r3 (global.get $global__1))
            (local.set $r4 (global.get $global__2))

        )
        (if (local.get $sign) (then
            (block
                (local.set $r1 (call $xor (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $r2 (global.get $global_))
                (local.set $r3 (global.get $global__1))
                (local.set $r4 (global.get $global__2))

            )
            (block
                (local.set $r1 (call $add (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 1)))
                (local.set $r2 (global.get $global_))
                (local.set $r3 (global.get $global__1))
                (local.set $r4 (global.get $global__2))

            )
        ))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $exp
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__104
        (local.set $r4 (i64.const 1))
        (block $label__105
            (loop $label__107
                (br_if $label__105 (i32.eqz (call $or_bool (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4))))
                (block $label__106
                    (if (i32.wrap_i64 (i64.and (local.get $y4) (i64.const 1))) (then
                        (block
                            (local.set $r1 (call $mul (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
                            (local.set $r2 (global.get $global_))
                            (local.set $r3 (global.get $global__1))
                            (local.set $r4 (global.get $global__2))

                        )
                    ))
                    (block
                        (local.set $x1 (call $mul (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
                        (local.set $x2 (global.get $global_))
                        (local.set $x3 (global.get $global__1))
                        (local.set $x4 (global.get $global__2))

                    )
                    (block
                        (local.set $y1 (call $shr_internal (i64.const 1) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                        (local.set $y2 (global.get $global_))
                        (local.set $y3 (global.get $global__1))
                        (local.set $y4 (global.get $global__2))

                    )

                )
                (br $label__107)
            )

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $addmod
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $m1 i64)
    (param $m2 i64)
    (param $m3 i64)
    (param $m4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (local $carry i64)
    (local $z0 i64)
    (block $label__108
        (nop)
        (block
            (local.set $z4 (call $add_carry (local.get $x4) (local.get $y4) (i64.const 0)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $z3 (call $add_carry (local.get $x3) (local.get $y3) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $z2 (call $add_carry (local.get $x2) (local.get $y2) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (block
            (local.set $z1 (call $add_carry (local.get $x1) (local.get $y1) (local.get $carry)))
            (local.set $carry (global.get $global_))

        )
        (nop)
        (block
            (local.set $z0 (call $mod320 (local.get $carry) (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4) (i64.const 0) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
            (local.set $z1 (global.get $global_))
            (local.set $z2 (global.get $global__1))
            (local.set $z3 (global.get $global__2))
            (local.set $z4 (global.get $global__65))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $mulmod
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $m1 i64)
    (param $m2 i64)
    (param $m3 i64)
    (param $m4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $r6 i64)
    (local $r7 i64)
    (local $r8 i64)
    (local $t1 i64)
    (local $t2 i64)
    (local $t3 i64)
    (local $t4 i64)
    (block $label__109
        (block
            (local.set $r1 (call $mul_256x256_512 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
            (local.set $r2 (global.get $global_))
            (local.set $r3 (global.get $global__1))
            (local.set $r4 (global.get $global__2))
            (local.set $r5 (global.get $global__65))
            (local.set $r6 (global.get $global__67))
            (local.set $r7 (global.get $global__68))
            (local.set $r8 (global.get $global__69))

        )
        (nop)
        (nop)
        (nop)
        (nop)
        (block
            (local.set $t1 (call $mod512 (local.get $r1) (local.get $r2) (local.get $r3) (local.get $r4) (local.get $r5) (local.get $r6) (local.get $r7) (local.get $r8) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 0) (local.get $m1) (local.get $m2) (local.get $m3) (local.get $m4)))
            (local.set $t2 (global.get $global_))
            (local.set $t3 (global.get $global__1))
            (local.set $t4 (global.get $global__2))
            (local.set $z1 (global.get $global__65))
            (local.set $z2 (global.get $global__67))
            (local.set $z3 (global.get $global__68))
            (local.set $z4 (global.get $global__69))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $signextend
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (local $d i64)
    (block $label__110
        (local.set $z1 (local.get $y1))
        (local.set $z2 (local.get $y2))
        (local.set $z3 (local.get $y3))
        (local.set $z4 (local.get $y4))
        (if (call $lt_256x256_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 32)) (then
            (local.set $d (i64.mul (i64.sub (i64.const 31) (local.get $x4)) (i64.const 8)))
            (block
                (local.set $z1 (call $shl (i64.const 0) (i64.const 0) (i64.const 0) (local.get $d) (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
                (local.set $z2 (global.get $global_))
                (local.set $z3 (global.get $global__1))
                (local.set $z4 (global.get $global__2))

            )
            (block
                (local.set $z1 (call $sar (i64.const 0) (i64.const 0) (i64.const 0) (local.get $d) (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
                (local.set $z2 (global.get $global_))
                (local.set $z3 (global.get $global__1))
                (local.set $z4 (global.get $global__2))

            )
        ))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $bit_negate
    (param $x i64)
    (result i64)
    (local $y i64)
    (block $label__111
        (local.set $y (i64.xor (local.get $x) (i64.const 18446744073709551615)))

    )
    (local.get $y)
)

(func $split
    (param $x i64)
    (result i64)
    (local $hi i64)
    (local $lo i64)
    (block $label__112
        (local.set $hi (i64.shr_u (local.get $x) (i64.const 32)))
        (local.set $lo (i64.and (local.get $x) (i64.const 4294967295)))

    )
    (global.set $global_ (local.get $lo))
    (local.get $hi)
)

(func $shl_internal
    (param $amount i64)
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__113
        (local.set $r1 (i64.add (i64.shl (local.get $x1) (local.get $amount)) (i64.shr_u (local.get $x2) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r2 (i64.add (i64.shl (local.get $x2) (local.get $amount)) (i64.shr_u (local.get $x3) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r3 (i64.add (i64.shl (local.get $x3) (local.get $amount)) (i64.shr_u (local.get $x4) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r4 (i64.shl (local.get $x4) (local.get $amount)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $shr_internal
    (param $amount i64)
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__114
        (local.set $r4 (i64.add (i64.shr_u (local.get $x4) (local.get $amount)) (i64.shl (local.get $x3) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r3 (i64.add (i64.shr_u (local.get $x3) (local.get $amount)) (i64.shl (local.get $x2) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r2 (i64.add (i64.shr_u (local.get $x2) (local.get $amount)) (i64.shl (local.get $x1) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r1 (i64.shr_u (local.get $x1) (local.get $amount)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $shl320_internal
    (param $amount i64)
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (block $label__115
        (local.set $r1 (i64.add (i64.shl (local.get $x1) (local.get $amount)) (i64.shr_u (local.get $x2) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r2 (i64.add (i64.shl (local.get $x2) (local.get $amount)) (i64.shr_u (local.get $x3) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r3 (i64.add (i64.shl (local.get $x3) (local.get $amount)) (i64.shr_u (local.get $x4) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r4 (i64.add (i64.shl (local.get $x4) (local.get $amount)) (i64.shr_u (local.get $x5) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r5 (i64.shl (local.get $x5) (i64.const 1)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (local.get $r1)
)

(func $shr320_internal
    (param $amount i64)
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (block $label__116
        (local.set $r5 (i64.add (i64.shr_u (local.get $x5) (local.get $amount)) (i64.shl (local.get $x4) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r4 (i64.add (i64.shr_u (local.get $x4) (local.get $amount)) (i64.shl (local.get $x3) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r3 (i64.add (i64.shr_u (local.get $x3) (local.get $amount)) (i64.shl (local.get $x2) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r2 (i64.add (i64.shr_u (local.get $x2) (local.get $amount)) (i64.shl (local.get $x1) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r1 (i64.shr_u (local.get $x1) (i64.const 1)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (local.get $r1)
)

(func $shl512_internal
    (param $amount i64)
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $r6 i64)
    (local $r7 i64)
    (local $r8 i64)
    (block $label__117
        (local.set $r1 (i64.add (i64.shl (local.get $x1) (local.get $amount)) (i64.shr_u (local.get $x2) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r2 (i64.add (i64.shl (local.get $x2) (local.get $amount)) (i64.shr_u (local.get $x3) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r3 (i64.add (i64.shl (local.get $x3) (local.get $amount)) (i64.shr_u (local.get $x4) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r4 (i64.add (i64.shl (local.get $x4) (local.get $amount)) (i64.shr_u (local.get $x5) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r5 (i64.add (i64.shl (local.get $x5) (local.get $amount)) (i64.shr_u (local.get $x6) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r6 (i64.add (i64.shl (local.get $x6) (local.get $amount)) (i64.shr_u (local.get $x7) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r7 (i64.add (i64.shl (local.get $x7) (local.get $amount)) (i64.shr_u (local.get $x8) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r8 (i64.shl (local.get $x8) (local.get $amount)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (global.set $global__67 (local.get $r6))
    (global.set $global__68 (local.get $r7))
    (global.set $global__69 (local.get $r8))
    (local.get $r1)
)

(func $shr512_internal
    (param $amount i64)
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $r5 i64)
    (local $r6 i64)
    (local $r7 i64)
    (local $r8 i64)
    (block $label__118
        (local.set $r8 (i64.add (i64.shr_u (local.get $x8) (local.get $amount)) (i64.shl (local.get $x7) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r7 (i64.add (i64.shr_u (local.get $x7) (local.get $amount)) (i64.shl (local.get $x6) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r6 (i64.add (i64.shr_u (local.get $x6) (local.get $amount)) (i64.shl (local.get $x5) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r5 (i64.add (i64.shr_u (local.get $x5) (local.get $amount)) (i64.shl (local.get $x4) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r4 (i64.add (i64.shr_u (local.get $x4) (local.get $amount)) (i64.shl (local.get $x3) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r3 (i64.add (i64.shr_u (local.get $x3) (local.get $amount)) (i64.shl (local.get $x2) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r2 (i64.add (i64.shr_u (local.get $x2) (local.get $amount)) (i64.shl (local.get $x1) (i64.sub (i64.const 64) (local.get $amount)))))
        (local.set $r1 (i64.shr_u (local.get $x1) (local.get $amount)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (global.set $global__65 (local.get $r5))
    (global.set $global__67 (local.get $r6))
    (global.set $global__68 (local.get $r7))
    (global.set $global__69 (local.get $r8))
    (local.get $r1)
)

(func $byte
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $component i64)
    (local $condition i64)
    (block $label__119
        (if (i64.eqz (i64.or (i64.or (local.get $x1) (local.get $x2)) (local.get $x3))) (then
            (nop)
            (block
                (local.set $condition (i64.div_u (local.get $x4) (i64.const 8)))
                (if (i64.eq (local.get $condition) (i64.const 0)) (then
                    (local.set $component (local.get $y1))
                )(else
                    (if (i64.eq (local.get $condition) (i64.const 1)) (then
                        (local.set $component (local.get $y2))
                    )(else
                        (if (i64.eq (local.get $condition) (i64.const 2)) (then
                            (local.set $component (local.get $y3))
                        )(else
                            (if (i64.eq (local.get $condition) (i64.const 3)) (then
                                (local.set $component (local.get $y4))
                            ))
                        ))
                    ))
                ))

            )
            (local.set $x4 (i64.mul (i64.rem_u (local.get $x4) (i64.const 8)) (i64.const 8)))
            (local.set $r4 (i64.shr_u (local.get $component) (i64.sub (i64.const 56) (local.get $x4))))
            (local.set $r4 (i64.and (i64.const 255) (local.get $r4)))
        ))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $xor
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__120
        (local.set $r1 (i64.xor (local.get $x1) (local.get $y1)))
        (local.set $r2 (i64.xor (local.get $x2) (local.get $y2)))
        (local.set $r3 (i64.xor (local.get $x3) (local.get $y3)))
        (local.set $r4 (i64.xor (local.get $x4) (local.get $y4)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $or
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__121
        (local.set $r1 (i64.or (local.get $x1) (local.get $y1)))
        (local.set $r2 (i64.or (local.get $x2) (local.get $y2)))
        (local.set $r3 (i64.or (local.get $x3) (local.get $y3)))
        (local.set $r4 (i64.or (local.get $x4) (local.get $y4)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $and
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__122
        (local.set $r1 (i64.and (local.get $x1) (local.get $y1)))
        (local.set $r2 (i64.and (local.get $x2) (local.get $y2)))
        (local.set $r3 (i64.and (local.get $x3) (local.get $y3)))
        (local.set $r4 (i64.and (local.get $x4) (local.get $y4)))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $not
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (local $mask i64)
    (block $label__123
        (local.set $mask (i64.const 18446744073709551615))
        (block
            (local.set $r1 (call $xor (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $mask) (local.get $mask) (local.get $mask) (local.get $mask)))
            (local.set $r2 (global.get $global_))
            (local.set $r3 (global.get $global__1))
            (local.set $r4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $shl_single
    (param $a i64)
    (param $amount i64)
    (result i64)
    (local $x i64)
    (local $y i64)
    (block $label__124
        (local.set $x (i64.shr_u (local.get $a) (i64.sub (i64.const 64) (local.get $amount))))
        (local.set $y (i64.shl (local.get $a) (local.get $amount)))

    )
    (global.set $global_ (local.get $y))
    (local.get $x)
)

(func $shl
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (local $t i64)
    (local $r i64)
    (block $label__125
        (if (i32.and (i64.eqz (local.get $x1)) (i64.eqz (local.get $x2))) (then
            (if (i64.eqz (local.get $x3)) (then
                (if (i64.lt_u (local.get $x4) (i64.const 256)) (then
                    (if (i64.ge_u (local.get $x4) (i64.const 128)) (then
                        (local.set $y1 (local.get $y3))
                        (local.set $y2 (local.get $y4))
                        (local.set $y3 (i64.const 0))
                        (local.set $y4 (i64.const 0))
                        (local.set $x4 (i64.sub (local.get $x4) (i64.const 128)))
                    ))
                    (if (i64.ge_u (local.get $x4) (i64.const 64)) (then
                        (local.set $y1 (local.get $y2))
                        (local.set $y2 (local.get $y3))
                        (local.set $y3 (local.get $y4))
                        (local.set $y4 (i64.const 0))
                        (local.set $x4 (i64.sub (local.get $x4) (i64.const 64)))
                    ))
                    (nop)
                    (block
                        (local.set $t (call $shl_single (local.get $y4) (local.get $x4)))
                        (local.set $z4 (global.get $global_))

                    )
                    (block
                        (local.set $r (call $shl_single (local.get $y3) (local.get $x4)))
                        (local.set $z3 (global.get $global_))

                    )
                    (local.set $z3 (i64.or (local.get $z3) (local.get $t)))
                    (block
                        (local.set $t (call $shl_single (local.get $y2) (local.get $x4)))
                        (local.set $z2 (global.get $global_))

                    )
                    (local.set $z2 (i64.or (local.get $z2) (local.get $r)))
                    (block
                        (local.set $r (call $shl_single (local.get $y1) (local.get $x4)))
                        (local.set $z1 (global.get $global_))

                    )
                    (local.set $z1 (i64.or (local.get $z1) (local.get $t)))
                ))
            ))
        ))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $shr_single
    (param $a i64)
    (param $amount i64)
    (result i64)
    (local $x i64)
    (local $y i64)
    (block $label__126
        (local.set $y (i64.shl (local.get $a) (i64.sub (i64.const 64) (local.get $amount))))
        (local.set $x (i64.shr_u (local.get $a) (local.get $amount)))

    )
    (global.set $global_ (local.get $y))
    (local.get $x)
)

(func $shr
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (local $t i64)
    (block $label__127
        (if (i32.and (i64.eqz (local.get $x1)) (i64.eqz (local.get $x2))) (then
            (if (i64.eqz (local.get $x3)) (then
                (if (i64.lt_u (local.get $x4) (i64.const 256)) (then
                    (if (i64.ge_u (local.get $x4) (i64.const 128)) (then
                        (local.set $y4 (local.get $y2))
                        (local.set $y3 (local.get $y1))
                        (local.set $y2 (i64.const 0))
                        (local.set $y1 (i64.const 0))
                        (local.set $x4 (i64.sub (local.get $x4) (i64.const 128)))
                    ))
                    (if (i64.ge_u (local.get $x4) (i64.const 64)) (then
                        (local.set $y4 (local.get $y3))
                        (local.set $y3 (local.get $y2))
                        (local.set $y2 (local.get $y1))
                        (local.set $y1 (i64.const 0))
                        (local.set $x4 (i64.sub (local.get $x4) (i64.const 64)))
                    ))
                    (nop)
                    (block
                        (local.set $z4 (call $shr_single (local.get $y4) (local.get $x4)))
                        (local.set $t (global.get $global_))

                    )
                    (block
                        (local.set $z3 (call $shr_single (local.get $y3) (local.get $x4)))
                        (local.set $t (global.get $global_))

                    )
                    (local.set $z4 (i64.or (local.get $z4) (local.get $t)))
                    (block
                        (local.set $z2 (call $shr_single (local.get $y2) (local.get $x4)))
                        (local.set $t (global.get $global_))

                    )
                    (local.set $z3 (i64.or (local.get $z3) (local.get $t)))
                    (block
                        (local.set $z1 (call $shr_single (local.get $y1) (local.get $x4)))
                        (local.set $t (global.get $global_))

                    )
                    (local.set $z2 (i64.or (local.get $z2) (local.get $t)))
                ))
            ))
        ))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $sar
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__128
        (if (i64.gt_u (i64.clz (local.get $y1)) (i64.const 0)) (then
            (block
                (local.set $z1 (call $shr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                (local.set $z2 (global.get $global_))
                (local.set $z3 (global.get $global__1))
                (local.set $z4 (global.get $global__2))

            )
            (br $label__128)
        ))
        (if (call $gte_256x256_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 256)) (then
            (local.set $z1 (i64.const 18446744073709551615))
            (local.set $z2 (i64.const 18446744073709551615))
            (local.set $z3 (i64.const 18446744073709551615))
            (local.set $z4 (i64.const 18446744073709551615))
        ))
        (if (call $lt_256x256_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (i64.const 0) (i64.const 0) (i64.const 0) (i64.const 256)) (then
            (block
                (local.set $y1 (call $shr (i64.const 0) (i64.const 0) (i64.const 0) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
                (local.set $y2 (global.get $global_))
                (local.set $y3 (global.get $global__1))
                (local.set $y4 (global.get $global__2))

            )
            (block
                (local.set $z1 (call $shl (i64.const 0) (i64.const 0) (i64.const 0) (i64.sub (i64.const 256) (local.get $x4)) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615) (i64.const 18446744073709551615)))
                (local.set $z2 (global.get $global_))
                (local.set $z3 (global.get $global__1))
                (local.set $z4 (global.get $global__2))

            )
            (block
                (local.set $z1 (call $or (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
                (local.set $z2 (global.get $global_))
                (local.set $z3 (global.get $global__1))
                (local.set $z4 (global.get $global__2))

            )
        ))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $iszero
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__129
        (local.set $r4 (i64.extend_i32_u (call $iszero256 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $iszero256
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $r i32)
    (block $label__130
        (local.set $r (i64.eqz (i64.or (i64.or (local.get $x1) (local.get $x2)) (i64.or (local.get $x3) (local.get $x4)))))

    )
    (local.get $r)
)

(func $iszero320
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (result i32)
    (local $r i32)
    (block $label__131
        (local.set $r (i64.eqz (i64.or (i64.or (i64.or (local.get $x1) (local.get $x2)) (i64.or (local.get $x3) (local.get $x4))) (local.get $x5))))

    )
    (local.get $r)
)

(func $iszero512
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (result i32)
    (local $r i32)
    (block $label__132
        (local.set $r (i32.and (call $iszero256 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $iszero256 (local.get $x5) (local.get $x6) (local.get $x7) (local.get $x8))))

    )
    (local.get $r)
)

(func $eq
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (local $r4 i64)
    (block $label__133
        (if (i64.eq (local.get $x1) (local.get $y1)) (then
            (if (i64.eq (local.get $x2) (local.get $y2)) (then
                (if (i64.eq (local.get $x3) (local.get $y3)) (then
                    (if (i64.eq (local.get $x4) (local.get $y4)) (then
                        (local.set $r4 (i64.const 1))
                    ))
                ))
            ))
        ))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (global.set $global__2 (local.get $r4))
    (local.get $r1)
)

(func $cmp
    (param $a i64)
    (param $b i64)
    (result i32)
    (local $r i32)
    (local $condition_135 i32)
    (block $label__134
        (block
            (local.set $condition_135 (i64.lt_u (local.get $a) (local.get $b)))
            (if (i32.eq (local.get $condition_135) (i32.const 1)) (then
                (local.set $r (i32.const 4294967295))
            )(else
                (local.set $r (i64.ne (local.get $a) (local.get $b)))
            ))

        )

    )
    (local.get $r)
)

(func $lt_320x320_64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (result i32)
    (local $z i32)
    (local $condition_137 i32)
    (local $condition_138 i32)
    (local $condition_139 i32)
    (local $condition_140 i32)
    (block $label__136
        (block
            (local.set $condition_137 (call $cmp (local.get $x1) (local.get $y1)))
            (if (i32.eq (local.get $condition_137) (i32.const 0)) (then
                (block
                    (local.set $condition_138 (call $cmp (local.get $x2) (local.get $y2)))
                    (if (i32.eq (local.get $condition_138) (i32.const 0)) (then
                        (block
                            (local.set $condition_139 (call $cmp (local.get $x3) (local.get $y3)))
                            (if (i32.eq (local.get $condition_139) (i32.const 0)) (then
                                (block
                                    (local.set $condition_140 (call $cmp (local.get $x4) (local.get $y4)))
                                    (if (i32.eq (local.get $condition_140) (i32.const 0)) (then
                                        (local.set $z (i64.lt_u (local.get $x5) (local.get $y5)))
                                    )(else
                                        (if (i32.eq (local.get $condition_140) (i32.const 1)) (then
                                            (local.set $z (i32.const 0))
                                        )(else
                                            (local.set $z (i32.const 1))
                                        ))
                                    ))

                                )
                            )(else
                                (if (i32.eq (local.get $condition_139) (i32.const 1)) (then
                                    (local.set $z (i32.const 0))
                                )(else
                                    (local.set $z (i32.const 1))
                                ))
                            ))

                        )
                    )(else
                        (if (i32.eq (local.get $condition_138) (i32.const 1)) (then
                            (local.set $z (i32.const 0))
                        )(else
                            (local.set $z (i32.const 1))
                        ))
                    ))

                )
            )(else
                (if (i32.eq (local.get $condition_137) (i32.const 1)) (then
                    (local.set $z (i32.const 0))
                )(else
                    (local.set $z (i32.const 1))
                ))
            ))

        )

    )
    (local.get $z)
)

(func $lt_512x512_64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (param $y6 i64)
    (param $y7 i64)
    (param $y8 i64)
    (result i32)
    (local $z i32)
    (local $condition_142 i32)
    (local $condition_143 i32)
    (local $condition_144 i32)
    (local $condition_145 i32)
    (local $condition_146 i32)
    (local $condition_147 i32)
    (local $condition_148 i32)
    (block $label__141
        (block
            (local.set $condition_142 (call $cmp (local.get $x1) (local.get $y1)))
            (if (i32.eq (local.get $condition_142) (i32.const 0)) (then
                (block
                    (local.set $condition_143 (call $cmp (local.get $x2) (local.get $y2)))
                    (if (i32.eq (local.get $condition_143) (i32.const 0)) (then
                        (block
                            (local.set $condition_144 (call $cmp (local.get $x3) (local.get $y3)))
                            (if (i32.eq (local.get $condition_144) (i32.const 0)) (then
                                (block
                                    (local.set $condition_145 (call $cmp (local.get $x4) (local.get $y4)))
                                    (if (i32.eq (local.get $condition_145) (i32.const 0)) (then
                                        (block
                                            (local.set $condition_146 (call $cmp (local.get $x5) (local.get $y5)))
                                            (if (i32.eq (local.get $condition_146) (i32.const 0)) (then
                                                (block
                                                    (local.set $condition_147 (call $cmp (local.get $x6) (local.get $y6)))
                                                    (if (i32.eq (local.get $condition_147) (i32.const 0)) (then
                                                        (block
                                                            (local.set $condition_148 (call $cmp (local.get $x7) (local.get $y7)))
                                                            (if (i32.eq (local.get $condition_148) (i32.const 0)) (then
                                                                (local.set $z (i64.lt_u (local.get $x8) (local.get $y8)))
                                                            )(else
                                                                (if (i32.eq (local.get $condition_148) (i32.const 1)) (then
                                                                    (local.set $z (i32.const 0))
                                                                )(else
                                                                    (local.set $z (i32.const 1))
                                                                ))
                                                            ))

                                                        )
                                                    )(else
                                                        (if (i32.eq (local.get $condition_147) (i32.const 1)) (then
                                                            (local.set $z (i32.const 0))
                                                        )(else
                                                            (local.set $z (i32.const 1))
                                                        ))
                                                    ))

                                                )
                                            )(else
                                                (if (i32.eq (local.get $condition_146) (i32.const 1)) (then
                                                    (local.set $z (i32.const 0))
                                                )(else
                                                    (local.set $z (i32.const 1))
                                                ))
                                            ))

                                        )
                                    )(else
                                        (if (i32.eq (local.get $condition_145) (i32.const 1)) (then
                                            (local.set $z (i32.const 0))
                                        )(else
                                            (local.set $z (i32.const 1))
                                        ))
                                    ))

                                )
                            )(else
                                (if (i32.eq (local.get $condition_144) (i32.const 1)) (then
                                    (local.set $z (i32.const 0))
                                )(else
                                    (local.set $z (i32.const 1))
                                ))
                            ))

                        )
                    )(else
                        (if (i32.eq (local.get $condition_143) (i32.const 1)) (then
                            (local.set $z (i32.const 0))
                        )(else
                            (local.set $z (i32.const 1))
                        ))
                    ))

                )
            )(else
                (if (i32.eq (local.get $condition_142) (i32.const 1)) (then
                    (local.set $z (i32.const 0))
                )(else
                    (local.set $z (i32.const 1))
                ))
            ))

        )

    )
    (local.get $z)
)

(func $lt_256x256_64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i32)
    (local $z i32)
    (local $condition_150 i32)
    (local $condition_151 i32)
    (local $condition_152 i32)
    (block $label__149
        (block
            (local.set $condition_150 (call $cmp (local.get $x1) (local.get $y1)))
            (if (i32.eq (local.get $condition_150) (i32.const 0)) (then
                (block
                    (local.set $condition_151 (call $cmp (local.get $x2) (local.get $y2)))
                    (if (i32.eq (local.get $condition_151) (i32.const 0)) (then
                        (block
                            (local.set $condition_152 (call $cmp (local.get $x3) (local.get $y3)))
                            (if (i32.eq (local.get $condition_152) (i32.const 0)) (then
                                (local.set $z (i64.lt_u (local.get $x4) (local.get $y4)))
                            )(else
                                (if (i32.eq (local.get $condition_152) (i32.const 1)) (then
                                    (local.set $z (i32.const 0))
                                )(else
                                    (local.set $z (i32.const 1))
                                ))
                            ))

                        )
                    )(else
                        (if (i32.eq (local.get $condition_151) (i32.const 1)) (then
                            (local.set $z (i32.const 0))
                        )(else
                            (local.set $z (i32.const 1))
                        ))
                    ))

                )
            )(else
                (if (i32.eq (local.get $condition_150) (i32.const 1)) (then
                    (local.set $z (i32.const 0))
                )(else
                    (local.set $z (i32.const 1))
                ))
            ))

        )

    )
    (local.get $z)
)

(func $lt
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__153
        (local.set $z4 (i64.extend_i32_u (call $lt_256x256_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4))))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $gte_256x256_64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i32)
    (local $z i32)
    (block $label__154
        (local.set $z (i32.eqz (call $lt_256x256_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4))))

    )
    (local.get $z)
)

(func $gte_320x320_64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (result i32)
    (local $z i32)
    (block $label__155
        (local.set $z (i32.eqz (call $lt_320x320_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $x5) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5))))

    )
    (local.get $z)
)

(func $gte_512x512_64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $x5 i64)
    (param $x6 i64)
    (param $x7 i64)
    (param $x8 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $y5 i64)
    (param $y6 i64)
    (param $y7 i64)
    (param $y8 i64)
    (result i32)
    (local $z i32)
    (block $label__156
        (local.set $z (i32.eqz (call $lt_512x512_64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $x5) (local.get $x6) (local.get $x7) (local.get $x8) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $y5) (local.get $y6) (local.get $y7) (local.get $y8))))

    )
    (local.get $z)
)

(func $gt
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__157
        (block
            (local.set $z1 (call $lt (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $slt
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__158
        (local.set $x1 (i64.add (local.get $x1) (i64.const 9223372036854775808)))
        (local.set $y1 (i64.add (local.get $y1) (i64.const 9223372036854775808)))
        (block
            (local.set $z1 (call $lt (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $sgt
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__159
        (block
            (local.set $z1 (call $slt (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $u256_to_u128
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $v1 i64)
    (local $v2 i64)
    (block $label__160
        (if (i64.ne (i64.const 0) (i64.or (local.get $x1) (local.get $x2))) (then
            (call $invalid)))
        (local.set $v2 (local.get $x4))
        (local.set $v1 (local.get $x3))

    )
    (global.set $global_ (local.get $v2))
    (local.get $v1)
)

(func $u256_to_i64
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $v i64)
    (block $label__161
        (if (i64.ne (i64.const 0) (i64.or (i64.or (local.get $x1) (local.get $x2)) (local.get $x3))) (then
            (call $invalid)))
        (local.set $v (local.get $x4))

    )
    (local.get $v)
)

(func $u256_to_i32
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $v i32)
    (block $label__162
        (if (i64.ne (i64.const 0) (i64.or (i64.or (local.get $x1) (local.get $x2)) (local.get $x3))) (then
            (call $invalid)))
        (if (i64.ne (i64.const 0) (i64.shr_u (local.get $x4) (i64.const 32))) (then
            (call $invalid)))
        (local.set $v (i32.wrap_i64 (local.get $x4)))

    )
    (local.get $v)
)

(func $u256_to_byte
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $v i64)
    (block $label__163
        (if (i64.ne (i64.const 0) (i64.or (i64.or (local.get $x1) (local.get $x2)) (local.get $x3))) (then
            (call $invalid)))
        (if (i64.gt_u (local.get $x4) (i64.const 255)) (then
            (call $invalid)))
        (local.set $v (local.get $x4))

    )
    (local.get $v)
)

(func $u256_to_i32ptr
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $v i32)
    (block $label__164
        (local.set $v (call $u256_to_i32 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))

    )
    (local.get $v)
)

(func $to_internal_i32ptr
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $r i32)
    (local $p i32)
    (block $label__165
        (local.set $p (call $u256_to_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
        (local.set $r (i32.add (local.get $p) (i32.const 64)))
        (if (i32.lt_u (local.get $r) (local.get $p)) (then
            (call $invalid)))

    )
    (local.get $r)
)

(func $u256_to_address
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $r1 i64)
    (local $r2 i64)
    (local $r3 i64)
    (block $label__166
        (if (i64.ne (i64.const 0) (local.get $x1)) (then
            (call $invalid)))
        (if (i64.ne (i64.const 0) (i64.shr_u (local.get $x2) (i64.const 32))) (then
            (call $invalid)))
        (local.set $r1 (local.get $x2))
        (local.set $r2 (local.get $x3))
        (local.set $r3 (local.get $x4))

    )
    (global.set $global_ (local.get $r2))
    (global.set $global__1 (local.get $r3))
    (local.get $r1)
)

(func $bswap16
    (param $x i64)
    (result i64)
    (local $y i64)
    (local $hi i64)
    (local $lo i64)
    (block $label__167
        (local.set $hi (i64.and (i64.shl (local.get $x) (i64.const 8)) (i64.const 65280)))
        (local.set $lo (i64.and (i64.shr_u (local.get $x) (i64.const 8)) (i64.const 255)))
        (local.set $y (i64.or (local.get $hi) (local.get $lo)))

    )
    (local.get $y)
)

(func $bswap32
    (param $x i64)
    (result i64)
    (local $y i64)
    (local $hi i64)
    (local $lo i64)
    (block $label__168
        (local.set $hi (i64.shl (call $bswap16 (local.get $x)) (i64.const 16)))
        (local.set $lo (call $bswap16 (i64.shr_u (local.get $x) (i64.const 16))))
        (local.set $y (i64.or (local.get $hi) (local.get $lo)))

    )
    (local.get $y)
)

(func $bswap64
    (param $x i64)
    (result i64)
    (local $y i64)
    (local $hi i64)
    (local $lo i64)
    (block $label__169
        (local.set $hi (i64.shl (call $bswap32 (local.get $x)) (i64.const 32)))
        (local.set $lo (call $bswap32 (i64.shr_u (local.get $x) (i64.const 32))))
        (local.set $y (i64.or (local.get $hi) (local.get $lo)))

    )
    (local.get $y)
)

(func $address
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__170
        (call $eth.getAddress (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $balance
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__171
        (call $mstore_address (i32.const 0) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))
        (call $eth.getExternalBalance (i32.const 12) (i32.const 48))
        (block
            (local.set $z1 (call $mload_internal (i32.const 32)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $selfbalance
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__172
        (unreachable)
    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $chainid
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__173
        (unreachable)
    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $origin
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__174
        (call $eth.getTxOrigin (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $caller
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__175
        (call $eth.getCaller (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $callvalue
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__176
        (call $eth.getCallValue (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $calldataload
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__177
        (call $eth.callDataCopy (i32.const 0) (call $u256_to_i32 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (i32.const 32))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $calldatasize
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__178
        (local.set $z4 (i64.extend_i32_u (call $eth.getCallDataSize)))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $calldatacopy
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $z1 i64)
    (param $z2 i64)
    (param $z3 i64)
    (param $z4 i64)
    (block $label__179
        (call $eth.callDataCopy (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (call $u256_to_i32 (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
    )
)

(func $codesize
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__180
        (local.set $z4 (i64.extend_i32_u (call $eth.getCodeSize)))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $codecopy
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $z1 i64)
    (param $z2 i64)
    (param $z3 i64)
    (param $z4 i64)
    (block $label__181
        (call $eth.codeCopy (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (call $u256_to_i32 (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
    )
)

(func $datacopy
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $z1 i64)
    (param $z2 i64)
    (param $z3 i64)
    (param $z4 i64)
    (block $label__182
        (call $codecopy (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4) (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4))
    )
)

(func $gasprice
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__183
        (call $eth.getTxGasPrice (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $extcodesize_internal
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $r i32)
    (block $label__184
        (call $mstore_address (i32.const 0) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))
        (local.set $r (call $eth.getExternalCodeSize (i32.const 12)))

    )
    (local.get $r)
)

(func $extcodesize
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__185
        (local.set $z4 (i64.extend_i32_u (call $extcodesize_internal (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $extcodehash
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__186
        (unreachable)
    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $extcodecopy
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (param $p1 i64)
    (param $p2 i64)
    (param $p3 i64)
    (param $p4 i64)
    (param $o1 i64)
    (param $o2 i64)
    (param $o3 i64)
    (param $o4 i64)
    (param $l1 i64)
    (param $l2 i64)
    (param $l3 i64)
    (param $l4 i64)
    (local $codeOffset i32)
    (local $codeLength i32)
    (block $label__187
        (call $mstore_address (i32.const 0) (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4))
        (local.set $codeOffset (call $u256_to_i32 (local.get $o1) (local.get $o2) (local.get $o3) (local.get $o4)))
        (local.set $codeLength (call $u256_to_i32 (local.get $l1) (local.get $l2) (local.get $l3) (local.get $l4)))
        (call $eth.externalCodeCopy (i32.const 12) (call $to_internal_i32ptr (local.get $p1) (local.get $p2) (local.get $p3) (local.get $p4)) (local.get $codeOffset) (local.get $codeLength))
    )
)

(func $returndatasize
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__188
        (local.set $z4 (i64.extend_i32_u (call $eth.getReturnDataSize)))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $returndatacopy
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $z1 i64)
    (param $z2 i64)
    (param $z3 i64)
    (param $z4 i64)
    (block $label__189
        (call $eth.returnDataCopy (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (call $u256_to_i32 (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
    )
)

(func $blockhash
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (local $r i32)
    (block $label__190
        (local.set $r (call $eth.getBlockHash (call $u256_to_i64 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (i32.const 0)))
        (if (i32.eqz (local.get $r)) (then
            (block
                (local.set $z1 (call $mload_internal (i32.const 0)))
                (local.set $z2 (global.get $global_))
                (local.set $z3 (global.get $global__1))
                (local.set $z4 (global.get $global__2))

            )
        ))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $coinbase
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__191
        (call $eth.getBlockCoinbase (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $timestamp
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__192
        (local.set $z4 (call $eth.getBlockTimestamp))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $number
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__193
        (local.set $z4 (call $eth.getBlockNumber))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $difficulty
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__194
        (call $eth.getBlockDifficulty (i32.const 0))
        (block
            (local.set $z1 (call $mload_internal (i32.const 0)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $gaslimit
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__195
        (local.set $z4 (call $eth.getBlockGasLimit))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $mload
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__196
        (block
            (local.set $z1 (call $mload_internal (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $mload_internal
    (param $pos i32)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__197
        (local.set $z1 (call $bswap64 (i64.load (local.get $pos))))
        (local.set $z2 (call $bswap64 (i64.load (i32.add (local.get $pos) (i32.const 8)))))
        (local.set $z3 (call $bswap64 (i64.load (i32.add (local.get $pos) (i32.const 16)))))
        (local.set $z4 (call $bswap64 (i64.load (i32.add (local.get $pos) (i32.const 24)))))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $mstore
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__198
        (call $mstore_internal (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4))
    )
)

(func $mstore_internal
    (param $pos i32)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__199
        (i64.store (local.get $pos) (call $bswap64 (local.get $y1)))
        (i64.store (i32.add (local.get $pos) (i32.const 8)) (call $bswap64 (local.get $y2)))
        (i64.store (i32.add (local.get $pos) (i32.const 16)) (call $bswap64 (local.get $y3)))
        (i64.store (i32.add (local.get $pos) (i32.const 24)) (call $bswap64 (local.get $y4)))
    )
)

(func $mstore_address
    (param $pos i32)
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (block $label__200
        (block
            (local.set $a1 (call $u256_to_address (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4)))
            (local.set $a2 (global.get $global_))
            (local.set $a3 (global.get $global__1))

        )
        (call $mstore_internal (local.get $pos) (i64.const 0) (local.get $a1) (local.get $a2) (local.get $a3))
    )
)

(func $mstore8
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (local $v i64)
    (block $label__201
        (local.set $v (call $u256_to_byte (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
        (i64.store8 (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (local.get $v))
    )
)

(func $msize
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__202
        (unreachable)
    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $sload
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__203
        (call $mstore_internal (i32.const 0) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))
        (call $eth.storageLoad (i32.const 0) (i32.const 32))
        (block
            (local.set $z1 (call $mload_internal (i32.const 32)))
            (local.set $z2 (global.get $global_))
            (local.set $z3 (global.get $global__1))
            (local.set $z4 (global.get $global__2))

        )

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $sstore
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__204
        (call $mstore_internal (i32.const 0) (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4))
        (call $mstore_internal (i32.const 32) (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4))
        (call $eth.storageStore (i32.const 0) (i32.const 32))
    )
)

(func $gas
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__205
        (local.set $z4 (call $eth.getGasLeft))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $log0
    (param $p1 i64)
    (param $p2 i64)
    (param $p3 i64)
    (param $p4 i64)
    (param $s1 i64)
    (param $s2 i64)
    (param $s3 i64)
    (param $s4 i64)
    (block $label__206
        (call $eth.log (call $to_internal_i32ptr (local.get $p1) (local.get $p2) (local.get $p3) (local.get $p4)) (call $u256_to_i32 (local.get $s1) (local.get $s2) (local.get $s3) (local.get $s4)) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0) (i32.const 0))
    )
)

(func $log1
    (param $p1 i64)
    (param $p2 i64)
    (param $p3 i64)
    (param $p4 i64)
    (param $s1 i64)
    (param $s2 i64)
    (param $s3 i64)
    (param $s4 i64)
    (param $t1_1 i64)
    (param $t1_2 i64)
    (param $t1_3 i64)
    (param $t1_4 i64)
    (block $label__207
        (call $eth.log (call $to_internal_i32ptr (local.get $p1) (local.get $p2) (local.get $p3) (local.get $p4)) (call $u256_to_i32 (local.get $s1) (local.get $s2) (local.get $s3) (local.get $s4)) (i32.const 1) (call $to_internal_i32ptr (local.get $t1_1) (local.get $t1_2) (local.get $t1_3) (local.get $t1_4)) (i32.const 0) (i32.const 0) (i32.const 0))
    )
)

(func $log2
    (param $p1 i64)
    (param $p2 i64)
    (param $p3 i64)
    (param $p4 i64)
    (param $s1 i64)
    (param $s2 i64)
    (param $s3 i64)
    (param $s4 i64)
    (param $t1_1 i64)
    (param $t1_2 i64)
    (param $t1_3 i64)
    (param $t1_4 i64)
    (param $t2_1 i64)
    (param $t2_2 i64)
    (param $t2_3 i64)
    (param $t2_4 i64)
    (block $label__208
        (call $eth.log (call $to_internal_i32ptr (local.get $p1) (local.get $p2) (local.get $p3) (local.get $p4)) (call $u256_to_i32 (local.get $s1) (local.get $s2) (local.get $s3) (local.get $s4)) (i32.const 2) (call $to_internal_i32ptr (local.get $t1_1) (local.get $t1_2) (local.get $t1_3) (local.get $t1_4)) (call $to_internal_i32ptr (local.get $t2_1) (local.get $t2_2) (local.get $t2_3) (local.get $t2_4)) (i32.const 0) (i32.const 0))
    )
)

(func $log3
    (param $p1 i64)
    (param $p2 i64)
    (param $p3 i64)
    (param $p4 i64)
    (param $s1 i64)
    (param $s2 i64)
    (param $s3 i64)
    (param $s4 i64)
    (param $t1_1 i64)
    (param $t1_2 i64)
    (param $t1_3 i64)
    (param $t1_4 i64)
    (param $t2_1 i64)
    (param $t2_2 i64)
    (param $t2_3 i64)
    (param $t2_4 i64)
    (param $t3_1 i64)
    (param $t3_2 i64)
    (param $t3_3 i64)
    (param $t3_4 i64)
    (block $label__209
        (call $eth.log (call $to_internal_i32ptr (local.get $p1) (local.get $p2) (local.get $p3) (local.get $p4)) (call $u256_to_i32 (local.get $s1) (local.get $s2) (local.get $s3) (local.get $s4)) (i32.const 3) (call $to_internal_i32ptr (local.get $t1_1) (local.get $t1_2) (local.get $t1_3) (local.get $t1_4)) (call $to_internal_i32ptr (local.get $t2_1) (local.get $t2_2) (local.get $t2_3) (local.get $t2_4)) (call $to_internal_i32ptr (local.get $t3_1) (local.get $t3_2) (local.get $t3_3) (local.get $t3_4)) (i32.const 0))
    )
)

(func $log4
    (param $p1 i64)
    (param $p2 i64)
    (param $p3 i64)
    (param $p4 i64)
    (param $s1 i64)
    (param $s2 i64)
    (param $s3 i64)
    (param $s4 i64)
    (param $t1_1 i64)
    (param $t1_2 i64)
    (param $t1_3 i64)
    (param $t1_4 i64)
    (param $t2_1 i64)
    (param $t2_2 i64)
    (param $t2_3 i64)
    (param $t2_4 i64)
    (param $t3_1 i64)
    (param $t3_2 i64)
    (param $t3_3 i64)
    (param $t3_4 i64)
    (param $t4_1 i64)
    (param $t4_2 i64)
    (param $t4_3 i64)
    (param $t4_4 i64)
    (block $label__210
        (call $eth.log (call $to_internal_i32ptr (local.get $p1) (local.get $p2) (local.get $p3) (local.get $p4)) (call $u256_to_i32 (local.get $s1) (local.get $s2) (local.get $s3) (local.get $s4)) (i32.const 4) (call $to_internal_i32ptr (local.get $t1_1) (local.get $t1_2) (local.get $t1_3) (local.get $t1_4)) (call $to_internal_i32ptr (local.get $t2_1) (local.get $t2_2) (local.get $t2_3) (local.get $t2_4)) (call $to_internal_i32ptr (local.get $t3_1) (local.get $t3_2) (local.get $t3_3) (local.get $t3_4)) (call $to_internal_i32ptr (local.get $t4_1) (local.get $t4_2) (local.get $t4_3) (local.get $t4_4)))
    )
)

(func $create
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $z1 i64)
    (param $z2 i64)
    (param $z3 i64)
    (param $z4 i64)
    (result i64)
    (local $a1 i64)
    (local $a2 i64)
    (local $a3 i64)
    (local $a4 i64)
    (local $v1 i64)
    (local $v2 i64)
    (local $r i32)
    (block $label__211
        (block
            (local.set $v1 (call $u256_to_u128 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
            (local.set $v2 (global.get $global_))

        )
        (call $mstore_internal (i32.const 0) (i64.const 0) (i64.const 0) (local.get $v1) (local.get $v2))
        (local.set $r (call $eth.create (i32.const 0) (call $to_internal_i32ptr (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (call $u256_to_i32 (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)) (i32.const 32)))
        (if (i32.eqz (local.get $r)) (then
            (block
                (local.set $a1 (call $mload_internal (i32.const 32)))
                (local.set $a2 (global.get $global_))
                (local.set $a3 (global.get $global__1))
                (local.set $a4 (global.get $global__2))

            )
        ))

    )
    (global.set $global_ (local.get $a2))
    (global.set $global__1 (local.get $a3))
    (global.set $global__2 (local.get $a4))
    (local.get $a1)
)

(func $call
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (param $b1 i64)
    (param $b2 i64)
    (param $b3 i64)
    (param $b4 i64)
    (param $c1 i64)
    (param $c2 i64)
    (param $c3 i64)
    (param $c4 i64)
    (param $d1 i64)
    (param $d2 i64)
    (param $d3 i64)
    (param $d4 i64)
    (param $e1 i64)
    (param $e2 i64)
    (param $e3 i64)
    (param $e4 i64)
    (param $f1 i64)
    (param $f2 i64)
    (param $f3 i64)
    (param $f4 i64)
    (param $g1 i64)
    (param $g2 i64)
    (param $g3 i64)
    (param $g4 i64)
    (result i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)
    (local $g i64)
    (local $v1 i64)
    (local $v2 i64)
    (block $label__212
        (local.set $g (call $u256_to_i64 (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4)))
        (call $mstore_address (i32.const 0) (local.get $b1) (local.get $b2) (local.get $b3) (local.get $b4))
        (block
            (local.set $v1 (call $u256_to_u128 (local.get $c1) (local.get $c2) (local.get $c3) (local.get $c4)))
            (local.set $v2 (global.get $global_))

        )
        (call $mstore_internal (i32.const 32) (i64.const 0) (i64.const 0) (local.get $v1) (local.get $v2))
        (local.set $x4 (i64.extend_i32_u (call $eth.call (local.get $g) (i32.const 12) (i32.const 32) (call $to_internal_i32ptr (local.get $d1) (local.get $d2) (local.get $d3) (local.get $d4)) (call $u256_to_i32 (local.get $e1) (local.get $e2) (local.get $e3) (local.get $e4)))))

    )
    (global.set $global_ (local.get $x2))
    (global.set $global__1 (local.get $x3))
    (global.set $global__2 (local.get $x4))
    (local.get $x1)
)

(func $callcode
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (param $b1 i64)
    (param $b2 i64)
    (param $b3 i64)
    (param $b4 i64)
    (param $c1 i64)
    (param $c2 i64)
    (param $c3 i64)
    (param $c4 i64)
    (param $d1 i64)
    (param $d2 i64)
    (param $d3 i64)
    (param $d4 i64)
    (param $e1 i64)
    (param $e2 i64)
    (param $e3 i64)
    (param $e4 i64)
    (param $f1 i64)
    (param $f2 i64)
    (param $f3 i64)
    (param $f4 i64)
    (param $g1 i64)
    (param $g2 i64)
    (param $g3 i64)
    (param $g4 i64)
    (result i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)
    (local $v1 i64)
    (local $v2 i64)
    (block $label__213
        (call $mstore_address (i32.const 0) (local.get $b1) (local.get $b2) (local.get $b3) (local.get $b4))
        (block
            (local.set $v1 (call $u256_to_u128 (local.get $c1) (local.get $c2) (local.get $c3) (local.get $c4)))
            (local.set $v2 (global.get $global_))

        )
        (call $mstore_internal (i32.const 32) (i64.const 0) (i64.const 0) (local.get $v1) (local.get $v2))
        (local.set $x4 (i64.extend_i32_u (call $eth.callCode (call $u256_to_i64 (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4)) (i32.const 12) (i32.const 32) (call $to_internal_i32ptr (local.get $d1) (local.get $d2) (local.get $d3) (local.get $d4)) (call $u256_to_i32 (local.get $e1) (local.get $e2) (local.get $e3) (local.get $e4)))))

    )
    (global.set $global_ (local.get $x2))
    (global.set $global__1 (local.get $x3))
    (global.set $global__2 (local.get $x4))
    (local.get $x1)
)

(func $delegatecall
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (param $b1 i64)
    (param $b2 i64)
    (param $b3 i64)
    (param $b4 i64)
    (param $c1 i64)
    (param $c2 i64)
    (param $c3 i64)
    (param $c4 i64)
    (param $d1 i64)
    (param $d2 i64)
    (param $d3 i64)
    (param $d4 i64)
    (param $e1 i64)
    (param $e2 i64)
    (param $e3 i64)
    (param $e4 i64)
    (param $f1 i64)
    (param $f2 i64)
    (param $f3 i64)
    (param $f4 i64)
    (result i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)
    (block $label__214
        (call $mstore_address (i32.const 0) (local.get $b1) (local.get $b2) (local.get $b3) (local.get $b4))
        (local.set $x4 (i64.extend_i32_u (call $eth.callDelegate (call $u256_to_i64 (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4)) (i32.const 12) (call $to_internal_i32ptr (local.get $c1) (local.get $c2) (local.get $c3) (local.get $c4)) (call $u256_to_i32 (local.get $d1) (local.get $d2) (local.get $d3) (local.get $d4)))))

    )
    (global.set $global_ (local.get $x2))
    (global.set $global__1 (local.get $x3))
    (global.set $global__2 (local.get $x4))
    (local.get $x1)
)

(func $staticcall
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (param $b1 i64)
    (param $b2 i64)
    (param $b3 i64)
    (param $b4 i64)
    (param $c1 i64)
    (param $c2 i64)
    (param $c3 i64)
    (param $c4 i64)
    (param $d1 i64)
    (param $d2 i64)
    (param $d3 i64)
    (param $d4 i64)
    (param $e1 i64)
    (param $e2 i64)
    (param $e3 i64)
    (param $e4 i64)
    (param $f1 i64)
    (param $f2 i64)
    (param $f3 i64)
    (param $f4 i64)
    (result i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)
    (block $label__215
        (call $mstore_address (i32.const 0) (local.get $b1) (local.get $b2) (local.get $b3) (local.get $b4))
        (local.set $x4 (i64.extend_i32_u (call $eth.callStatic (call $u256_to_i64 (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4)) (i32.const 12) (call $to_internal_i32ptr (local.get $c1) (local.get $c2) (local.get $c3) (local.get $c4)) (call $u256_to_i32 (local.get $d1) (local.get $d2) (local.get $d3) (local.get $d4)))))

    )
    (global.set $global_ (local.get $x2))
    (global.set $global__1 (local.get $x3))
    (global.set $global__2 (local.get $x4))
    (local.get $x1)
)

(func $create2
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (param $b1 i64)
    (param $b2 i64)
    (param $b3 i64)
    (param $b4 i64)
    (param $c1 i64)
    (param $c2 i64)
    (param $c3 i64)
    (param $c4 i64)
    (param $d1 i64)
    (param $d2 i64)
    (param $d3 i64)
    (param $d4 i64)
    (result i64)
    (local $x1 i64)
    (local $x2 i64)
    (local $x3 i64)
    (local $x4 i64)
    (block $label__216
        (unreachable)
    )
    (global.set $global_ (local.get $x2))
    (global.set $global__1 (local.get $x3))
    (global.set $global__2 (local.get $x4))
    (local.get $x1)
)

(func $selfdestruct
    (param $a1 i64)
    (param $a2 i64)
    (param $a3 i64)
    (param $a4 i64)
    (block $label__217
        (call $mstore_address (i32.const 0) (local.get $a1) (local.get $a2) (local.get $a3) (local.get $a4))
        (call $eth.selfDestruct (i32.const 12))
    )
)

(func $return
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__218
        (call $eth.finish (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
    )
)

(func $revert
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__219
        (call $eth.revert (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
    )
)

(func $invalid
    (block $label__220
        (unreachable)
    )
)

(func $stop
    (block $label__221
        (call $eth.finish (i32.const 0) (i32.const 0))
    )
)

(func $keccak256
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__222
        (unreachable)
    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $or_bool
    (param $a i64)
    (param $b i64)
    (param $c i64)
    (param $d i64)
    (result i32)
    (local $r i32)
    (block $label__223
        (local.set $r (i32.eqz (i64.eqz (i64.or (i64.or (local.get $a) (local.get $b)) (i64.or (local.get $c) (local.get $d))))))

    )
    (local.get $r)
)

(func $or_bool_320
    (param $a i64)
    (param $b i64)
    (param $c i64)
    (param $d i64)
    (param $e i64)
    (result i32)
    (local $r i32)
    (block $label__224
        (local.set $r (i32.or (call $or_bool (local.get $a) (local.get $b) (local.get $c) (i64.const 0)) (call $or_bool (local.get $d) (local.get $e) (i64.const 0) (i64.const 0))))

    )
    (local.get $r)
)

(func $or_bool_512
    (param $a i64)
    (param $b i64)
    (param $c i64)
    (param $d i64)
    (param $e i64)
    (param $f i64)
    (param $g i64)
    (param $h i64)
    (result i32)
    (local $r i32)
    (block $label__225
        (local.set $r (i32.or (call $or_bool (local.get $a) (local.get $b) (local.get $c) (local.get $d)) (call $or_bool (local.get $e) (local.get $f) (local.get $g) (local.get $h))))

    )
    (local.get $r)
)

(func $save_temp_mem_32
    (result i64)
    (local $t1 i64)
    (local $t2 i64)
    (local $t3 i64)
    (local $t4 i64)
    (block $label__226
        (local.set $t1 (i64.load (i32.const 0)))
        (local.set $t2 (i64.load (i32.const 8)))
        (local.set $t3 (i64.load (i32.const 16)))
        (local.set $t4 (i64.load (i32.const 24)))

    )
    (global.set $global_ (local.get $t2))
    (global.set $global__1 (local.get $t3))
    (global.set $global__2 (local.get $t4))
    (local.get $t1)
)

(func $restore_temp_mem_32
    (param $t1 i64)
    (param $t2 i64)
    (param $t3 i64)
    (param $t4 i64)
    (block $label__227
        (i64.store (i32.const 0) (local.get $t1))
        (i64.store (i32.const 8) (local.get $t2))
        (i64.store (i32.const 16) (local.get $t3))
        (i64.store (i32.const 24) (local.get $t4))
    )
)

(func $save_temp_mem_64
    (result i64)
    (local $t1 i64)
    (local $t2 i64)
    (local $t3 i64)
    (local $t4 i64)
    (local $t5 i64)
    (local $t6 i64)
    (local $t7 i64)
    (local $t8 i64)
    (block $label__228
        (local.set $t1 (i64.load (i32.const 0)))
        (local.set $t2 (i64.load (i32.const 8)))
        (local.set $t3 (i64.load (i32.const 16)))
        (local.set $t4 (i64.load (i32.const 24)))
        (local.set $t5 (i64.load (i32.const 32)))
        (local.set $t6 (i64.load (i32.const 40)))
        (local.set $t7 (i64.load (i32.const 48)))
        (local.set $t8 (i64.load (i32.const 54)))

    )
    (global.set $global_ (local.get $t2))
    (global.set $global__1 (local.get $t3))
    (global.set $global__2 (local.get $t4))
    (global.set $global__65 (local.get $t5))
    (global.set $global__67 (local.get $t6))
    (global.set $global__68 (local.get $t7))
    (global.set $global__69 (local.get $t8))
    (local.get $t1)
)

(func $restore_temp_mem_64
    (param $t1 i64)
    (param $t2 i64)
    (param $t3 i64)
    (param $t4 i64)
    (param $t5 i64)
    (param $t6 i64)
    (param $t7 i64)
    (param $t8 i64)
    (block $label__229
        (i64.store (i32.const 0) (local.get $t1))
        (i64.store (i32.const 8) (local.get $t2))
        (i64.store (i32.const 16) (local.get $t3))
        (i64.store (i32.const 24) (local.get $t4))
        (i64.store (i32.const 32) (local.get $t5))
        (i64.store (i32.const 40) (local.get $t6))
        (i64.store (i32.const 48) (local.get $t7))
        (i64.store (i32.const 54) (local.get $t8))
    )
)

(func $pop
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (block $label__230

    )
)

(func $memoryguard
    (param $x i64)
    (result i64)
    (local $y1 i64)
    (local $y2 i64)
    (local $y3 i64)
    (local $y4 i64)
    (block $label__231
        (local.set $y4 (local.get $x))

    )
    (global.set $global_ (local.get $y2))
    (global.set $global__1 (local.get $y3))
    (global.set $global__2 (local.get $y4))
    (local.get $y1)
)

)
